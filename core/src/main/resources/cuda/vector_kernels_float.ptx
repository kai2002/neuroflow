//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-21373419
// Cuda compilation tools, release 8.0, V8.0.55
// Based on LLVM 3.4svn
//

.version 5.0
.target sm_30
.address_size 64

	// .globl	map_relu_a_float
.func  (.param .b64 func_retval0) __internal_accurate_pow
(
	.param .b64 __internal_accurate_pow_param_0
)
;
.const .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};

.visible .entry map_relu_a_float(
	.param .u32 map_relu_a_float_param_0,
	.param .u64 map_relu_a_float_param_1,
	.param .u32 map_relu_a_float_param_2,
	.param .u64 map_relu_a_float_param_3,
	.param .u32 map_relu_a_float_param_4
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<15>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r6, [map_relu_a_float_param_0];
	ld.param.u64 	%rd3, [map_relu_a_float_param_1];
	ld.param.u32 	%r7, [map_relu_a_float_param_2];
	ld.param.u64 	%rd4, [map_relu_a_float_param_3];
	ld.param.u32 	%r8, [map_relu_a_float_param_4];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r14, %r1, %r9, %r10;
	setp.ge.s32	%p1, %r14, %r6;
	@%p1 bra 	BB0_3;

	cvta.to.global.u64 	%rd1, %rd3;
	cvta.to.global.u64 	%rd2, %rd4;
	mov.u32 	%r11, %nctaid.x;
	mul.lo.s32 	%r3, %r11, %r1;

BB0_2:
	mul.lo.s32 	%r12, %r14, %r8;
	mul.wide.s32 	%rd5, %r12, 4;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.f32 	%f1, [%rd6];
	setp.gt.f32	%p2, %f1, 0f00000000;
	selp.f32	%f2, %f1, 0f00000000, %p2;
	mul.lo.s32 	%r13, %r14, %r7;
	mul.wide.s32 	%rd7, %r13, 4;
	add.s64 	%rd8, %rd1, %rd7;
	st.global.f32 	[%rd8], %f2;
	add.s32 	%r14, %r3, %r14;
	setp.lt.s32	%p3, %r14, %r6;
	@%p3 bra 	BB0_2;

BB0_3:
	ret;
}

	// .globl	map_relu_d_float
.visible .entry map_relu_d_float(
	.param .u32 map_relu_d_float_param_0,
	.param .u64 map_relu_d_float_param_1,
	.param .u32 map_relu_d_float_param_2,
	.param .u64 map_relu_d_float_param_3,
	.param .u32 map_relu_d_float_param_4
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<15>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r6, [map_relu_d_float_param_0];
	ld.param.u64 	%rd3, [map_relu_d_float_param_1];
	ld.param.u32 	%r7, [map_relu_d_float_param_2];
	ld.param.u64 	%rd4, [map_relu_d_float_param_3];
	ld.param.u32 	%r8, [map_relu_d_float_param_4];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r14, %r1, %r9, %r10;
	setp.ge.s32	%p1, %r14, %r6;
	@%p1 bra 	BB1_3;

	cvta.to.global.u64 	%rd1, %rd3;
	cvta.to.global.u64 	%rd2, %rd4;
	mov.u32 	%r11, %nctaid.x;
	mul.lo.s32 	%r3, %r11, %r1;

BB1_2:
	mul.lo.s32 	%r12, %r14, %r8;
	mul.wide.s32 	%rd5, %r12, 4;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.f32 	%f1, [%rd6];
	setp.gt.f32	%p2, %f1, 0f00000000;
	selp.f32	%f2, 0f3F800000, 0f00000000, %p2;
	mul.lo.s32 	%r13, %r14, %r7;
	mul.wide.s32 	%rd7, %r13, 4;
	add.s64 	%rd8, %rd1, %rd7;
	st.global.f32 	[%rd8], %f2;
	add.s32 	%r14, %r3, %r14;
	setp.lt.s32	%p3, %r14, %r6;
	@%p3 bra 	BB1_2;

BB1_3:
	ret;
}

	// .globl	map_linear_a_float
.visible .entry map_linear_a_float(
	.param .u32 map_linear_a_float_param_0,
	.param .u64 map_linear_a_float_param_1,
	.param .u32 map_linear_a_float_param_2,
	.param .u64 map_linear_a_float_param_3,
	.param .u32 map_linear_a_float_param_4
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<15>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r6, [map_linear_a_float_param_0];
	ld.param.u64 	%rd3, [map_linear_a_float_param_1];
	ld.param.u32 	%r7, [map_linear_a_float_param_2];
	ld.param.u64 	%rd4, [map_linear_a_float_param_3];
	ld.param.u32 	%r8, [map_linear_a_float_param_4];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r14, %r1, %r9, %r10;
	setp.ge.s32	%p1, %r14, %r6;
	@%p1 bra 	BB2_3;

	cvta.to.global.u64 	%rd1, %rd3;
	cvta.to.global.u64 	%rd2, %rd4;
	mov.u32 	%r11, %nctaid.x;
	mul.lo.s32 	%r3, %r11, %r1;

BB2_2:
	mul.lo.s32 	%r12, %r14, %r8;
	mul.wide.s32 	%rd5, %r12, 4;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.f32 	%f1, [%rd6];
	mul.lo.s32 	%r13, %r14, %r7;
	mul.wide.s32 	%rd7, %r13, 4;
	add.s64 	%rd8, %rd1, %rd7;
	st.global.f32 	[%rd8], %f1;
	add.s32 	%r14, %r3, %r14;
	setp.lt.s32	%p2, %r14, %r6;
	@%p2 bra 	BB2_2;

BB2_3:
	ret;
}

	// .globl	map_linear_d_float
.visible .entry map_linear_d_float(
	.param .u32 map_linear_d_float_param_0,
	.param .u64 map_linear_d_float_param_1,
	.param .u32 map_linear_d_float_param_2,
	.param .u64 map_linear_d_float_param_3,
	.param .u32 map_linear_d_float_param_4
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<14>;
	.reg .b64 	%rd<5>;


	ld.param.u32 	%r6, [map_linear_d_float_param_0];
	ld.param.u64 	%rd2, [map_linear_d_float_param_1];
	ld.param.u32 	%r7, [map_linear_d_float_param_2];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r8, %ctaid.x;
	mov.u32 	%r9, %tid.x;
	mad.lo.s32 	%r13, %r1, %r8, %r9;
	setp.ge.s32	%p1, %r13, %r6;
	@%p1 bra 	BB3_3;

	cvta.to.global.u64 	%rd1, %rd2;
	mov.u32 	%r10, %nctaid.x;
	mul.lo.s32 	%r3, %r10, %r1;

BB3_2:
	mul.lo.s32 	%r11, %r13, %r7;
	mul.wide.s32 	%rd3, %r11, 4;
	add.s64 	%rd4, %rd1, %rd3;
	mov.u32 	%r12, 1065353216;
	st.global.u32 	[%rd4], %r12;
	add.s32 	%r13, %r3, %r13;
	setp.lt.s32	%p2, %r13, %r6;
	@%p2 bra 	BB3_2;

BB3_3:
	ret;
}

	// .globl	map_tanh_a_float
.visible .entry map_tanh_a_float(
	.param .u32 map_tanh_a_float_param_0,
	.param .u64 map_tanh_a_float_param_1,
	.param .u32 map_tanh_a_float_param_2,
	.param .u64 map_tanh_a_float_param_3,
	.param .u32 map_tanh_a_float_param_4
)
{
	.reg .pred 	%p<6>;
	.reg .f32 	%f<33>;
	.reg .b32 	%r<20>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r6, [map_tanh_a_float_param_0];
	ld.param.u64 	%rd3, [map_tanh_a_float_param_1];
	ld.param.u32 	%r7, [map_tanh_a_float_param_2];
	ld.param.u64 	%rd4, [map_tanh_a_float_param_3];
	ld.param.u32 	%r8, [map_tanh_a_float_param_4];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r19, %r1, %r9, %r10;
	setp.ge.s32	%p1, %r19, %r6;
	@%p1 bra 	BB4_6;

	cvta.to.global.u64 	%rd1, %rd3;
	cvta.to.global.u64 	%rd2, %rd4;
	mov.u32 	%r11, %nctaid.x;
	mul.lo.s32 	%r3, %r11, %r1;

BB4_2:
	mul.lo.s32 	%r12, %r19, %r8;
	mul.wide.s32 	%rd5, %r12, 4;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.f32 	%f1, [%rd6];
	abs.f32 	%f2, %f1;
	setp.ltu.f32	%p2, %f2, 0f3F0CCCCD;
	@%p2 bra 	BB4_4;
	bra.uni 	BB4_3;

BB4_4:
	mul.f32 	%f21, %f1, %f1;
	mov.f32 	%f22, 0fBD57BE66;
	mov.f32 	%f23, 0f3C86A81B;
	fma.rn.f32 	%f24, %f23, %f21, %f22;
	mov.f32 	%f25, 0f3E08677B;
	fma.rn.f32 	%f26, %f24, %f21, %f25;
	mov.f32 	%f27, 0fBEAAAA29;
	fma.rn.f32 	%f28, %f26, %f21, %f27;
	mul.f32 	%f29, %f21, %f28;
	fma.rn.f32 	%f30, %f29, %f1, %f1;
	add.f32 	%f31, %f1, %f1;
	setp.eq.f32	%p4, %f1, 0f00000000;
	selp.f32	%f32, %f31, %f30, %p4;
	bra.uni 	BB4_5;

BB4_3:
	add.f32 	%f10, %f2, %f2;
	mul.f32 	%f11, %f10, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f12, %f11;
	mov.f32 	%f13, 0fBF317200;
	fma.rn.f32 	%f14, %f12, %f13, %f10;
	mov.f32 	%f15, 0fB5BFBE8E;
	fma.rn.f32 	%f16, %f12, %f15, %f14;
	mul.f32 	%f7, %f16, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f6,%f7;
	// inline asm
	ex2.approx.f32 	%f17, %f12;
	mov.f32 	%f18, 0f3F800000;
	fma.rn.f32 	%f9, %f6, %f17, %f18;
	// inline asm
	rcp.approx.ftz.f32 %f8,%f9;
	// inline asm
	mov.f32 	%f19, 0fC0000000;
	fma.rn.f32 	%f20, %f8, %f19, %f18;
	mov.b32 	 %r13, %f20;
	setp.ltu.f32	%p3, %f2, 0f42B00000;
	selp.b32	%r14, %r13, 1065353216, %p3;
	mov.b32 	 %r15, %f1;
	and.b32  	%r16, %r15, -2147483648;
	or.b32  	%r17, %r14, %r16;
	mov.b32 	 %f32, %r17;

BB4_5:
	mul.lo.s32 	%r18, %r19, %r7;
	mul.wide.s32 	%rd7, %r18, 4;
	add.s64 	%rd8, %rd1, %rd7;
	st.global.f32 	[%rd8], %f32;
	add.s32 	%r19, %r3, %r19;
	setp.lt.s32	%p5, %r19, %r6;
	@%p5 bra 	BB4_2;

BB4_6:
	ret;
}

	// .globl	map_tanh_d_float
.visible .entry map_tanh_d_float(
	.param .u32 map_tanh_d_float_param_0,
	.param .u64 map_tanh_d_float_param_1,
	.param .u32 map_tanh_d_float_param_2,
	.param .u64 map_tanh_d_float_param_3,
	.param .u32 map_tanh_d_float_param_4
)
{
	.reg .pred 	%p<24>;
	.reg .f32 	%f<35>;
	.reg .b32 	%r<48>;
	.reg .f64 	%fd<26>;
	.reg .b64 	%rd<11>;


	ld.param.u32 	%r6, [map_tanh_d_float_param_0];
	ld.param.u64 	%rd2, [map_tanh_d_float_param_1];
	ld.param.u32 	%r7, [map_tanh_d_float_param_2];
	ld.param.u64 	%rd3, [map_tanh_d_float_param_3];
	ld.param.u32 	%r8, [map_tanh_d_float_param_4];
	mov.u32 	%r9, %tid.x;
	mov.u32 	%r10, %ntid.x;
	mov.u32 	%r11, %ctaid.x;
	mad.lo.s32 	%r47, %r10, %r11, %r9;
	setp.ge.s32	%p2, %r47, %r6;
	@%p2 bra 	BB5_20;

	mov.f64 	%fd13, 0d4000000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2}, %fd13;
	}
	bfe.u32 	%r12, %r2, 20, 11;
	add.s32 	%r13, %r12, -1012;
	mov.u64 	%rd4, 4611686018427387904;
	shl.b64 	%rd1, %rd4, %r13;
	cvta.to.global.u64 	%rd5, %rd3;
	cvta.to.global.u64 	%rd8, %rd2;

BB5_2:
	mul.lo.s32 	%r14, %r47, %r8;
	mul.wide.s32 	%rd6, %r14, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.f32 	%f1, [%rd7];
	abs.f32 	%f2, %f1;
	setp.ltu.f32	%p3, %f2, 0f3F0CCCCD;
	@%p3 bra 	BB5_4;
	bra.uni 	BB5_3;

BB5_4:
	mul.f32 	%f21, %f1, %f1;
	mov.f32 	%f22, 0fBD57BE66;
	mov.f32 	%f23, 0f3C86A81B;
	fma.rn.f32 	%f24, %f23, %f21, %f22;
	mov.f32 	%f25, 0f3E08677B;
	fma.rn.f32 	%f26, %f24, %f21, %f25;
	mov.f32 	%f27, 0fBEAAAA29;
	fma.rn.f32 	%f28, %f26, %f21, %f27;
	mul.f32 	%f29, %f21, %f28;
	fma.rn.f32 	%f30, %f29, %f1, %f1;
	add.f32 	%f31, %f1, %f1;
	setp.eq.f32	%p5, %f1, 0f00000000;
	selp.f32	%f34, %f31, %f30, %p5;
	bra.uni 	BB5_5;

BB5_3:
	add.f32 	%f10, %f2, %f2;
	mul.f32 	%f11, %f10, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f12, %f11;
	mov.f32 	%f13, 0fBF317200;
	fma.rn.f32 	%f14, %f12, %f13, %f10;
	mov.f32 	%f15, 0fB5BFBE8E;
	fma.rn.f32 	%f16, %f12, %f15, %f14;
	mul.f32 	%f7, %f16, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f6,%f7;
	// inline asm
	ex2.approx.f32 	%f17, %f12;
	mov.f32 	%f18, 0f3F800000;
	fma.rn.f32 	%f9, %f6, %f17, %f18;
	// inline asm
	rcp.approx.ftz.f32 %f8,%f9;
	// inline asm
	mov.f32 	%f19, 0fC0000000;
	fma.rn.f32 	%f20, %f8, %f19, %f18;
	mov.b32 	 %r15, %f20;
	setp.ltu.f32	%p4, %f2, 0f42B00000;
	selp.b32	%r16, %r15, 1065353216, %p4;
	mov.b32 	 %r17, %f1;
	and.b32  	%r18, %r17, -2147483648;
	or.b32  	%r19, %r16, %r18;
	mov.b32 	 %f34, %r19;

BB5_5:
	cvt.f64.f32	%fd1, %f34;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4}, %fd1;
	}
	abs.f64 	%fd2, %fd1;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.f64	[param0+0], %fd2;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0
	);
	ld.param.f64	%fd25, [retval0+0];
	
	//{
	}// Callseq End 0
	setp.lt.s32	%p6, %r4, 0;
	setp.eq.s64	%p7, %rd1, -9223372036854775808;
	and.pred  	%p1, %p6, %p7;
	@!%p1 bra 	BB5_7;
	bra.uni 	BB5_6;

BB5_6:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r20}, %fd25;
	}
	xor.b32  	%r21, %r20, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r22, %temp}, %fd25;
	}
	mov.b64 	%fd25, {%r22, %r21};

BB5_7:
	mov.f64 	%fd24, %fd25;
	setp.eq.f32	%p8, %f34, 0f00000000;
	@%p8 bra 	BB5_10;
	bra.uni 	BB5_8;

BB5_10:
	setp.lt.s32	%p11, %r2, 0;
	selp.b32	%r23, %r4, 0, %p7;
	or.b32  	%r24, %r23, 2146435072;
	selp.b32	%r25, %r24, %r23, %p11;
	mov.u32 	%r26, 0;
	mov.b64 	%fd24, {%r26, %r25};
	bra.uni 	BB5_11;

BB5_8:
	setp.gt.s32	%p9, %r4, -1;
	@%p9 bra 	BB5_11;

	cvt.rzi.f64.f64	%fd15, %fd13;
	setp.neu.f64	%p10, %fd15, 0d4000000000000000;
	selp.f64	%fd24, 0dFFF8000000000000, %fd24, %p10;

BB5_11:
	mov.f64 	%fd8, %fd24;
	add.f64 	%fd9, %fd1, 0d4000000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r27}, %fd9;
	}
	and.b32  	%r28, %r27, 2146435072;
	setp.ne.s32	%p13, %r28, 2146435072;
	mov.f64 	%fd23, %fd8;
	@%p13 bra 	BB5_19;

	setp.gtu.f64	%p14, %fd2, 0d7FF0000000000000;
	mov.f64 	%fd23, %fd9;
	@%p14 bra 	BB5_19;

	and.b32  	%r29, %r2, 2147483647;
	setp.ne.s32	%p15, %r29, 2146435072;
	@%p15 bra 	BB5_15;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r30, %temp}, %fd13;
	}
	setp.eq.s32	%p16, %r30, 0;
	@%p16 bra 	BB5_18;
	bra.uni 	BB5_15;

BB5_18:
	setp.lt.s32	%p19, %r2, 0;
	setp.gt.f64	%p20, %fd2, 0d3FF0000000000000;
	selp.b32	%r39, 2146435072, 0, %p20;
	xor.b32  	%r40, %r39, 2146435072;
	selp.b32	%r41, %r40, %r39, %p19;
	setp.eq.f32	%p21, %f34, 0fBF800000;
	selp.b32	%r42, 1072693248, %r41, %p21;
	mov.u32 	%r43, 0;
	mov.b64 	%fd23, {%r43, %r42};
	bra.uni 	BB5_19;

BB5_15:
	and.b32  	%r31, %r4, 2147483647;
	setp.ne.s32	%p17, %r31, 2146435072;
	mov.f64 	%fd21, %fd8;
	mov.f64 	%fd23, %fd21;
	@%p17 bra 	BB5_19;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r32, %temp}, %fd1;
	}
	setp.ne.s32	%p18, %r32, 0;
	mov.f64 	%fd23, %fd8;
	@%p18 bra 	BB5_19;

	shr.s32 	%r33, %r2, 31;
	and.b32  	%r34, %r33, -2146435072;
	add.s32 	%r35, %r34, 2146435072;
	or.b32  	%r36, %r35, -2147483648;
	selp.b32	%r37, %r36, %r35, %p1;
	mov.u32 	%r38, 0;
	mov.b64 	%fd23, {%r38, %r37};

BB5_19:
	mov.f64 	%fd17, 0d3FF0000000000000;
	sub.f64 	%fd18, %fd17, %fd23;
	cvt.rn.f32.f64	%f32, %fd18;
	setp.eq.f32	%p22, %f34, 0f3F800000;
	selp.f32	%f33, 0f00000000, %f32, %p22;
	mul.lo.s32 	%r44, %r47, %r7;
	mul.wide.s32 	%rd9, %r44, 4;
	add.s64 	%rd10, %rd8, %rd9;
	st.global.f32 	[%rd10], %f33;
	mov.u32 	%r46, %nctaid.x;
	mad.lo.s32 	%r47, %r46, %r10, %r47;
	setp.lt.s32	%p23, %r47, %r6;
	@%p23 bra 	BB5_2;

BB5_20:
	ret;
}

	// .globl	map_sigmoid_a_float
.visible .entry map_sigmoid_a_float(
	.param .u32 map_sigmoid_a_float_param_0,
	.param .u64 map_sigmoid_a_float_param_1,
	.param .u32 map_sigmoid_a_float_param_2,
	.param .u64 map_sigmoid_a_float_param_3,
	.param .u32 map_sigmoid_a_float_param_4
)
{
	.reg .pred 	%p<5>;
	.reg .f32 	%f<17>;
	.reg .b32 	%r<15>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r6, [map_sigmoid_a_float_param_0];
	ld.param.u64 	%rd3, [map_sigmoid_a_float_param_1];
	ld.param.u32 	%r7, [map_sigmoid_a_float_param_2];
	ld.param.u64 	%rd4, [map_sigmoid_a_float_param_3];
	ld.param.u32 	%r8, [map_sigmoid_a_float_param_4];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r14, %r1, %r9, %r10;
	setp.ge.s32	%p1, %r14, %r6;
	@%p1 bra 	BB6_3;

	cvta.to.global.u64 	%rd1, %rd3;
	cvta.to.global.u64 	%rd2, %rd4;
	mov.u32 	%r11, %nctaid.x;
	mul.lo.s32 	%r3, %r11, %r1;

BB6_2:
	mul.lo.s32 	%r12, %r14, %r8;
	mul.wide.s32 	%rd5, %r12, 4;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.f32 	%f3, [%rd6];
	neg.f32 	%f4, %f3;
	mul.f32 	%f5, %f3, 0fBFB8AA3B;
	cvt.rzi.f32.f32	%f6, %f5;
	mov.f32 	%f7, 0fBF317200;
	fma.rn.f32 	%f8, %f6, %f7, %f4;
	mov.f32 	%f9, 0fB5BFBE8E;
	fma.rn.f32 	%f10, %f6, %f9, %f8;
	mul.f32 	%f2, %f10, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f1,%f2;
	// inline asm
	add.f32 	%f11, %f6, 0f00000000;
	ex2.approx.f32 	%f12, %f11;
	mul.f32 	%f13, %f1, %f12;
	setp.gt.f32	%p2, %f3, 0f42D20000;
	setp.lt.f32	%p3, %f3, 0fC2D20000;
	cvt.f64.f32	%fd1, %f13;
	add.f64 	%fd2, %fd1, 0d3FF0000000000000;
	rcp.rn.f64 	%fd3, %fd2;
	cvt.rn.f32.f64	%f14, %fd3;
	selp.f32	%f15, 0f3F800000, %f14, %p2;
	selp.f32	%f16, 0f00000000, %f15, %p3;
	mul.lo.s32 	%r13, %r14, %r7;
	mul.wide.s32 	%rd7, %r13, 4;
	add.s64 	%rd8, %rd1, %rd7;
	st.global.f32 	[%rd8], %f16;
	add.s32 	%r14, %r3, %r14;
	setp.lt.s32	%p4, %r14, %r6;
	@%p4 bra 	BB6_2;

BB6_3:
	ret;
}

	// .globl	map_sigmoid_d_float
.visible .entry map_sigmoid_d_float(
	.param .u32 map_sigmoid_d_float_param_0,
	.param .u64 map_sigmoid_d_float_param_1,
	.param .u32 map_sigmoid_d_float_param_2,
	.param .u64 map_sigmoid_d_float_param_3,
	.param .u32 map_sigmoid_d_float_param_4
)
{
	.reg .pred 	%p<23>;
	.reg .f32 	%f<14>;
	.reg .b32 	%r<43>;
	.reg .f64 	%fd<29>;
	.reg .b64 	%rd<11>;


	ld.param.u32 	%r6, [map_sigmoid_d_float_param_0];
	ld.param.u64 	%rd2, [map_sigmoid_d_float_param_1];
	ld.param.u32 	%r7, [map_sigmoid_d_float_param_2];
	ld.param.u64 	%rd3, [map_sigmoid_d_float_param_3];
	ld.param.u32 	%r8, [map_sigmoid_d_float_param_4];
	mov.u32 	%r9, %tid.x;
	mov.u32 	%r10, %ntid.x;
	mov.u32 	%r11, %ctaid.x;
	mad.lo.s32 	%r42, %r10, %r11, %r9;
	setp.ge.s32	%p2, %r42, %r6;
	@%p2 bra 	BB7_17;

	mov.f64 	%fd14, 0d4000000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2}, %fd14;
	}
	bfe.u32 	%r12, %r2, 20, 11;
	add.s32 	%r13, %r12, -1012;
	mov.u64 	%rd4, 4611686018427387904;
	shl.b64 	%rd1, %rd4, %r13;
	cvta.to.global.u64 	%rd5, %rd3;
	cvta.to.global.u64 	%rd8, %rd2;

BB7_2:
	mul.lo.s32 	%r14, %r42, %r8;
	mul.wide.s32 	%rd6, %r14, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.f32 	%f3, [%rd7];
	mul.f32 	%f4, %f3, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f5, %f4;
	mov.f32 	%f6, 0fBF317200;
	fma.rn.f32 	%f7, %f5, %f6, %f3;
	mov.f32 	%f8, 0fB5BFBE8E;
	fma.rn.f32 	%f9, %f5, %f8, %f7;
	mul.f32 	%f2, %f9, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f1,%f2;
	// inline asm
	add.f32 	%f10, %f5, 0f00000000;
	ex2.approx.f32 	%f11, %f10;
	mul.f32 	%f12, %f1, %f11;
	setp.lt.f32	%p3, %f3, 0fC2D20000;
	setp.gt.f32	%p4, %f3, 0f42D20000;
	cvt.f64.f32	%fd15, %f12;
	selp.f64	%fd16, 0d0000000000000000, %fd15, %p3;
	selp.f64	%fd1, 0d7FF0000000000000, %fd16, %p4;
	add.f64 	%fd2, %fd1, 0d3FF0000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4}, %fd2;
	}
	abs.f64 	%fd3, %fd2;
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.f64	[param0+0], %fd3;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0
	);
	ld.param.f64	%fd28, [retval0+0];
	
	//{
	}// Callseq End 1
	setp.lt.s32	%p5, %r4, 0;
	setp.eq.s64	%p6, %rd1, -9223372036854775808;
	and.pred  	%p1, %p5, %p6;
	@!%p1 bra 	BB7_4;
	bra.uni 	BB7_3;

BB7_3:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r15}, %fd28;
	}
	xor.b32  	%r16, %r15, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r17, %temp}, %fd28;
	}
	mov.b64 	%fd28, {%r17, %r16};

BB7_4:
	mov.f64 	%fd27, %fd28;
	setp.eq.f64	%p7, %fd2, 0d0000000000000000;
	@%p7 bra 	BB7_7;
	bra.uni 	BB7_5;

BB7_7:
	setp.lt.s32	%p10, %r2, 0;
	selp.b32	%r18, %r4, 0, %p6;
	or.b32  	%r19, %r18, 2146435072;
	selp.b32	%r20, %r19, %r18, %p10;
	mov.u32 	%r21, 0;
	mov.b64 	%fd27, {%r21, %r20};
	bra.uni 	BB7_8;

BB7_5:
	setp.gt.s32	%p8, %r4, -1;
	@%p8 bra 	BB7_8;

	cvt.rzi.f64.f64	%fd18, %fd14;
	setp.neu.f64	%p9, %fd18, 0d4000000000000000;
	selp.f64	%fd27, 0dFFF8000000000000, %fd27, %p9;

BB7_8:
	mov.f64 	%fd9, %fd27;
	add.f64 	%fd10, %fd2, 0d4000000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r22}, %fd10;
	}
	and.b32  	%r23, %r22, 2146435072;
	setp.ne.s32	%p12, %r23, 2146435072;
	mov.f64 	%fd26, %fd9;
	@%p12 bra 	BB7_16;

	setp.gtu.f64	%p13, %fd3, 0d7FF0000000000000;
	mov.f64 	%fd26, %fd10;
	@%p13 bra 	BB7_16;

	and.b32  	%r24, %r2, 2147483647;
	setp.ne.s32	%p14, %r24, 2146435072;
	@%p14 bra 	BB7_12;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r25, %temp}, %fd14;
	}
	setp.eq.s32	%p15, %r25, 0;
	@%p15 bra 	BB7_15;
	bra.uni 	BB7_12;

BB7_15:
	setp.lt.s32	%p18, %r2, 0;
	setp.gt.f64	%p19, %fd3, 0d3FF0000000000000;
	selp.b32	%r34, 2146435072, 0, %p19;
	xor.b32  	%r35, %r34, 2146435072;
	selp.b32	%r36, %r35, %r34, %p18;
	setp.eq.f64	%p20, %fd2, 0dBFF0000000000000;
	selp.b32	%r37, 1072693248, %r36, %p20;
	mov.u32 	%r38, 0;
	mov.b64 	%fd26, {%r38, %r37};
	bra.uni 	BB7_16;

BB7_12:
	and.b32  	%r26, %r4, 2147483647;
	setp.ne.s32	%p16, %r26, 2146435072;
	mov.f64 	%fd24, %fd9;
	mov.f64 	%fd26, %fd24;
	@%p16 bra 	BB7_16;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r27, %temp}, %fd2;
	}
	setp.ne.s32	%p17, %r27, 0;
	mov.f64 	%fd26, %fd9;
	@%p17 bra 	BB7_16;

	shr.s32 	%r28, %r2, 31;
	and.b32  	%r29, %r28, -2146435072;
	add.s32 	%r30, %r29, 2146435072;
	or.b32  	%r31, %r30, -2147483648;
	selp.b32	%r32, %r31, %r30, %p1;
	mov.u32 	%r33, 0;
	mov.b64 	%fd26, {%r33, %r32};

BB7_16:
	setp.eq.f64	%p21, %fd2, 0d3FF0000000000000;
	selp.f64	%fd20, 0d3FF0000000000000, %fd26, %p21;
	div.rn.f64 	%fd21, %fd1, %fd20;
	cvt.rn.f32.f64	%f13, %fd21;
	mul.lo.s32 	%r39, %r42, %r7;
	mul.wide.s32 	%rd9, %r39, 4;
	add.s64 	%rd10, %rd8, %rd9;
	st.global.f32 	[%rd10], %f13;
	mov.u32 	%r41, %nctaid.x;
	mad.lo.s32 	%r42, %r41, %r10, %r42;
	setp.lt.s32	%p22, %r42, %r6;
	@%p22 bra 	BB7_2;

BB7_17:
	ret;
}

	// .globl	map_negate_float
.visible .entry map_negate_float(
	.param .u32 map_negate_float_param_0,
	.param .u64 map_negate_float_param_1,
	.param .u32 map_negate_float_param_2,
	.param .u64 map_negate_float_param_3,
	.param .u32 map_negate_float_param_4
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<15>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r6, [map_negate_float_param_0];
	ld.param.u64 	%rd3, [map_negate_float_param_1];
	ld.param.u32 	%r7, [map_negate_float_param_2];
	ld.param.u64 	%rd4, [map_negate_float_param_3];
	ld.param.u32 	%r8, [map_negate_float_param_4];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r14, %r1, %r9, %r10;
	setp.ge.s32	%p1, %r14, %r6;
	@%p1 bra 	BB8_3;

	cvta.to.global.u64 	%rd1, %rd3;
	cvta.to.global.u64 	%rd2, %rd4;
	mov.u32 	%r11, %nctaid.x;
	mul.lo.s32 	%r3, %r11, %r1;

BB8_2:
	mul.lo.s32 	%r12, %r14, %r8;
	mul.wide.s32 	%rd5, %r12, 4;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.f32 	%f1, [%rd6];
	neg.f32 	%f2, %f1;
	mul.lo.s32 	%r13, %r14, %r7;
	mul.wide.s32 	%rd7, %r13, 4;
	add.s64 	%rd8, %rd1, %rd7;
	st.global.f32 	[%rd8], %f2;
	add.s32 	%r14, %r3, %r14;
	setp.lt.s32	%p2, %r14, %r6;
	@%p2 bra 	BB8_2;

BB8_3:
	ret;
}

	// .globl	map_acos_float
.visible .entry map_acos_float(
	.param .u32 map_acos_float_param_0,
	.param .u64 map_acos_float_param_1,
	.param .u32 map_acos_float_param_2,
	.param .u64 map_acos_float_param_3,
	.param .u32 map_acos_float_param_4
)
{
	.reg .pred 	%p<5>;
	.reg .f32 	%f<27>;
	.reg .b32 	%r<15>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r6, [map_acos_float_param_0];
	ld.param.u64 	%rd3, [map_acos_float_param_1];
	ld.param.u32 	%r7, [map_acos_float_param_2];
	ld.param.u64 	%rd4, [map_acos_float_param_3];
	ld.param.u32 	%r8, [map_acos_float_param_4];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r14, %r1, %r9, %r10;
	setp.ge.s32	%p1, %r14, %r6;
	@%p1 bra 	BB9_3;

	cvta.to.global.u64 	%rd1, %rd3;
	cvta.to.global.u64 	%rd2, %rd4;
	mov.u32 	%r11, %nctaid.x;
	mul.lo.s32 	%r3, %r11, %r1;

BB9_2:
	mul.lo.s32 	%r12, %r14, %r8;
	mul.wide.s32 	%rd5, %r12, 4;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.f32 	%f1, [%rd6];
	abs.f32 	%f2, %f1;
	mov.f32 	%f3, 0f3F800000;
	sub.f32 	%f4, %f3, %f2;
	mul.f32 	%f5, %f4, 0f3F000000;
	sqrt.rn.f32 	%f6, %f5;
	setp.gt.f32	%p2, %f2, 0f3F11EB85;
	selp.f32	%f7, %f6, %f2, %p2;
	mul.f32 	%f8, %f7, %f7;
	mov.f32 	%f9, 0f3C94D2E9;
	mov.f32 	%f10, 0f3D53F941;
	fma.rn.f32 	%f11, %f10, %f8, %f9;
	mov.f32 	%f12, 0f3D3F841F;
	fma.rn.f32 	%f13, %f11, %f8, %f12;
	mov.f32 	%f14, 0f3D994929;
	fma.rn.f32 	%f15, %f13, %f8, %f14;
	mov.f32 	%f16, 0f3E2AAB94;
	fma.rn.f32 	%f17, %f15, %f8, %f16;
	mul.f32 	%f18, %f8, %f17;
	fma.rn.f32 	%f19, %f18, %f7, %f7;
	add.f32 	%f20, %f19, %f19;
	mov.f32 	%f21, 0f3FC90FDB;
	sub.f32 	%f22, %f21, %f19;
	selp.f32	%f23, %f20, %f22, %p2;
	setp.lt.f32	%p3, %f1, 0f00000000;
	mov.f32 	%f24, 0f40490FDB;
	sub.f32 	%f25, %f24, %f23;
	selp.f32	%f26, %f25, %f23, %p3;
	mul.lo.s32 	%r13, %r14, %r7;
	mul.wide.s32 	%rd7, %r13, 4;
	add.s64 	%rd8, %rd1, %rd7;
	st.global.f32 	[%rd8], %f26;
	add.s32 	%r14, %r3, %r14;
	setp.lt.s32	%p4, %r14, %r6;
	@%p4 bra 	BB9_2;

BB9_3:
	ret;
}

	// .globl	map_acosh_float
.visible .entry map_acosh_float(
	.param .u32 map_acosh_float_param_0,
	.param .u64 map_acosh_float_param_1,
	.param .u32 map_acosh_float_param_2,
	.param .u64 map_acosh_float_param_3,
	.param .u32 map_acosh_float_param_4
)
{
	.reg .pred 	%p<10>;
	.reg .f32 	%f<79>;
	.reg .b32 	%r<27>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r7, [map_acosh_float_param_0];
	ld.param.u64 	%rd3, [map_acosh_float_param_1];
	ld.param.u32 	%r8, [map_acosh_float_param_2];
	ld.param.u64 	%rd4, [map_acosh_float_param_3];
	ld.param.u32 	%r9, [map_acosh_float_param_4];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r10, %ctaid.x;
	mov.u32 	%r11, %tid.x;
	mad.lo.s32 	%r26, %r1, %r10, %r11;
	setp.ge.s32	%p1, %r26, %r7;
	@%p1 bra 	BB10_11;

	cvta.to.global.u64 	%rd1, %rd3;
	cvta.to.global.u64 	%rd2, %rd4;
	mov.u32 	%r12, %nctaid.x;
	mul.lo.s32 	%r3, %r12, %r1;

BB10_2:
	mul.lo.s32 	%r13, %r26, %r9;
	mul.wide.s32 	%rd5, %r13, 4;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.f32 	%f1, [%rd6];
	add.f32 	%f2, %f1, 0fBF800000;
	mov.b32 	 %r14, %f2;
	setp.gt.u32	%p2, %r14, 1258291200;
	@%p2 bra 	BB10_7;
	bra.uni 	BB10_3;

BB10_7:
	setp.lt.f32	%p6, %f2, 0f00800000;
	mul.f32 	%f48, %f2, 0f4B000000;
	selp.f32	%f8, %f48, %f2, %p6;
	selp.f32	%f49, 0fC1B80000, 0f00000000, %p6;
	mov.b32 	 %r21, %f8;
	add.s32 	%r22, %r21, -1059760811;
	and.b32  	%r23, %r22, -8388608;
	sub.s32 	%r24, %r21, %r23;
	mov.b32 	 %f50, %r24;
	cvt.rn.f32.s32	%f51, %r23;
	mov.f32 	%f52, 0f34000000;
	fma.rn.f32 	%f53, %f51, %f52, %f49;
	add.f32 	%f54, %f50, 0fBF800000;
	mov.f32 	%f55, 0f3E1039F6;
	mov.f32 	%f56, 0fBE055027;
	fma.rn.f32 	%f57, %f56, %f54, %f55;
	mov.f32 	%f58, 0fBDF8CDCC;
	fma.rn.f32 	%f59, %f57, %f54, %f58;
	mov.f32 	%f60, 0f3E0F2955;
	fma.rn.f32 	%f61, %f59, %f54, %f60;
	mov.f32 	%f62, 0fBE2AD8B9;
	fma.rn.f32 	%f63, %f61, %f54, %f62;
	mov.f32 	%f64, 0f3E4CED0B;
	fma.rn.f32 	%f65, %f63, %f54, %f64;
	mov.f32 	%f66, 0fBE7FFF22;
	fma.rn.f32 	%f67, %f65, %f54, %f66;
	mov.f32 	%f68, 0f3EAAAA78;
	fma.rn.f32 	%f69, %f67, %f54, %f68;
	mov.f32 	%f70, 0fBF000000;
	fma.rn.f32 	%f71, %f69, %f54, %f70;
	mul.f32 	%f72, %f54, %f71;
	fma.rn.f32 	%f73, %f72, %f54, %f54;
	mov.f32 	%f74, 0f3F317218;
	fma.rn.f32 	%f77, %f53, %f74, %f73;
	setp.lt.u32	%p7, %r21, 2139095040;
	@%p7 bra 	BB10_9;

	mov.f32 	%f75, 0f7F800000;
	fma.rn.f32 	%f77, %f8, %f75, %f75;

BB10_9:
	add.f32 	%f76, %f77, 0f3F317218;
	setp.eq.f32	%p8, %f8, 0f00000000;
	selp.f32	%f78, 0fFF800000, %f76, %p8;
	bra.uni 	BB10_10;

BB10_3:
	mul.rz.f32 	%f14, %f1, %f2;
	add.rn.f32 	%f15, %f14, %f2;
	sqrt.rn.f32 	%f16, %f15;
	add.f32 	%f3, %f2, %f16;
	mov.f32 	%f17, 0f3F800000;
	add.rz.f32 	%f18, %f3, %f17;
	mov.b32 	 %r15, %f18;
	add.s32 	%r16, %r15, -1061158912;
	and.b32  	%r17, %r16, -8388608;
	mov.b32 	 %r5, %f3;
	sub.s32 	%r18, %r5, %r17;
	mov.b32 	 %f19, %r18;
	mov.u32 	%r19, 1082130432;
	sub.s32 	%r20, %r19, %r17;
	mov.b32 	 %f20, %r20;
	mov.f32 	%f21, 0fBF800000;
	mov.f32 	%f22, 0f3E800000;
	fma.rn.f32 	%f23, %f22, %f20, %f21;
	add.f32 	%f24, %f23, %f19;
	cvt.rn.f32.s32	%f25, %r17;
	mul.f32 	%f26, %f25, 0f34000000;
	mov.f32 	%f27, 0f3DD80012;
	mov.f32 	%f28, 0fBD39BF78;
	fma.rn.f32 	%f29, %f28, %f24, %f27;
	mov.f32 	%f30, 0fBE0778E0;
	fma.rn.f32 	%f31, %f29, %f24, %f30;
	mov.f32 	%f32, 0f3E146475;
	fma.rn.f32 	%f33, %f31, %f24, %f32;
	mov.f32 	%f34, 0fBE2A68DD;
	fma.rn.f32 	%f35, %f33, %f24, %f34;
	mov.f32 	%f36, 0f3E4CAF9E;
	fma.rn.f32 	%f37, %f35, %f24, %f36;
	mov.f32 	%f38, 0fBE800042;
	fma.rn.f32 	%f39, %f37, %f24, %f38;
	mov.f32 	%f40, 0f3EAAAAE6;
	fma.rn.f32 	%f41, %f39, %f24, %f40;
	mov.f32 	%f42, 0fBF000000;
	fma.rn.f32 	%f43, %f41, %f24, %f42;
	mul.f32 	%f44, %f24, %f43;
	fma.rn.f32 	%f45, %f44, %f24, %f24;
	mov.f32 	%f46, 0f3F317218;
	fma.rn.f32 	%f78, %f26, %f46, %f45;
	setp.lt.u32	%p3, %r5, 2139095040;
	@%p3 bra 	BB10_10;

	setp.lt.s32	%p4, %r5, -1082130431;
	@%p4 bra 	BB10_6;

	mov.f32 	%f47, 0f7F800000;
	fma.rn.f32 	%f78, %f3, %f47, %f47;

BB10_6:
	setp.eq.f32	%p5, %f3, 0f00000000;
	selp.f32	%f78, 0f80000000, %f78, %p5;

BB10_10:
	mul.lo.s32 	%r25, %r26, %r8;
	mul.wide.s32 	%rd7, %r25, 4;
	add.s64 	%rd8, %rd1, %rd7;
	st.global.f32 	[%rd8], %f78;
	add.s32 	%r26, %r3, %r26;
	setp.lt.s32	%p9, %r26, %r7;
	@%p9 bra 	BB10_2;

BB10_11:
	ret;
}

	// .globl	map_asin_float
.visible .entry map_asin_float(
	.param .u32 map_asin_float_param_0,
	.param .u64 map_asin_float_param_1,
	.param .u32 map_asin_float_param_2,
	.param .u64 map_asin_float_param_3,
	.param .u32 map_asin_float_param_4
)
{
	.reg .pred 	%p<5>;
	.reg .f32 	%f<26>;
	.reg .b32 	%r<19>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r6, [map_asin_float_param_0];
	ld.param.u64 	%rd3, [map_asin_float_param_1];
	ld.param.u32 	%r7, [map_asin_float_param_2];
	ld.param.u64 	%rd4, [map_asin_float_param_3];
	ld.param.u32 	%r8, [map_asin_float_param_4];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r18, %r1, %r9, %r10;
	setp.ge.s32	%p1, %r18, %r6;
	@%p1 bra 	BB11_3;

	cvta.to.global.u64 	%rd1, %rd3;
	cvta.to.global.u64 	%rd2, %rd4;
	mov.u32 	%r11, %nctaid.x;
	mul.lo.s32 	%r3, %r11, %r1;

BB11_2:
	mul.lo.s32 	%r12, %r18, %r8;
	mul.wide.s32 	%rd5, %r12, 4;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.f32 	%f1, [%rd6];
	abs.f32 	%f2, %f1;
	mov.f32 	%f3, 0f3F800000;
	sub.f32 	%f4, %f3, %f2;
	mul.f32 	%f5, %f4, 0f3F000000;
	sqrt.rn.f32 	%f6, %f5;
	setp.gt.f32	%p2, %f2, 0f3F11EB85;
	selp.f32	%f7, %f6, %f2, %p2;
	mul.f32 	%f8, %f7, %f7;
	mov.f32 	%f9, 0f3C94D2E9;
	mov.f32 	%f10, 0f3D53F941;
	fma.rn.f32 	%f11, %f10, %f8, %f9;
	mov.f32 	%f12, 0f3D3F841F;
	fma.rn.f32 	%f13, %f11, %f8, %f12;
	mov.f32 	%f14, 0f3D994929;
	fma.rn.f32 	%f15, %f13, %f8, %f14;
	mov.f32 	%f16, 0f3E2AAB94;
	fma.rn.f32 	%f17, %f15, %f8, %f16;
	mul.f32 	%f18, %f8, %f17;
	fma.rn.f32 	%f19, %f18, %f7, %f7;
	mov.f32 	%f20, 0f3FC90FDB;
	mov.f32 	%f21, 0fC0000000;
	fma.rn.f32 	%f22, %f21, %f19, %f20;
	selp.f32	%f23, %f22, %f19, %p2;
	setp.gtu.f32	%p3, %f23, 0f7F800000;
	mov.b32 	 %r13, %f23;
	mov.b32 	 %r14, %f1;
	and.b32  	%r15, %r14, -2147483648;
	or.b32  	%r16, %r13, %r15;
	mov.b32 	 %f24, %r16;
	selp.f32	%f25, %f23, %f24, %p3;
	mul.lo.s32 	%r17, %r18, %r7;
	mul.wide.s32 	%rd7, %r17, 4;
	add.s64 	%rd8, %rd1, %rd7;
	st.global.f32 	[%rd8], %f25;
	add.s32 	%r18, %r3, %r18;
	setp.lt.s32	%p4, %r18, %r6;
	@%p4 bra 	BB11_2;

BB11_3:
	ret;
}

	// .globl	map_asinh_float
.visible .entry map_asinh_float(
	.param .u32 map_asinh_float_param_0,
	.param .u64 map_asinh_float_param_1,
	.param .u32 map_asinh_float_param_2,
	.param .u64 map_asinh_float_param_3,
	.param .u32 map_asinh_float_param_4
)
{
	.reg .pred 	%p<8>;
	.reg .f32 	%f<52>;
	.reg .b32 	%r<26>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r7, [map_asinh_float_param_0];
	ld.param.u64 	%rd3, [map_asinh_float_param_1];
	ld.param.u32 	%r8, [map_asinh_float_param_2];
	ld.param.u64 	%rd4, [map_asinh_float_param_3];
	ld.param.u32 	%r9, [map_asinh_float_param_4];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r10, %ctaid.x;
	mov.u32 	%r11, %tid.x;
	mad.lo.s32 	%r25, %r1, %r10, %r11;
	setp.ge.s32	%p1, %r25, %r7;
	@%p1 bra 	BB12_9;

	cvta.to.global.u64 	%rd1, %rd3;
	cvta.to.global.u64 	%rd2, %rd4;
	mov.u32 	%r12, %nctaid.x;
	mul.lo.s32 	%r3, %r12, %r1;

BB12_2:
	mul.lo.s32 	%r13, %r25, %r9;
	mul.wide.s32 	%rd5, %r13, 4;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.f32 	%f1, [%rd6];
	abs.f32 	%f2, %f1;
	setp.gt.f32	%p2, %f2, 0f7E800000;
	@%p2 bra 	BB12_7;
	bra.uni 	BB12_3;

BB12_7:
	lg2.approx.f32 	%f46, %f2;
	mul.f32 	%f47, %f46, 0f3F317218;
	mov.f32 	%f48, 0f3F317218;
	add.rn.f32 	%f51, %f48, %f47;
	bra.uni 	BB12_8;

BB12_3:
	rcp.rn.f32 	%f12, %f2;
	mov.f32 	%f13, 0f3F800000;
	fma.rn.f32 	%f14, %f12, %f12, %f13;
	sqrt.rn.f32 	%f15, %f14;
	add.f32 	%f11, %f12, %f15;
	// inline asm
	rcp.approx.ftz.f32 %f10,%f11;
	// inline asm
	fma.rn.f32 	%f3, %f2, %f10, %f2;
	add.rz.f32 	%f16, %f3, %f13;
	mov.b32 	 %r14, %f16;
	add.s32 	%r15, %r14, -1061158912;
	and.b32  	%r16, %r15, -8388608;
	mov.b32 	 %r5, %f3;
	sub.s32 	%r17, %r5, %r16;
	mov.b32 	 %f17, %r17;
	mov.u32 	%r18, 1082130432;
	sub.s32 	%r19, %r18, %r16;
	mov.b32 	 %f18, %r19;
	mov.f32 	%f19, 0fBF800000;
	mov.f32 	%f20, 0f3E800000;
	fma.rn.f32 	%f21, %f20, %f18, %f19;
	add.f32 	%f22, %f21, %f17;
	cvt.rn.f32.s32	%f23, %r16;
	mul.f32 	%f24, %f23, 0f34000000;
	mov.f32 	%f25, 0f3DD80012;
	mov.f32 	%f26, 0fBD39BF78;
	fma.rn.f32 	%f27, %f26, %f22, %f25;
	mov.f32 	%f28, 0fBE0778E0;
	fma.rn.f32 	%f29, %f27, %f22, %f28;
	mov.f32 	%f30, 0f3E146475;
	fma.rn.f32 	%f31, %f29, %f22, %f30;
	mov.f32 	%f32, 0fBE2A68DD;
	fma.rn.f32 	%f33, %f31, %f22, %f32;
	mov.f32 	%f34, 0f3E4CAF9E;
	fma.rn.f32 	%f35, %f33, %f22, %f34;
	mov.f32 	%f36, 0fBE800042;
	fma.rn.f32 	%f37, %f35, %f22, %f36;
	mov.f32 	%f38, 0f3EAAAAE6;
	fma.rn.f32 	%f39, %f37, %f22, %f38;
	mov.f32 	%f40, 0fBF000000;
	fma.rn.f32 	%f41, %f39, %f22, %f40;
	mul.f32 	%f42, %f22, %f41;
	fma.rn.f32 	%f43, %f42, %f22, %f22;
	mov.f32 	%f44, 0f3F317218;
	fma.rn.f32 	%f51, %f24, %f44, %f43;
	setp.lt.u32	%p3, %r5, 2139095040;
	@%p3 bra 	BB12_8;

	setp.lt.s32	%p4, %r5, -1082130431;
	@%p4 bra 	BB12_6;

	mov.f32 	%f45, 0f7F800000;
	fma.rn.f32 	%f51, %f3, %f45, %f45;

BB12_6:
	setp.eq.f32	%p5, %f3, 0f00000000;
	selp.f32	%f51, 0f80000000, %f51, %p5;

BB12_8:
	mov.b32 	 %r20, %f1;
	and.b32  	%r21, %r20, -2147483648;
	mov.b32 	 %r22, %f51;
	or.b32  	%r23, %r22, %r21;
	mov.b32 	 %f49, %r23;
	setp.gtu.f32	%p6, %f2, 0f7F800000;
	selp.f32	%f50, %f51, %f49, %p6;
	mul.lo.s32 	%r24, %r25, %r8;
	mul.wide.s32 	%rd7, %r24, 4;
	add.s64 	%rd8, %rd1, %rd7;
	st.global.f32 	[%rd8], %f50;
	add.s32 	%r25, %r3, %r25;
	setp.lt.s32	%p7, %r25, %r7;
	@%p7 bra 	BB12_2;

BB12_9:
	ret;
}

	// .globl	map_atan_float
.visible .entry map_atan_float(
	.param .u32 map_atan_float_param_0,
	.param .u64 map_atan_float_param_1,
	.param .u32 map_atan_float_param_2,
	.param .u64 map_atan_float_param_3,
	.param .u32 map_atan_float_param_4
)
{
	.reg .pred 	%p<6>;
	.reg .f32 	%f<26>;
	.reg .b32 	%r<19>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r6, [map_atan_float_param_0];
	ld.param.u64 	%rd3, [map_atan_float_param_1];
	ld.param.u32 	%r7, [map_atan_float_param_2];
	ld.param.u64 	%rd4, [map_atan_float_param_3];
	ld.param.u32 	%r8, [map_atan_float_param_4];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r18, %r1, %r9, %r10;
	setp.ge.s32	%p1, %r18, %r6;
	@%p1 bra 	BB13_5;

	cvta.to.global.u64 	%rd1, %rd3;
	cvta.to.global.u64 	%rd2, %rd4;
	mov.u32 	%r11, %nctaid.x;
	mul.lo.s32 	%r3, %r11, %r1;

BB13_2:
	mul.lo.s32 	%r12, %r18, %r8;
	mul.wide.s32 	%rd5, %r12, 4;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.f32 	%f1, [%rd6];
	abs.f32 	%f2, %f1;
	setp.leu.f32	%p2, %f2, 0f3F800000;
	mov.f32 	%f25, %f2;
	@%p2 bra 	BB13_4;

	rcp.rn.f32 	%f3, %f2;
	mov.f32 	%f25, %f3;

BB13_4:
	mov.f32 	%f4, %f25;
	mul.rn.f32 	%f5, %f4, %f4;
	mov.f32 	%f6, 0fC0B59883;
	mov.f32 	%f7, 0fBF52C7EA;
	fma.rn.f32 	%f8, %f5, %f7, %f6;
	mov.f32 	%f9, 0fC0D21907;
	fma.rn.f32 	%f10, %f8, %f5, %f9;
	mul.f32 	%f11, %f5, %f10;
	mul.f32 	%f12, %f4, %f11;
	add.f32 	%f13, %f5, 0f41355DC0;
	mov.f32 	%f14, 0f41E6BD60;
	fma.rn.f32 	%f15, %f13, %f5, %f14;
	mov.f32 	%f16, 0f419D92C8;
	fma.rn.f32 	%f17, %f15, %f5, %f16;
	rcp.rn.f32 	%f18, %f17;
	fma.rn.f32 	%f19, %f12, %f18, %f4;
	mov.f32 	%f20, 0f3FC90FDB;
	sub.f32 	%f21, %f20, %f19;
	setp.gt.f32	%p3, %f2, 0f3F800000;
	selp.f32	%f22, %f21, %f19, %p3;
	mov.b32 	 %r13, %f22;
	mov.b32 	 %r14, %f1;
	and.b32  	%r15, %r14, -2147483648;
	or.b32  	%r16, %r13, %r15;
	mov.b32 	 %f23, %r16;
	setp.gtu.f32	%p4, %f2, 0f7F800000;
	selp.f32	%f24, %f22, %f23, %p4;
	mul.lo.s32 	%r17, %r18, %r7;
	mul.wide.s32 	%rd7, %r17, 4;
	add.s64 	%rd8, %rd1, %rd7;
	st.global.f32 	[%rd8], %f24;
	add.s32 	%r18, %r3, %r18;
	setp.lt.s32	%p5, %r18, %r6;
	@%p5 bra 	BB13_2;

BB13_5:
	ret;
}

	// .globl	map_atanh_float
.visible .entry map_atanh_float(
	.param .u32 map_atanh_float_param_0,
	.param .u64 map_atanh_float_param_1,
	.param .u32 map_atanh_float_param_2,
	.param .u64 map_atanh_float_param_3,
	.param .u32 map_atanh_float_param_4
)
{
	.reg .pred 	%p<8>;
	.reg .f32 	%f<49>;
	.reg .b32 	%r<26>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r7, [map_atanh_float_param_0];
	ld.param.u64 	%rd3, [map_atanh_float_param_1];
	ld.param.u32 	%r8, [map_atanh_float_param_2];
	ld.param.u64 	%rd4, [map_atanh_float_param_3];
	ld.param.u32 	%r9, [map_atanh_float_param_4];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r10, %ctaid.x;
	mov.u32 	%r11, %tid.x;
	mad.lo.s32 	%r25, %r1, %r10, %r11;
	setp.ge.s32	%p1, %r25, %r7;
	@%p1 bra 	BB14_7;

	cvta.to.global.u64 	%rd1, %rd3;
	cvta.to.global.u64 	%rd2, %rd4;
	mov.u32 	%r12, %nctaid.x;
	mul.lo.s32 	%r3, %r12, %r1;

BB14_2:
	mul.lo.s32 	%r13, %r25, %r9;
	mul.wide.s32 	%rd5, %r13, 4;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.f32 	%f1, [%rd6];
	abs.f32 	%f10, %f1;
	mov.f32 	%f11, 0f3F800000;
	sub.f32 	%f9, %f11, %f10;
	// inline asm
	rcp.approx.ftz.f32 %f8,%f9;
	// inline asm
	add.f32 	%f12, %f8, %f8;
	mul.f32 	%f13, %f10, %f12;
	setp.gt.f32	%p2, %f10, 0f7E800000;
	selp.f32	%f2, 0fC0000000, %f13, %p2;
	add.rz.f32 	%f14, %f2, %f11;
	mov.b32 	 %r14, %f14;
	add.s32 	%r15, %r14, -1061158912;
	and.b32  	%r16, %r15, -8388608;
	mov.b32 	 %r5, %f2;
	sub.s32 	%r17, %r5, %r16;
	mov.b32 	 %f15, %r17;
	mov.u32 	%r18, 1082130432;
	sub.s32 	%r19, %r18, %r16;
	mov.b32 	 %f16, %r19;
	mov.f32 	%f17, 0fBF800000;
	mov.f32 	%f18, 0f3E800000;
	fma.rn.f32 	%f19, %f18, %f16, %f17;
	add.f32 	%f20, %f19, %f15;
	cvt.rn.f32.s32	%f21, %r16;
	mul.f32 	%f22, %f21, 0f34000000;
	mov.f32 	%f23, 0f3DD80012;
	mov.f32 	%f24, 0fBD39BF78;
	fma.rn.f32 	%f25, %f24, %f20, %f23;
	mov.f32 	%f26, 0fBE0778E0;
	fma.rn.f32 	%f27, %f25, %f20, %f26;
	mov.f32 	%f28, 0f3E146475;
	fma.rn.f32 	%f29, %f27, %f20, %f28;
	mov.f32 	%f30, 0fBE2A68DD;
	fma.rn.f32 	%f31, %f29, %f20, %f30;
	mov.f32 	%f32, 0f3E4CAF9E;
	fma.rn.f32 	%f33, %f31, %f20, %f32;
	mov.f32 	%f34, 0fBE800042;
	fma.rn.f32 	%f35, %f33, %f20, %f34;
	mov.f32 	%f36, 0f3EAAAAE6;
	fma.rn.f32 	%f37, %f35, %f20, %f36;
	mov.f32 	%f38, 0fBF000000;
	fma.rn.f32 	%f39, %f37, %f20, %f38;
	mul.f32 	%f40, %f20, %f39;
	fma.rn.f32 	%f41, %f40, %f20, %f20;
	mov.f32 	%f42, 0f3F317218;
	fma.rn.f32 	%f48, %f22, %f42, %f41;
	setp.lt.u32	%p3, %r5, 2139095040;
	@%p3 bra 	BB14_6;

	setp.lt.s32	%p4, %r5, -1082130431;
	@%p4 bra 	BB14_5;

	mov.f32 	%f43, 0f7F800000;
	fma.rn.f32 	%f48, %f2, %f43, %f43;

BB14_5:
	setp.eq.f32	%p5, %f2, 0f00000000;
	selp.f32	%f48, 0f80000000, %f48, %p5;

BB14_6:
	mul.f32 	%f44, %f48, 0f3F000000;
	abs.f32 	%f45, %f44;
	setp.gtu.f32	%p6, %f45, 0f7F800000;
	mov.b32 	 %r20, %f44;
	mov.b32 	 %r21, %f1;
	and.b32  	%r22, %r21, -2147483648;
	or.b32  	%r23, %r20, %r22;
	mov.b32 	 %f46, %r23;
	selp.f32	%f47, %f44, %f46, %p6;
	mul.lo.s32 	%r24, %r25, %r8;
	mul.wide.s32 	%rd7, %r24, 4;
	add.s64 	%rd8, %rd1, %rd7;
	st.global.f32 	[%rd8], %f47;
	add.s32 	%r25, %r3, %r25;
	setp.lt.s32	%p7, %r25, %r7;
	@%p7 bra 	BB14_2;

BB14_7:
	ret;
}

	// .globl	map_cbrt_float
.visible .entry map_cbrt_float(
	.param .u32 map_cbrt_float_param_0,
	.param .u64 map_cbrt_float_param_1,
	.param .u32 map_cbrt_float_param_2,
	.param .u64 map_cbrt_float_param_3,
	.param .u32 map_cbrt_float_param_4
)
{
	.reg .pred 	%p<5>;
	.reg .f32 	%f<16>;
	.reg .b32 	%r<16>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r6, [map_cbrt_float_param_0];
	ld.param.u64 	%rd3, [map_cbrt_float_param_1];
	ld.param.u32 	%r7, [map_cbrt_float_param_2];
	ld.param.u64 	%rd4, [map_cbrt_float_param_3];
	ld.param.u32 	%r8, [map_cbrt_float_param_4];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r15, %r1, %r9, %r10;
	setp.ge.s32	%p1, %r15, %r6;
	@%p1 bra 	BB15_3;

	cvta.to.global.u64 	%rd1, %rd3;
	cvta.to.global.u64 	%rd2, %rd4;
	mov.u32 	%r11, %nctaid.x;
	mul.lo.s32 	%r3, %r11, %r1;

BB15_2:
	mul.lo.s32 	%r12, %r15, %r8;
	mul.wide.s32 	%rd5, %r12, 4;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.f32 	%f5, [%rd6];
	abs.f32 	%f6, %f5;
	lg2.approx.f32 	%f7, %f6;
	mul.f32 	%f2, %f7, 0f3EAAAAAB;
	// inline asm
	ex2.approx.ftz.f32 %f1,%f2;
	// inline asm
	mul.f32 	%f4, %f1, %f1;
	// inline asm
	rcp.approx.ftz.f32 %f3,%f4;
	// inline asm
	neg.f32 	%f8, %f6;
	fma.rn.f32 	%f9, %f3, %f8, %f1;
	mov.f32 	%f10, 0fBEAAAAAB;
	fma.rn.f32 	%f11, %f9, %f10, %f1;
	mov.b32 	 %r13, %f5;
	setp.lt.s32	%p2, %r13, 0;
	neg.f32 	%f12, %f11;
	selp.f32	%f13, %f12, %f11, %p2;
	add.f32 	%f14, %f5, %f5;
	setp.eq.f32	%p3, %f14, %f5;
	selp.f32	%f15, %f14, %f13, %p3;
	mul.lo.s32 	%r14, %r15, %r7;
	mul.wide.s32 	%rd7, %r14, 4;
	add.s64 	%rd8, %rd1, %rd7;
	st.global.f32 	[%rd8], %f15;
	add.s32 	%r15, %r3, %r15;
	setp.lt.s32	%p4, %r15, %r6;
	@%p4 bra 	BB15_2;

BB15_3:
	ret;
}

	// .globl	map_ceil_float
.visible .entry map_ceil_float(
	.param .u32 map_ceil_float_param_0,
	.param .u64 map_ceil_float_param_1,
	.param .u32 map_ceil_float_param_2,
	.param .u64 map_ceil_float_param_3,
	.param .u32 map_ceil_float_param_4
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<15>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r6, [map_ceil_float_param_0];
	ld.param.u64 	%rd3, [map_ceil_float_param_1];
	ld.param.u32 	%r7, [map_ceil_float_param_2];
	ld.param.u64 	%rd4, [map_ceil_float_param_3];
	ld.param.u32 	%r8, [map_ceil_float_param_4];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r14, %r1, %r9, %r10;
	setp.ge.s32	%p1, %r14, %r6;
	@%p1 bra 	BB16_3;

	cvta.to.global.u64 	%rd1, %rd3;
	cvta.to.global.u64 	%rd2, %rd4;
	mov.u32 	%r11, %nctaid.x;
	mul.lo.s32 	%r3, %r11, %r1;

BB16_2:
	mul.lo.s32 	%r12, %r14, %r8;
	mul.wide.s32 	%rd5, %r12, 4;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.f32 	%f1, [%rd6];
	cvt.rpi.f32.f32	%f2, %f1;
	mul.lo.s32 	%r13, %r14, %r7;
	mul.wide.s32 	%rd7, %r13, 4;
	add.s64 	%rd8, %rd1, %rd7;
	st.global.f32 	[%rd8], %f2;
	add.s32 	%r14, %r3, %r14;
	setp.lt.s32	%p2, %r14, %r6;
	@%p2 bra 	BB16_2;

BB16_3:
	ret;
}

	// .globl	map_cos_float
.visible .entry map_cos_float(
	.param .u32 map_cos_float_param_0,
	.param .u64 map_cos_float_param_1,
	.param .u32 map_cos_float_param_2,
	.param .u64 map_cos_float_param_3,
	.param .u32 map_cos_float_param_4
)
{
	.local .align 4 .b8 	__local_depot17[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<16>;
	.reg .f32 	%f<48>;
	.reg .b32 	%r<107>;
	.reg .b64 	%rd<23>;


	mov.u64 	%rd22, __local_depot17;
	cvta.local.u64 	%SP, %rd22;
	ld.param.u32 	%r42, [map_cos_float_param_0];
	ld.param.u64 	%rd8, [map_cos_float_param_1];
	ld.param.u32 	%r43, [map_cos_float_param_2];
	ld.param.u64 	%rd9, [map_cos_float_param_3];
	ld.param.u32 	%r44, [map_cos_float_param_4];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r45, %ctaid.x;
	mov.u32 	%r46, %tid.x;
	mad.lo.s32 	%r96, %r1, %r45, %r46;
	setp.ge.s32	%p1, %r96, %r42;
	@%p1 bra 	BB17_25;

	cvta.to.global.u64 	%rd1, %rd8;
	mov.u32 	%r47, %nctaid.x;
	mul.lo.s32 	%r3, %r47, %r1;
	cvta.to.global.u64 	%rd10, %rd9;

BB17_2:
	mul.lo.s32 	%r48, %r96, %r44;
	mul.wide.s32 	%rd11, %r48, 4;
	add.s64 	%rd12, %rd10, %rd11;
	ld.global.f32 	%f43, [%rd12];
	abs.f32 	%f19, %f43;
	setp.neu.f32	%p2, %f19, 0f7F800000;
	@%p2 bra 	BB17_4;

	mov.f32 	%f20, 0f00000000;
	mul.rn.f32 	%f43, %f43, %f20;

BB17_4:
	mul.f32 	%f21, %f43, 0f3F22F983;
	cvt.rni.s32.f32	%r106, %f21;
	cvt.rn.f32.s32	%f22, %r106;
	neg.f32 	%f23, %f22;
	mov.f32 	%f24, 0f3FC90FDA;
	fma.rn.f32 	%f25, %f23, %f24, %f43;
	mov.f32 	%f26, 0f33A22168;
	fma.rn.f32 	%f27, %f23, %f26, %f25;
	mov.f32 	%f28, 0f27C234C5;
	fma.rn.f32 	%f44, %f23, %f28, %f27;
	abs.f32 	%f29, %f43;
	setp.leu.f32	%p3, %f29, 0f47CE4780;
	@%p3 bra 	BB17_14;

	mov.b32 	 %r6, %f43;
	shr.u32 	%r7, %r6, 23;
	shl.b32 	%r51, %r6, 8;
	or.b32  	%r8, %r51, -2147483648;
	add.u64 	%rd14, %SP, 0;
	cvta.to.local.u64 	%rd21, %rd14;
	mov.u32 	%r98, 0;
	mov.u64 	%rd20, __cudart_i2opi_f;
	mov.u32 	%r97, -6;

BB17_6:
	.pragma "nounroll";
	ld.const.u32 	%r54, [%rd20];
	// inline asm
	{
	mad.lo.cc.u32   %r52, %r54, %r8, %r98;
	madc.hi.u32     %r98, %r54, %r8,  0;
	}
	// inline asm
	st.local.u32 	[%rd21], %r52;
	add.s64 	%rd21, %rd21, 4;
	add.s64 	%rd20, %rd20, 4;
	add.s32 	%r97, %r97, 1;
	setp.ne.s32	%p4, %r97, 0;
	@%p4 bra 	BB17_6;

	and.b32  	%r57, %r7, 255;
	add.s32 	%r58, %r57, -128;
	shr.u32 	%r59, %r58, 5;
	and.b32  	%r13, %r6, -2147483648;
	cvta.to.local.u64 	%rd16, %rd14;
	st.local.u32 	[%rd16+24], %r98;
	mov.u32 	%r60, 6;
	sub.s32 	%r61, %r60, %r59;
	mul.wide.s32 	%rd17, %r61, 4;
	add.s64 	%rd7, %rd16, %rd17;
	ld.local.u32 	%r99, [%rd7];
	ld.local.u32 	%r100, [%rd7+-4];
	and.b32  	%r16, %r7, 31;
	setp.eq.s32	%p5, %r16, 0;
	@%p5 bra 	BB17_9;

	mov.u32 	%r62, 32;
	sub.s32 	%r63, %r62, %r16;
	shr.u32 	%r64, %r100, %r63;
	shl.b32 	%r65, %r99, %r16;
	add.s32 	%r99, %r64, %r65;
	ld.local.u32 	%r66, [%rd7+-8];
	shr.u32 	%r67, %r66, %r63;
	shl.b32 	%r68, %r100, %r16;
	add.s32 	%r100, %r67, %r68;

BB17_9:
	shr.u32 	%r69, %r100, 30;
	shl.b32 	%r70, %r99, 2;
	add.s32 	%r101, %r69, %r70;
	shl.b32 	%r22, %r100, 2;
	shr.u32 	%r71, %r101, 31;
	shr.u32 	%r72, %r99, 30;
	add.s32 	%r23, %r71, %r72;
	setp.eq.s32	%p6, %r71, 0;
	mov.u32 	%r102, %r13;
	mov.u32 	%r103, %r22;
	@%p6 bra 	BB17_11;

	not.b32 	%r73, %r101;
	neg.s32 	%r24, %r22;
	setp.eq.s32	%p7, %r22, 0;
	selp.u32	%r74, 1, 0, %p7;
	add.s32 	%r101, %r74, %r73;
	xor.b32  	%r26, %r13, -2147483648;
	mov.u32 	%r102, %r26;
	mov.u32 	%r103, %r24;

BB17_11:
	mov.u32 	%r28, %r102;
	neg.s32 	%r75, %r23;
	setp.eq.s32	%p8, %r13, 0;
	selp.b32	%r106, %r23, %r75, %p8;
	clz.b32 	%r105, %r101;
	setp.eq.s32	%p9, %r105, 0;
	shl.b32 	%r76, %r101, %r105;
	mov.u32 	%r77, 32;
	sub.s32 	%r78, %r77, %r105;
	shr.u32 	%r79, %r103, %r78;
	add.s32 	%r80, %r79, %r76;
	selp.b32	%r32, %r101, %r80, %p9;
	mov.u32 	%r81, -921707870;
	mul.hi.u32 	%r104, %r32, %r81;
	setp.lt.s32	%p10, %r104, 1;
	@%p10 bra 	BB17_13;

	mul.lo.s32 	%r82, %r32, -921707870;
	shr.u32 	%r83, %r82, 31;
	shl.b32 	%r84, %r104, 1;
	add.s32 	%r104, %r83, %r84;
	add.s32 	%r105, %r105, 1;

BB17_13:
	mov.u32 	%r85, 126;
	sub.s32 	%r86, %r85, %r105;
	shl.b32 	%r87, %r86, 23;
	add.s32 	%r88, %r104, 1;
	shr.u32 	%r89, %r88, 7;
	add.s32 	%r90, %r89, 1;
	shr.u32 	%r91, %r90, 1;
	add.s32 	%r92, %r91, %r87;
	or.b32  	%r93, %r92, %r28;
	mov.b32 	 %f44, %r93;

BB17_14:
	mul.rn.f32 	%f7, %f44, %f44;
	add.s32 	%r39, %r106, 1;
	and.b32  	%r40, %r39, 1;
	setp.eq.s32	%p11, %r40, 0;
	@%p11 bra 	BB17_16;
	bra.uni 	BB17_15;

BB17_16:
	mov.f32 	%f32, 0f3C08839E;
	mov.f32 	%f33, 0fB94CA1F9;
	fma.rn.f32 	%f45, %f33, %f7, %f32;
	bra.uni 	BB17_17;

BB17_15:
	mov.f32 	%f30, 0fBAB6061A;
	mov.f32 	%f31, 0f37CCF5CE;
	fma.rn.f32 	%f45, %f31, %f7, %f30;

BB17_17:
	@%p11 bra 	BB17_19;
	bra.uni 	BB17_18;

BB17_19:
	mov.f32 	%f37, 0fBE2AAAA3;
	fma.rn.f32 	%f38, %f45, %f7, %f37;
	mov.f32 	%f39, 0f00000000;
	fma.rn.f32 	%f46, %f38, %f7, %f39;
	bra.uni 	BB17_20;

BB17_18:
	mov.f32 	%f34, 0f3D2AAAA5;
	fma.rn.f32 	%f35, %f45, %f7, %f34;
	mov.f32 	%f36, 0fBF000000;
	fma.rn.f32 	%f46, %f35, %f7, %f36;

BB17_20:
	fma.rn.f32 	%f47, %f46, %f44, %f44;
	@%p11 bra 	BB17_22;

	mov.f32 	%f40, 0f3F800000;
	fma.rn.f32 	%f47, %f46, %f7, %f40;

BB17_22:
	and.b32  	%r94, %r39, 2;
	setp.eq.s32	%p14, %r94, 0;
	@%p14 bra 	BB17_24;

	mov.f32 	%f41, 0f00000000;
	mov.f32 	%f42, 0fBF800000;
	fma.rn.f32 	%f47, %f47, %f42, %f41;

BB17_24:
	mul.lo.s32 	%r95, %r96, %r43;
	mul.wide.s32 	%rd18, %r95, 4;
	add.s64 	%rd19, %rd1, %rd18;
	st.global.f32 	[%rd19], %f47;
	add.s32 	%r96, %r3, %r96;
	setp.lt.s32	%p15, %r96, %r42;
	@%p15 bra 	BB17_2;

BB17_25:
	ret;
}

	// .globl	map_cosh_float
.visible .entry map_cosh_float(
	.param .u32 map_cosh_float_param_0,
	.param .u64 map_cosh_float_param_1,
	.param .u32 map_cosh_float_param_2,
	.param .u64 map_cosh_float_param_3,
	.param .u32 map_cosh_float_param_4
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<19>;
	.reg .b32 	%r<15>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r6, [map_cosh_float_param_0];
	ld.param.u64 	%rd3, [map_cosh_float_param_1];
	ld.param.u32 	%r7, [map_cosh_float_param_2];
	ld.param.u64 	%rd4, [map_cosh_float_param_3];
	ld.param.u32 	%r8, [map_cosh_float_param_4];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r14, %r1, %r9, %r10;
	setp.ge.s32	%p1, %r14, %r6;
	@%p1 bra 	BB18_3;

	cvta.to.global.u64 	%rd1, %rd3;
	cvta.to.global.u64 	%rd2, %rd4;
	mov.u32 	%r11, %nctaid.x;
	mul.lo.s32 	%r3, %r11, %r1;

BB18_2:
	mul.lo.s32 	%r12, %r14, %r8;
	mul.wide.s32 	%rd5, %r12, 4;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.f32 	%f3, [%rd6];
	abs.f32 	%f4, %f3;
	mul.f32 	%f5, %f4, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f6, %f5;
	mov.f32 	%f7, 0fBF317200;
	fma.rn.f32 	%f8, %f6, %f7, %f4;
	mov.f32 	%f9, 0fB5BFBE8E;
	fma.rn.f32 	%f10, %f6, %f9, %f8;
	mul.f32 	%f2, %f10, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f1,%f2;
	// inline asm
	add.f32 	%f11, %f6, 0fC0000000;
	ex2.approx.f32 	%f12, %f11;
	mul.f32 	%f13, %f1, %f12;
	mov.f32 	%f14, 0f3E000000;
	div.approx.f32 	%f15, %f14, %f13;
	mov.f32 	%f16, 0f40000000;
	fma.rn.f32 	%f17, %f16, %f13, %f15;
	setp.ltu.f32	%p2, %f4, 0f42B40000;
	selp.f32	%f18, %f17, 0f7F800000, %p2;
	mul.lo.s32 	%r13, %r14, %r7;
	mul.wide.s32 	%rd7, %r13, 4;
	add.s64 	%rd8, %rd1, %rd7;
	st.global.f32 	[%rd8], %f18;
	add.s32 	%r14, %r3, %r14;
	setp.lt.s32	%p3, %r14, %r6;
	@%p3 bra 	BB18_2;

BB18_3:
	ret;
}

	// .globl	map_cospi_float
.visible .entry map_cospi_float(
	.param .u32 map_cospi_float_param_0,
	.param .u64 map_cospi_float_param_1,
	.param .u32 map_cospi_float_param_2,
	.param .u64 map_cospi_float_param_3,
	.param .u32 map_cospi_float_param_4
)
{
	.reg .pred 	%p<8>;
	.reg .f32 	%f<43>;
	.reg .b32 	%r<19>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r8, [map_cospi_float_param_0];
	ld.param.u64 	%rd3, [map_cospi_float_param_1];
	ld.param.u32 	%r9, [map_cospi_float_param_2];
	ld.param.u64 	%rd4, [map_cospi_float_param_3];
	ld.param.u32 	%r10, [map_cospi_float_param_4];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r11, %ctaid.x;
	mov.u32 	%r12, %tid.x;
	mad.lo.s32 	%r18, %r1, %r11, %r12;
	setp.ge.s32	%p1, %r18, %r8;
	@%p1 bra 	BB19_15;

	cvta.to.global.u64 	%rd1, %rd3;
	cvta.to.global.u64 	%rd2, %rd4;
	mov.u32 	%r13, %nctaid.x;
	mul.lo.s32 	%r3, %r13, %r1;

BB19_2:
	mul.lo.s32 	%r14, %r18, %r10;
	mul.wide.s32 	%rd5, %r14, 4;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.f32 	%f39, [%rd6];
	abs.f32 	%f17, %f39;
	setp.leu.f32	%p2, %f17, 0f4B800000;
	@%p2 bra 	BB19_4;

	mov.f32 	%f18, 0f00000000;
	mul.rn.f32 	%f39, %f39, %f18;

BB19_4:
	add.f32 	%f19, %f39, %f39;
	cvt.rni.f32.f32	%f20, %f19;
	cvt.rzi.s32.f32	%r15, %f20;
	neg.f32 	%f21, %f20;
	mov.f32 	%f22, 0f3F000000;
	fma.rn.f32 	%f23, %f21, %f22, %f39;
	mul.f32 	%f24, %f23, 0f34222169;
	mov.f32 	%f25, 0f40490FDA;
	fma.rn.f32 	%f4, %f23, %f25, %f24;
	add.s32 	%r5, %r15, 1;
	mul.rn.f32 	%f5, %f4, %f4;
	and.b32  	%r6, %r5, 1;
	setp.eq.s32	%p3, %r6, 0;
	@%p3 bra 	BB19_6;
	bra.uni 	BB19_5;

BB19_6:
	mov.f32 	%f28, 0f3C08839E;
	mov.f32 	%f29, 0fB94CA1F9;
	fma.rn.f32 	%f40, %f29, %f5, %f28;
	bra.uni 	BB19_7;

BB19_5:
	mov.f32 	%f26, 0fBAB6061A;
	mov.f32 	%f27, 0f37CCF5CE;
	fma.rn.f32 	%f40, %f27, %f5, %f26;

BB19_7:
	@%p3 bra 	BB19_9;
	bra.uni 	BB19_8;

BB19_9:
	mov.f32 	%f33, 0fBE2AAAA3;
	fma.rn.f32 	%f34, %f40, %f5, %f33;
	mov.f32 	%f35, 0f00000000;
	fma.rn.f32 	%f41, %f34, %f5, %f35;
	bra.uni 	BB19_10;

BB19_8:
	mov.f32 	%f30, 0f3D2AAAA5;
	fma.rn.f32 	%f31, %f40, %f5, %f30;
	mov.f32 	%f32, 0fBF000000;
	fma.rn.f32 	%f41, %f31, %f5, %f32;

BB19_10:
	fma.rn.f32 	%f42, %f41, %f4, %f4;
	@%p3 bra 	BB19_12;

	mov.f32 	%f36, 0f3F800000;
	fma.rn.f32 	%f42, %f41, %f5, %f36;

BB19_12:
	and.b32  	%r16, %r5, 2;
	setp.eq.s32	%p6, %r16, 0;
	@%p6 bra 	BB19_14;

	mov.f32 	%f37, 0f00000000;
	mov.f32 	%f38, 0fBF800000;
	fma.rn.f32 	%f42, %f42, %f38, %f37;

BB19_14:
	mul.lo.s32 	%r17, %r18, %r9;
	mul.wide.s32 	%rd7, %r17, 4;
	add.s64 	%rd8, %rd1, %rd7;
	st.global.f32 	[%rd8], %f42;
	add.s32 	%r18, %r3, %r18;
	setp.lt.s32	%p7, %r18, %r8;
	@%p7 bra 	BB19_2;

BB19_15:
	ret;
}

	// .globl	map_erfc_float
.visible .entry map_erfc_float(
	.param .u32 map_erfc_float_param_0,
	.param .u64 map_erfc_float_param_1,
	.param .u32 map_erfc_float_param_2,
	.param .u64 map_erfc_float_param_3,
	.param .u32 map_erfc_float_param_4
)
{
	.reg .pred 	%p<5>;
	.reg .f32 	%f<63>;
	.reg .b32 	%r<15>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r6, [map_erfc_float_param_0];
	ld.param.u64 	%rd3, [map_erfc_float_param_1];
	ld.param.u32 	%r7, [map_erfc_float_param_2];
	ld.param.u64 	%rd4, [map_erfc_float_param_3];
	ld.param.u32 	%r8, [map_erfc_float_param_4];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r14, %r1, %r9, %r10;
	setp.ge.s32	%p1, %r14, %r6;
	@%p1 bra 	BB20_3;

	cvta.to.global.u64 	%rd1, %rd3;
	cvta.to.global.u64 	%rd2, %rd4;
	mov.u32 	%r11, %nctaid.x;
	mul.lo.s32 	%r3, %r11, %r1;

BB20_2:
	mul.lo.s32 	%r12, %r14, %r8;
	mul.wide.s32 	%rd5, %r12, 4;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.f32 	%f7, [%rd6];
	abs.f32 	%f8, %f7;
	add.f32 	%f2, %f8, 0f40800000;
	// inline asm
	rcp.approx.ftz.f32 %f1,%f2;
	// inline asm
	add.f32 	%f9, %f8, 0fC0800000;
	mul.rn.f32 	%f10, %f9, %f1;
	add.f32 	%f11, %f10, 0f3F800000;
	mov.f32 	%f12, 0fC0800000;
	fma.rn.f32 	%f13, %f12, %f11, %f8;
	neg.f32 	%f14, %f10;
	fma.rn.f32 	%f15, %f14, %f8, %f13;
	fma.rn.f32 	%f16, %f1, %f15, %f10;
	mov.f32 	%f17, 0f3BE6E05B;
	mov.f32 	%f18, 0f3A69A091;
	fma.rn.f32 	%f19, %f18, %f16, %f17;
	mov.f32 	%f20, 0fBC81FB4B;
	fma.rn.f32 	%f21, %f19, %f16, %f20;
	mov.f32 	%f22, 0f3D15373B;
	fma.rn.f32 	%f23, %f21, %f16, %f22;
	mov.f32 	%f24, 0fBD887C5A;
	fma.rn.f32 	%f25, %f23, %f16, %f24;
	mov.f32 	%f26, 0f3DC021D5;
	fma.rn.f32 	%f27, %f25, %f16, %f26;
	mov.f32 	%f28, 0fBDCED424;
	fma.rn.f32 	%f29, %f27, %f16, %f28;
	mov.f32 	%f30, 0f3D8B74DE;
	fma.rn.f32 	%f31, %f29, %f16, %f30;
	mov.f32 	%f32, 0f3C7BF170;
	fma.rn.f32 	%f33, %f31, %f16, %f32;
	mov.f32 	%f34, 0fBE0EF8D4;
	fma.rn.f32 	%f35, %f33, %f16, %f34;
	mov.f32 	%f36, 0f3F9DD2C9;
	fma.rn.f32 	%f37, %f35, %f16, %f36;
	mov.f32 	%f38, 0f3F800000;
	mov.f32 	%f39, 0f40000000;
	fma.rn.f32 	%f4, %f39, %f8, %f38;
	// inline asm
	rcp.approx.ftz.f32 %f3,%f4;
	// inline asm
	mul.rn.f32 	%f40, %f37, %f3;
	mul.f32 	%f41, %f40, 0fC0000000;
	fma.rn.f32 	%f42, %f8, %f41, %f37;
	sub.f32 	%f43, %f42, %f40;
	fma.rn.f32 	%f44, %f43, %f3, %f40;
	mul.f32 	%f45, %f8, %f8;
	neg.f32 	%f46, %f45;
	mul.f32 	%f47, %f45, 0fBFB8AA3B;
	cvt.rzi.f32.f32	%f48, %f47;
	mov.f32 	%f49, 0fBF317200;
	fma.rn.f32 	%f50, %f48, %f49, %f46;
	mov.f32 	%f51, 0fB5BFBE8E;
	fma.rn.f32 	%f52, %f48, %f51, %f50;
	mul.f32 	%f6, %f52, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f5,%f6;
	// inline asm
	add.f32 	%f53, %f48, 0f00000000;
	ex2.approx.f32 	%f54, %f53;
	mul.f32 	%f55, %f5, %f54;
	neg.f32 	%f56, %f8;
	fma.rn.f32 	%f57, %f56, %f8, %f45;
	fma.rn.f32 	%f58, %f55, %f57, %f55;
	mul.f32 	%f59, %f44, %f58;
	setp.gt.f32	%p2, %f8, 0f4120E148;
	selp.f32	%f60, 0f00000000, %f59, %p2;
	setp.lt.f32	%p3, %f7, 0f00000000;
	sub.f32 	%f61, %f39, %f60;
	selp.f32	%f62, %f61, %f60, %p3;
	mul.lo.s32 	%r13, %r14, %r7;
	mul.wide.s32 	%rd7, %r13, 4;
	add.s64 	%rd8, %rd1, %rd7;
	st.global.f32 	[%rd8], %f62;
	add.s32 	%r14, %r3, %r14;
	setp.lt.s32	%p4, %r14, %r6;
	@%p4 bra 	BB20_2;

BB20_3:
	ret;
}

	// .globl	map_erfcinv_float
.visible .entry map_erfcinv_float(
	.param .u32 map_erfcinv_float_param_0,
	.param .u64 map_erfcinv_float_param_1,
	.param .u32 map_erfcinv_float_param_2,
	.param .u64 map_erfcinv_float_param_3,
	.param .u32 map_erfcinv_float_param_4
)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<56>;
	.reg .b32 	%r<15>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r6, [map_erfcinv_float_param_0];
	ld.param.u64 	%rd3, [map_erfcinv_float_param_1];
	ld.param.u32 	%r7, [map_erfcinv_float_param_2];
	ld.param.u64 	%rd4, [map_erfcinv_float_param_3];
	ld.param.u32 	%r8, [map_erfcinv_float_param_4];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r14, %r1, %r9, %r10;
	setp.ge.s32	%p1, %r14, %r6;
	@%p1 bra 	BB21_6;

	cvta.to.global.u64 	%rd1, %rd3;
	cvta.to.global.u64 	%rd2, %rd4;
	mov.u32 	%r11, %nctaid.x;
	mul.lo.s32 	%r3, %r11, %r1;

BB21_2:
	mul.lo.s32 	%r12, %r14, %r8;
	mul.wide.s32 	%rd5, %r12, 4;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.f32 	%f1, [%rd6];
	neg.f32 	%f2, %f1;
	mov.f32 	%f7, 0f40000000;
	add.rn.f32 	%f3, %f7, %f2;
	setp.le.f32	%p2, %f1, 0f3FFF9097;
	setp.ge.f32	%p3, %f1, 0f3B5ED289;
	and.pred  	%p4, %p3, %p2;
	@%p4 bra 	BB21_4;
	bra.uni 	BB21_3;

BB21_4:
	mul.rn.f32 	%f34, %f3, %f1;
	// inline asm
	lg2.approx.ftz.f32 %f33,%f34;
	// inline asm
	neg.f32 	%f35, %f33;
	mov.f32 	%f36, 0f3221F645;
	mov.f32 	%f37, 0fAF8A6370;
	fma.rn.f32 	%f38, %f37, %f35, %f36;
	mov.f32 	%f39, 0fB4016FDA;
	fma.rn.f32 	%f40, %f38, %f35, %f39;
	mov.f32 	%f41, 0f3468F846;
	fma.rn.f32 	%f42, %f40, %f35, %f41;
	mov.f32 	%f43, 0f370742AA;
	fma.rn.f32 	%f44, %f42, %f35, %f43;
	mov.f32 	%f45, 0fB804DB4D;
	fma.rn.f32 	%f46, %f44, %f35, %f45;
	mov.f32 	%f47, 0fBA4AFEA1;
	fma.rn.f32 	%f48, %f46, %f35, %f47;
	mov.f32 	%f49, 0f3BB5C027;
	fma.rn.f32 	%f50, %f48, %f35, %f49;
	mov.f32 	%f51, 0f3E24AE0F;
	fma.rn.f32 	%f52, %f50, %f35, %f51;
	mov.f32 	%f53, 0f3F62DFC4;
	fma.rn.f32 	%f54, %f52, %f35, %f53;
	fma.rn.f32 	%f55, %f54, %f2, %f54;
	bra.uni 	BB21_5;

BB21_3:
	setp.gt.f32	%p5, %f1, 0f3F800000;
	selp.f32	%f12, %f3, %f1, %p5;
	lg2.approx.f32 	%f13, %f12;
	neg.f32 	%f9, %f13;
	// inline asm
	rsqrt.approx.ftz.f32 %f8,%f9;
	// inline asm
	mov.f32 	%f14, 0f42FEF829;
	mov.f32 	%f15, 0fC27C73F1;
	fma.rn.f32 	%f16, %f15, %f8, %f14;
	mov.f32 	%f17, 0fC2E4361C;
	fma.rn.f32 	%f18, %f16, %f8, %f17;
	mov.f32 	%f19, 0f42714D9B;
	fma.rn.f32 	%f20, %f18, %f8, %f19;
	mov.f32 	%f21, 0fC1AE51B3;
	fma.rn.f32 	%f22, %f20, %f8, %f21;
	mov.f32 	%f23, 0f40CEF504;
	fma.rn.f32 	%f24, %f22, %f8, %f23;
	mov.f32 	%f25, 0fBFEA9E05;
	fma.rn.f32 	%f26, %f24, %f8, %f25;
	mov.f32 	%f27, 0fBCF871F4;
	fma.rn.f32 	%f28, %f26, %f8, %f27;
	mov.f32 	%f29, 0f3F553775;
	fma.rn.f32 	%f30, %f28, %f8, %f29;
	// inline asm
	rcp.approx.ftz.f32 %f10,%f8;
	// inline asm
	mul.rn.f32 	%f31, %f30, %f10;
	neg.f32 	%f32, %f31;
	selp.f32	%f55, %f32, %f31, %p5;

BB21_5:
	mul.lo.s32 	%r13, %r14, %r7;
	mul.wide.s32 	%rd7, %r13, 4;
	add.s64 	%rd8, %rd1, %rd7;
	st.global.f32 	[%rd8], %f55;
	add.s32 	%r14, %r3, %r14;
	setp.lt.s32	%p6, %r14, %r6;
	@%p6 bra 	BB21_2;

BB21_6:
	ret;
}

	// .globl	map_erfcx_float
.visible .entry map_erfcx_float(
	.param .u32 map_erfcx_float_param_0,
	.param .u64 map_erfcx_float_param_1,
	.param .u32 map_erfcx_float_param_2,
	.param .u64 map_erfcx_float_param_3,
	.param .u32 map_erfcx_float_param_4
)
{
	.reg .pred 	%p<8>;
	.reg .f32 	%f<81>;
	.reg .b32 	%r<15>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r6, [map_erfcx_float_param_0];
	ld.param.u64 	%rd3, [map_erfcx_float_param_1];
	ld.param.u32 	%r7, [map_erfcx_float_param_2];
	ld.param.u64 	%rd4, [map_erfcx_float_param_3];
	ld.param.u32 	%r8, [map_erfcx_float_param_4];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r14, %r1, %r9, %r10;
	setp.ge.s32	%p1, %r14, %r6;
	@%p1 bra 	BB22_8;

	cvta.to.global.u64 	%rd1, %rd3;
	cvta.to.global.u64 	%rd2, %rd4;
	mov.u32 	%r11, %nctaid.x;
	mul.lo.s32 	%r3, %r11, %r1;

BB22_2:
	mul.lo.s32 	%r12, %r14, %r8;
	mul.wide.s32 	%rd5, %r12, 4;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.f32 	%f1, [%rd6];
	abs.f32 	%f2, %f1;
	setp.lt.f32	%p2, %f2, 0f4120E148;
	@%p2 bra 	BB22_4;
	bra.uni 	BB22_3;

BB22_4:
	add.f32 	%f23, %f2, 0f40800000;
	// inline asm
	rcp.approx.ftz.f32 %f22,%f23;
	// inline asm
	add.f32 	%f26, %f2, 0fC0800000;
	mul.rn.f32 	%f27, %f26, %f22;
	add.f32 	%f28, %f27, 0f3F800000;
	mov.f32 	%f29, 0fC0800000;
	fma.rn.f32 	%f30, %f29, %f28, %f2;
	neg.f32 	%f31, %f27;
	fma.rn.f32 	%f32, %f31, %f2, %f30;
	fma.rn.f32 	%f33, %f22, %f32, %f27;
	mov.f32 	%f34, 0f3BE6E05B;
	mov.f32 	%f35, 0f3A69A091;
	fma.rn.f32 	%f36, %f35, %f33, %f34;
	mov.f32 	%f37, 0fBC81FB4B;
	fma.rn.f32 	%f38, %f36, %f33, %f37;
	mov.f32 	%f39, 0f3D15373B;
	fma.rn.f32 	%f40, %f38, %f33, %f39;
	mov.f32 	%f41, 0fBD887C5A;
	fma.rn.f32 	%f42, %f40, %f33, %f41;
	mov.f32 	%f43, 0f3DC021D5;
	fma.rn.f32 	%f44, %f42, %f33, %f43;
	mov.f32 	%f45, 0fBDCED424;
	fma.rn.f32 	%f46, %f44, %f33, %f45;
	mov.f32 	%f47, 0f3D8B74DE;
	fma.rn.f32 	%f48, %f46, %f33, %f47;
	mov.f32 	%f49, 0f3C7BF170;
	fma.rn.f32 	%f50, %f48, %f33, %f49;
	mov.f32 	%f51, 0fBE0EF8D4;
	fma.rn.f32 	%f52, %f50, %f33, %f51;
	mov.f32 	%f53, 0f3F9DD2C9;
	fma.rn.f32 	%f54, %f52, %f33, %f53;
	mov.f32 	%f55, 0f3F800000;
	mov.f32 	%f56, 0f40000000;
	fma.rn.f32 	%f25, %f56, %f2, %f55;
	// inline asm
	rcp.approx.ftz.f32 %f24,%f25;
	// inline asm
	mul.rn.f32 	%f57, %f54, %f24;
	mul.f32 	%f58, %f57, 0fC0000000;
	fma.rn.f32 	%f59, %f2, %f58, %f54;
	sub.f32 	%f60, %f59, %f57;
	fma.rn.f32 	%f80, %f60, %f24, %f57;
	bra.uni 	BB22_5;

BB22_3:
	mul.f32 	%f8, %f2, 0f3E800000;
	mov.f32 	%f9, 0f3E800000;
	div.approx.f32 	%f10, %f9, %f8;
	mul.f32 	%f11, %f10, %f10;
	mov.f32 	%f12, 0fBFF00000;
	mov.f32 	%f13, 0f40D20000;
	fma.rn.f32 	%f14, %f13, %f11, %f12;
	mov.f32 	%f15, 0f3F400000;
	fma.rn.f32 	%f16, %f14, %f11, %f15;
	mov.f32 	%f17, 0fBF000000;
	fma.rn.f32 	%f18, %f16, %f11, %f17;
	mov.f32 	%f19, 0f3F800000;
	fma.rn.f32 	%f20, %f18, %f11, %f19;
	mul.f32 	%f21, %f10, 0f3F106EBB;
	mul.f32 	%f80, %f21, %f20;

BB22_5:
	setp.geu.f32	%p3, %f1, 0f00000000;
	@%p3 bra 	BB22_7;

	mul.rz.f32 	%f63, %f2, %f2;
	neg.f32 	%f64, %f63;
	fma.rn.f32 	%f65, %f2, %f2, %f64;
	mul.f32 	%f66, %f63, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f67, %f66;
	mov.f32 	%f68, 0fBF317200;
	fma.rn.f32 	%f69, %f67, %f68, %f63;
	mov.f32 	%f70, 0fB5BFBE8E;
	fma.rn.f32 	%f71, %f67, %f70, %f69;
	mul.f32 	%f62, %f71, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f61,%f62;
	// inline asm
	add.f32 	%f72, %f67, 0f00000000;
	ex2.approx.f32 	%f73, %f72;
	mul.f32 	%f74, %f61, %f73;
	setp.lt.f32	%p4, %f63, 0fC2D20000;
	selp.f32	%f75, 0f00000000, %f74, %p4;
	setp.gt.f32	%p5, %f63, 0f42D20000;
	selp.f32	%f76, 0f7F800000, %f75, %p5;
	add.f32 	%f77, %f76, %f76;
	fma.rn.f32 	%f78, %f77, %f65, %f77;
	sub.f32 	%f79, %f78, %f80;
	setp.eq.f32	%p6, %f77, 0f7F800000;
	selp.f32	%f80, %f77, %f79, %p6;

BB22_7:
	mul.lo.s32 	%r13, %r14, %r7;
	mul.wide.s32 	%rd7, %r13, 4;
	add.s64 	%rd8, %rd1, %rd7;
	st.global.f32 	[%rd8], %f80;
	add.s32 	%r14, %r3, %r14;
	setp.lt.s32	%p7, %r14, %r6;
	@%p7 bra 	BB22_2;

BB22_8:
	ret;
}

	// .globl	map_erf_float
.visible .entry map_erf_float(
	.param .u32 map_erf_float_param_0,
	.param .u64 map_erf_float_param_1,
	.param .u32 map_erf_float_param_2,
	.param .u64 map_erf_float_param_3,
	.param .u32 map_erf_float_param_4
)
{
	.reg .pred 	%p<5>;
	.reg .f32 	%f<37>;
	.reg .b32 	%r<20>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r6, [map_erf_float_param_0];
	ld.param.u64 	%rd3, [map_erf_float_param_1];
	ld.param.u32 	%r7, [map_erf_float_param_2];
	ld.param.u64 	%rd4, [map_erf_float_param_3];
	ld.param.u32 	%r8, [map_erf_float_param_4];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r19, %r1, %r9, %r10;
	setp.ge.s32	%p1, %r19, %r6;
	@%p1 bra 	BB23_6;

	cvta.to.global.u64 	%rd1, %rd3;
	cvta.to.global.u64 	%rd2, %rd4;
	mov.u32 	%r11, %nctaid.x;
	mul.lo.s32 	%r3, %r11, %r1;

BB23_2:
	mul.lo.s32 	%r12, %r19, %r8;
	mul.wide.s32 	%rd5, %r12, 4;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.f32 	%f1, [%rd6];
	abs.f32 	%f2, %f1;
	setp.ltu.f32	%p2, %f2, 0f3F800000;
	@%p2 bra 	BB23_4;
	bra.uni 	BB23_3;

BB23_4:
	mul.f32 	%f24, %f1, %f1;
	mov.f32 	%f25, 0f3BA0C9F8;
	mov.f32 	%f26, 0fBA1268FB;
	fma.rn.f32 	%f27, %f26, %f24, %f25;
	mov.f32 	%f28, 0fBCDABFD4;
	fma.rn.f32 	%f29, %f27, %f24, %f28;
	mov.f32 	%f30, 0f3DE70331;
	fma.rn.f32 	%f31, %f29, %f24, %f30;
	mov.f32 	%f32, 0fBEC09330;
	fma.rn.f32 	%f33, %f31, %f24, %f32;
	mov.f32 	%f34, 0f3F906EBA;
	fma.rn.f32 	%f35, %f33, %f24, %f34;
	mul.f32 	%f36, %f1, %f35;
	bra.uni 	BB23_5;

BB23_3:
	mov.f32 	%f8, 0f3A03BB71;
	mov.f32 	%f9, 0fB7B730FB;
	fma.rn.f32 	%f10, %f9, %f2, %f8;
	mov.f32 	%f11, 0fBBACA3B3;
	fma.rn.f32 	%f12, %f10, %f2, %f11;
	mov.f32 	%f13, 0f3D0A7445;
	fma.rn.f32 	%f14, %f12, %f2, %f13;
	mov.f32 	%f15, 0fBE1B3B75;
	fma.rn.f32 	%f16, %f14, %f2, %f15;
	mov.f32 	%f17, 0fBF6B385A;
	fma.rn.f32 	%f18, %f16, %f2, %f17;
	mov.f32 	%f19, 0fBFD0316E;
	fma.rn.f32 	%f20, %f18, %f2, %f19;
	mov.f32 	%f21, 0fBA031CCE;
	fma.rn.f32 	%f7, %f20, %f2, %f21;
	// inline asm
	ex2.approx.ftz.f32 %f6,%f7;
	// inline asm
	mov.f32 	%f22, 0f3F800000;
	sub.f32 	%f23, %f22, %f6;
	mov.b32 	 %r13, %f23;
	setp.ltu.f32	%p3, %f2, 0f407AD445;
	selp.b32	%r14, %r13, 1065353216, %p3;
	mov.b32 	 %r15, %f1;
	and.b32  	%r16, %r15, -2147483648;
	or.b32  	%r17, %r14, %r16;
	mov.b32 	 %f36, %r17;

BB23_5:
	mul.lo.s32 	%r18, %r19, %r7;
	mul.wide.s32 	%rd7, %r18, 4;
	add.s64 	%rd8, %rd1, %rd7;
	st.global.f32 	[%rd8], %f36;
	add.s32 	%r19, %r3, %r19;
	setp.lt.s32	%p4, %r19, %r6;
	@%p4 bra 	BB23_2;

BB23_6:
	ret;
}

	// .globl	map_erfinv_float
.visible .entry map_erfinv_float(
	.param .u32 map_erfinv_float_param_0,
	.param .u64 map_erfinv_float_param_1,
	.param .u32 map_erfinv_float_param_2,
	.param .u64 map_erfinv_float_param_3,
	.param .u32 map_erfinv_float_param_4
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<45>;
	.reg .b32 	%r<19>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r6, [map_erfinv_float_param_0];
	ld.param.u64 	%rd3, [map_erfinv_float_param_1];
	ld.param.u32 	%r7, [map_erfinv_float_param_2];
	ld.param.u64 	%rd4, [map_erfinv_float_param_3];
	ld.param.u32 	%r8, [map_erfinv_float_param_4];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r18, %r1, %r9, %r10;
	setp.ge.s32	%p1, %r18, %r6;
	@%p1 bra 	BB24_6;

	cvta.to.global.u64 	%rd1, %rd3;
	cvta.to.global.u64 	%rd2, %rd4;
	mov.u32 	%r11, %nctaid.x;
	mul.lo.s32 	%r3, %r11, %r1;

BB24_2:
	mul.lo.s32 	%r12, %r18, %r8;
	mul.wide.s32 	%rd5, %r12, 4;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.f32 	%f1, [%rd6];
	neg.f32 	%f8, %f1;
	mov.f32 	%f9, 0f3F800000;
	fma.rn.f32 	%f7, %f1, %f8, %f9;
	// inline asm
	lg2.approx.ftz.f32 %f6,%f7;
	// inline asm
	neg.f32 	%f2, %f6;
	setp.lt.f32	%p2, %f6, 0fC1033333;
	@%p2 bra 	BB24_4;
	bra.uni 	BB24_3;

BB24_4:
	// inline asm
	rsqrt.approx.ftz.f32 %f29,%f2;
	// inline asm
	mov.f32 	%f31, 0fBF29BAA5;
	mov.f32 	%f32, 0fBF1704A1;
	fma.rn.f32 	%f33, %f32, %f29, %f31;
	mov.f32 	%f34, 0f3FCC6ADC;
	fma.rn.f32 	%f35, %f33, %f29, %f34;
	mov.f32 	%f36, 0fBF2CDAED;
	fma.rn.f32 	%f37, %f35, %f29, %f36;
	mov.f32 	%f38, 0fBDC30537;
	fma.rn.f32 	%f39, %f37, %f29, %f38;
	mov.f32 	%f40, 0f3F55D9B9;
	fma.rn.f32 	%f41, %f39, %f29, %f40;
	rcp.rn.f32 	%f42, %f29;
	mul.f32 	%f43, %f41, %f42;
	mov.b32 	 %r13, %f43;
	mov.b32 	 %r14, %f1;
	and.b32  	%r15, %r14, -2147483648;
	or.b32  	%r16, %r13, %r15;
	mov.b32 	 %f44, %r16;
	bra.uni 	BB24_5;

BB24_3:
	mov.f32 	%f10, 0f3221F645;
	mov.f32 	%f11, 0fAF8A6370;
	fma.rn.f32 	%f12, %f11, %f2, %f10;
	mov.f32 	%f13, 0fB4016FDA;
	fma.rn.f32 	%f14, %f12, %f2, %f13;
	mov.f32 	%f15, 0f3468F846;
	fma.rn.f32 	%f16, %f14, %f2, %f15;
	mov.f32 	%f17, 0f370742AA;
	fma.rn.f32 	%f18, %f16, %f2, %f17;
	mov.f32 	%f19, 0fB804DB4D;
	fma.rn.f32 	%f20, %f18, %f2, %f19;
	mov.f32 	%f21, 0fBA4AFEA1;
	fma.rn.f32 	%f22, %f20, %f2, %f21;
	mov.f32 	%f23, 0f3BB5C027;
	fma.rn.f32 	%f24, %f22, %f2, %f23;
	mov.f32 	%f25, 0f3E24AE0F;
	fma.rn.f32 	%f26, %f24, %f2, %f25;
	mov.f32 	%f27, 0f3F62DFC4;
	fma.rn.f32 	%f28, %f26, %f2, %f27;
	mul.f32 	%f44, %f1, %f28;

BB24_5:
	mul.lo.s32 	%r17, %r18, %r7;
	mul.wide.s32 	%rd7, %r17, 4;
	add.s64 	%rd8, %rd1, %rd7;
	st.global.f32 	[%rd8], %f44;
	add.s32 	%r18, %r3, %r18;
	setp.lt.s32	%p3, %r18, %r6;
	@%p3 bra 	BB24_2;

BB24_6:
	ret;
}

	// .globl	map_exp10_float
.visible .entry map_exp10_float(
	.param .u32 map_exp10_float_param_0,
	.param .u64 map_exp10_float_param_1,
	.param .u32 map_exp10_float_param_2,
	.param .u64 map_exp10_float_param_3,
	.param .u32 map_exp10_float_param_4
)
{
	.reg .pred 	%p<5>;
	.reg .f32 	%f<14>;
	.reg .b32 	%r<15>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r6, [map_exp10_float_param_0];
	ld.param.u64 	%rd3, [map_exp10_float_param_1];
	ld.param.u32 	%r7, [map_exp10_float_param_2];
	ld.param.u64 	%rd4, [map_exp10_float_param_3];
	ld.param.u32 	%r8, [map_exp10_float_param_4];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r14, %r1, %r9, %r10;
	setp.ge.s32	%p1, %r14, %r6;
	@%p1 bra 	BB25_3;

	cvta.to.global.u64 	%rd1, %rd3;
	cvta.to.global.u64 	%rd2, %rd4;
	mov.u32 	%r11, %nctaid.x;
	mul.lo.s32 	%r3, %r11, %r1;

BB25_2:
	mul.lo.s32 	%r12, %r14, %r8;
	mul.wide.s32 	%rd5, %r12, 4;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.f32 	%f3, [%rd6];
	mul.f32 	%f4, %f3, 0f40549A78;
	cvt.rzi.f32.f32	%f5, %f4;
	mov.f32 	%f6, 0fBE9A2080;
	fma.rn.f32 	%f7, %f5, %f6, %f3;
	mov.f32 	%f8, 0fB55427DE;
	fma.rn.f32 	%f9, %f5, %f8, %f7;
	mul.f32 	%f2, %f9, 0f40549A78;
	// inline asm
	ex2.approx.ftz.f32 %f1,%f2;
	// inline asm
	ex2.approx.f32 	%f10, %f5;
	mul.f32 	%f11, %f1, %f10;
	setp.lt.f32	%p2, %f3, 0fC2380000;
	selp.f32	%f12, 0f00000000, %f11, %p2;
	setp.gt.f32	%p3, %f3, 0f42380000;
	selp.f32	%f13, 0f7F800000, %f12, %p3;
	mul.lo.s32 	%r13, %r14, %r7;
	mul.wide.s32 	%rd7, %r13, 4;
	add.s64 	%rd8, %rd1, %rd7;
	st.global.f32 	[%rd8], %f13;
	add.s32 	%r14, %r3, %r14;
	setp.lt.s32	%p4, %r14, %r6;
	@%p4 bra 	BB25_2;

BB25_3:
	ret;
}

	// .globl	map_exp2_float
.visible .entry map_exp2_float(
	.param .u32 map_exp2_float_param_0,
	.param .u64 map_exp2_float_param_1,
	.param .u32 map_exp2_float_param_2,
	.param .u64 map_exp2_float_param_3,
	.param .u32 map_exp2_float_param_4
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<15>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r6, [map_exp2_float_param_0];
	ld.param.u64 	%rd3, [map_exp2_float_param_1];
	ld.param.u32 	%r7, [map_exp2_float_param_2];
	ld.param.u64 	%rd4, [map_exp2_float_param_3];
	ld.param.u32 	%r8, [map_exp2_float_param_4];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r14, %r1, %r9, %r10;
	setp.ge.s32	%p1, %r14, %r6;
	@%p1 bra 	BB26_3;

	cvta.to.global.u64 	%rd1, %rd3;
	cvta.to.global.u64 	%rd2, %rd4;
	mov.u32 	%r11, %nctaid.x;
	mul.lo.s32 	%r3, %r11, %r1;

BB26_2:
	mul.lo.s32 	%r12, %r14, %r8;
	mul.wide.s32 	%rd5, %r12, 4;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.f32 	%f1, [%rd6];
	ex2.approx.f32 	%f2, %f1;
	mul.lo.s32 	%r13, %r14, %r7;
	mul.wide.s32 	%rd7, %r13, 4;
	add.s64 	%rd8, %rd1, %rd7;
	st.global.f32 	[%rd8], %f2;
	add.s32 	%r14, %r3, %r14;
	setp.lt.s32	%p2, %r14, %r6;
	@%p2 bra 	BB26_2;

BB26_3:
	ret;
}

	// .globl	map_exp_float
.visible .entry map_exp_float(
	.param .u32 map_exp_float_param_0,
	.param .u64 map_exp_float_param_1,
	.param .u32 map_exp_float_param_2,
	.param .u64 map_exp_float_param_3,
	.param .u32 map_exp_float_param_4
)
{
	.reg .pred 	%p<5>;
	.reg .f32 	%f<15>;
	.reg .b32 	%r<15>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r6, [map_exp_float_param_0];
	ld.param.u64 	%rd3, [map_exp_float_param_1];
	ld.param.u32 	%r7, [map_exp_float_param_2];
	ld.param.u64 	%rd4, [map_exp_float_param_3];
	ld.param.u32 	%r8, [map_exp_float_param_4];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r14, %r1, %r9, %r10;
	setp.ge.s32	%p1, %r14, %r6;
	@%p1 bra 	BB27_3;

	cvta.to.global.u64 	%rd1, %rd3;
	cvta.to.global.u64 	%rd2, %rd4;
	mov.u32 	%r11, %nctaid.x;
	mul.lo.s32 	%r3, %r11, %r1;

BB27_2:
	mul.lo.s32 	%r12, %r14, %r8;
	mul.wide.s32 	%rd5, %r12, 4;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.f32 	%f3, [%rd6];
	mul.f32 	%f4, %f3, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f5, %f4;
	mov.f32 	%f6, 0fBF317200;
	fma.rn.f32 	%f7, %f5, %f6, %f3;
	mov.f32 	%f8, 0fB5BFBE8E;
	fma.rn.f32 	%f9, %f5, %f8, %f7;
	mul.f32 	%f2, %f9, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f1,%f2;
	// inline asm
	add.f32 	%f10, %f5, 0f00000000;
	ex2.approx.f32 	%f11, %f10;
	mul.f32 	%f12, %f1, %f11;
	setp.lt.f32	%p2, %f3, 0fC2D20000;
	selp.f32	%f13, 0f00000000, %f12, %p2;
	setp.gt.f32	%p3, %f3, 0f42D20000;
	selp.f32	%f14, 0f7F800000, %f13, %p3;
	mul.lo.s32 	%r13, %r14, %r7;
	mul.wide.s32 	%rd7, %r13, 4;
	add.s64 	%rd8, %rd1, %rd7;
	st.global.f32 	[%rd8], %f14;
	add.s32 	%r14, %r3, %r14;
	setp.lt.s32	%p4, %r14, %r6;
	@%p4 bra 	BB27_2;

BB27_3:
	ret;
}

	// .globl	map_expm1_float
.visible .entry map_expm1_float(
	.param .u32 map_expm1_float_param_0,
	.param .u64 map_expm1_float_param_1,
	.param .u32 map_expm1_float_param_2,
	.param .u64 map_expm1_float_param_3,
	.param .u32 map_expm1_float_param_4
)
{
	.reg .pred 	%p<8>;
	.reg .f32 	%f<33>;
	.reg .b32 	%r<15>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r6, [map_expm1_float_param_0];
	ld.param.u64 	%rd3, [map_expm1_float_param_1];
	ld.param.u32 	%r7, [map_expm1_float_param_2];
	ld.param.u64 	%rd4, [map_expm1_float_param_3];
	ld.param.u32 	%r8, [map_expm1_float_param_4];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r14, %r1, %r9, %r10;
	setp.ge.s32	%p1, %r14, %r6;
	@%p1 bra 	BB28_3;

	cvta.to.global.u64 	%rd1, %rd3;
	cvta.to.global.u64 	%rd2, %rd4;
	mov.u32 	%r11, %nctaid.x;
	mul.lo.s32 	%r3, %r11, %r1;

BB28_2:
	mul.lo.s32 	%r12, %r14, %r8;
	mul.wide.s32 	%rd5, %r12, 4;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.f32 	%f1, [%rd6];
	mul.f32 	%f2, %f1, 0f3FB8AA3B;
	cvt.rni.f32.f32	%f3, %f2;
	abs.f32 	%f4, %f1;
	setp.lt.f32	%p2, %f4, 0f3ED1EB85;
	selp.f32	%f5, 0f00000000, %f3, %p2;
	neg.f32 	%f6, %f5;
	mov.f32 	%f7, 0f3F317200;
	fma.rn.f32 	%f8, %f6, %f7, %f1;
	mov.f32 	%f9, 0f35BFBE8E;
	fma.rn.f32 	%f10, %f6, %f9, %f8;
	setp.eq.f32	%p3, %f5, 0f43000000;
	add.f32 	%f11, %f5, 0fBF800000;
	selp.f32	%f12, %f11, %f5, %p3;
	mov.f32 	%f13, 0f3C095663;
	mov.f32 	%f14, 0f3AB5EBE6;
	fma.rn.f32 	%f15, %f14, %f10, %f13;
	mov.f32 	%f16, 0f3D2AABE3;
	fma.rn.f32 	%f17, %f15, %f10, %f16;
	mov.f32 	%f18, 0f3E2AA9F6;
	fma.rn.f32 	%f19, %f17, %f10, %f18;
	mov.f32 	%f20, 0f3EFFFFFE;
	fma.rn.f32 	%f21, %f19, %f10, %f20;
	mul.f32 	%f22, %f10, %f21;
	fma.rn.f32 	%f23, %f22, %f10, %f10;
	ex2.approx.f32 	%f24, %f12;
	add.f32 	%f25, %f24, 0fBF800000;
	fma.rn.f32 	%f26, %f23, %f24, %f25;
	add.f32 	%f27, %f26, %f26;
	selp.f32	%f28, %f27, %f26, %p3;
	setp.gt.f32	%p4, %f12, 0f43000000;
	selp.f32	%f29, 0f7F800000, %f28, %p4;
	setp.lt.f32	%p5, %f12, 0fC1C80000;
	selp.f32	%f30, 0fBF800000, %f29, %p5;
	setp.eq.f32	%p6, %f1, 0f00000000;
	add.f32 	%f31, %f1, %f1;
	selp.f32	%f32, %f31, %f30, %p6;
	mul.lo.s32 	%r13, %r14, %r7;
	mul.wide.s32 	%rd7, %r13, 4;
	add.s64 	%rd8, %rd1, %rd7;
	st.global.f32 	[%rd8], %f32;
	add.s32 	%r14, %r3, %r14;
	setp.lt.s32	%p7, %r14, %r6;
	@%p7 bra 	BB28_2;

BB28_3:
	ret;
}

	// .globl	map_fabs_float
.visible .entry map_fabs_float(
	.param .u32 map_fabs_float_param_0,
	.param .u64 map_fabs_float_param_1,
	.param .u32 map_fabs_float_param_2,
	.param .u64 map_fabs_float_param_3,
	.param .u32 map_fabs_float_param_4
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<15>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r6, [map_fabs_float_param_0];
	ld.param.u64 	%rd3, [map_fabs_float_param_1];
	ld.param.u32 	%r7, [map_fabs_float_param_2];
	ld.param.u64 	%rd4, [map_fabs_float_param_3];
	ld.param.u32 	%r8, [map_fabs_float_param_4];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r14, %r1, %r9, %r10;
	setp.ge.s32	%p1, %r14, %r6;
	@%p1 bra 	BB29_3;

	cvta.to.global.u64 	%rd1, %rd3;
	cvta.to.global.u64 	%rd2, %rd4;
	mov.u32 	%r11, %nctaid.x;
	mul.lo.s32 	%r3, %r11, %r1;

BB29_2:
	mul.lo.s32 	%r12, %r14, %r8;
	mul.wide.s32 	%rd5, %r12, 4;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.f32 	%f1, [%rd6];
	abs.f32 	%f2, %f1;
	mul.lo.s32 	%r13, %r14, %r7;
	mul.wide.s32 	%rd7, %r13, 4;
	add.s64 	%rd8, %rd1, %rd7;
	st.global.f32 	[%rd8], %f2;
	add.s32 	%r14, %r3, %r14;
	setp.lt.s32	%p2, %r14, %r6;
	@%p2 bra 	BB29_2;

BB29_3:
	ret;
}

	// .globl	map_floor_float
.visible .entry map_floor_float(
	.param .u32 map_floor_float_param_0,
	.param .u64 map_floor_float_param_1,
	.param .u32 map_floor_float_param_2,
	.param .u64 map_floor_float_param_3,
	.param .u32 map_floor_float_param_4
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<15>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r6, [map_floor_float_param_0];
	ld.param.u64 	%rd3, [map_floor_float_param_1];
	ld.param.u32 	%r7, [map_floor_float_param_2];
	ld.param.u64 	%rd4, [map_floor_float_param_3];
	ld.param.u32 	%r8, [map_floor_float_param_4];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r14, %r1, %r9, %r10;
	setp.ge.s32	%p1, %r14, %r6;
	@%p1 bra 	BB30_3;

	cvta.to.global.u64 	%rd1, %rd3;
	cvta.to.global.u64 	%rd2, %rd4;
	mov.u32 	%r11, %nctaid.x;
	mul.lo.s32 	%r3, %r11, %r1;

BB30_2:
	mul.lo.s32 	%r12, %r14, %r8;
	mul.wide.s32 	%rd5, %r12, 4;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.f32 	%f1, [%rd6];
	cvt.rmi.f32.f32	%f2, %f1;
	mul.lo.s32 	%r13, %r14, %r7;
	mul.wide.s32 	%rd7, %r13, 4;
	add.s64 	%rd8, %rd1, %rd7;
	st.global.f32 	[%rd8], %f2;
	add.s32 	%r14, %r3, %r14;
	setp.lt.s32	%p2, %r14, %r6;
	@%p2 bra 	BB30_2;

BB30_3:
	ret;
}

	// .globl	map_j0_float
.visible .entry map_j0_float(
	.param .u32 map_j0_float_param_0,
	.param .u64 map_j0_float_param_1,
	.param .u32 map_j0_float_param_2,
	.param .u64 map_j0_float_param_3,
	.param .u32 map_j0_float_param_4
)
{
	.local .align 4 .b8 	__local_depot31[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<26>;
	.reg .f32 	%f<129>;
	.reg .b32 	%r<197>;
	.reg .b64 	%rd<36>;


	mov.u64 	%rd35, __local_depot31;
	cvta.local.u64 	%SP, %rd35;
	ld.param.u32 	%r76, [map_j0_float_param_0];
	ld.param.u64 	%rd13, [map_j0_float_param_1];
	ld.param.u32 	%r77, [map_j0_float_param_2];
	ld.param.u64 	%rd14, [map_j0_float_param_3];
	ld.param.u32 	%r78, [map_j0_float_param_4];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r79, %ctaid.x;
	mov.u32 	%r80, %tid.x;
	mad.lo.s32 	%r176, %r1, %r79, %r80;
	setp.ge.s32	%p1, %r176, %r76;
	@%p1 bra 	BB31_39;

	mov.u32 	%r81, %nctaid.x;
	mul.lo.s32 	%r3, %r81, %r1;
	cvta.to.global.u64 	%rd15, %rd14;
	cvta.to.global.u64 	%rd28, %rd13;

BB31_2:
	mul.lo.s32 	%r82, %r176, %r78;
	mul.wide.s32 	%rd16, %r82, 4;
	add.s64 	%rd17, %rd15, %rd16;
	ld.global.f32 	%f28, [%rd17];
	abs.f32 	%f1, %f28;
	setp.gtu.f32	%p2, %f1, 0f41000000;
	@%p2 bra 	BB31_4;
	bra.uni 	BB31_3;

BB31_4:
	abs.f32 	%f65, %f1;
	mov.f32 	%f128, 0f00000000;
	setp.eq.f32	%p3, %f65, 0f7F800000;
	@%p3 bra 	BB31_38;

	// inline asm
	rcp.approx.ftz.f32 %f66,%f1;
	// inline asm
	mul.f32 	%f68, %f66, %f66;
	mov.f32 	%f69, 0fBF03B7C2;
	mov.f32 	%f70, 0f4056FE93;
	fma.rn.f32 	%f71, %f70, %f68, %f69;
	mov.f32 	%f72, 0f3DD3B3F3;
	fma.rn.f32 	%f73, %f71, %f68, %f72;
	mov.f32 	%f74, 0fBD7FFFB6;
	fma.rn.f32 	%f75, %f73, %f68, %f74;
	mov.f32 	%f76, 0f3F800000;
	fma.rn.f32 	%f77, %f75, %f68, %f76;
	mov.f32 	%f78, 0fBE52412D;
	mov.f32 	%f79, 0f3F91E009;
	fma.rn.f32 	%f80, %f79, %f68, %f78;
	mov.f32 	%f81, 0f3D854ED1;
	fma.rn.f32 	%f82, %f80, %f68, %f81;
	mov.f32 	%f83, 0fBDFFFFFF;
	fma.rn.f32 	%f84, %f82, %f68, %f83;
	fma.rn.f32 	%f3, %f84, %f66, %f1;
	rsqrt.approx.f32 	%f85, %f1;
	mul.f32 	%f86, %f85, 0f3F4C422A;
	mul.f32 	%f4, %f77, %f86;
	mul.f32 	%f87, %f3, 0f3F22F983;
	cvt.rni.s32.f32	%r186, %f87;
	cvt.rn.f32.s32	%f88, %r186;
	neg.f32 	%f89, %f88;
	mov.f32 	%f90, 0f3FC90FDA;
	fma.rn.f32 	%f91, %f89, %f90, %f3;
	mov.f32 	%f92, 0f33A22168;
	fma.rn.f32 	%f93, %f89, %f92, %f91;
	mov.f32 	%f94, 0f27C234C5;
	fma.rn.f32 	%f122, %f89, %f94, %f93;
	abs.f32 	%f95, %f3;
	setp.leu.f32	%p4, %f95, 0f47CE4780;
	@%p4 bra 	BB31_15;

	mov.b32 	 %r6, %f3;
	shr.u32 	%r7, %r6, 23;
	shl.b32 	%r85, %r6, 8;
	or.b32  	%r8, %r85, -2147483648;
	add.u64 	%rd19, %SP, 0;
	cvta.to.local.u64 	%rd32, %rd19;
	mov.u32 	%r178, 0;
	mov.u64 	%rd31, __cudart_i2opi_f;
	mov.u32 	%r177, -6;

BB31_7:
	.pragma "nounroll";
	ld.const.u32 	%r88, [%rd31];
	// inline asm
	{
	mad.lo.cc.u32   %r86, %r88, %r8, %r178;
	madc.hi.u32     %r178, %r88, %r8,  0;
	}
	// inline asm
	st.local.u32 	[%rd32], %r86;
	add.s64 	%rd32, %rd32, 4;
	add.s64 	%rd31, %rd31, 4;
	add.s32 	%r177, %r177, 1;
	setp.ne.s32	%p5, %r177, 0;
	@%p5 bra 	BB31_7;

	and.b32  	%r91, %r7, 255;
	add.s32 	%r92, %r91, -128;
	shr.u32 	%r93, %r92, 5;
	and.b32  	%r13, %r6, -2147483648;
	cvta.to.local.u64 	%rd21, %rd19;
	st.local.u32 	[%rd21+24], %r178;
	mov.u32 	%r94, 6;
	sub.s32 	%r95, %r94, %r93;
	mul.wide.s32 	%rd22, %r95, 4;
	add.s64 	%rd6, %rd21, %rd22;
	ld.local.u32 	%r179, [%rd6];
	ld.local.u32 	%r180, [%rd6+-4];
	and.b32  	%r16, %r7, 31;
	setp.eq.s32	%p6, %r16, 0;
	@%p6 bra 	BB31_10;

	mov.u32 	%r96, 32;
	sub.s32 	%r97, %r96, %r16;
	shr.u32 	%r98, %r180, %r97;
	shl.b32 	%r99, %r179, %r16;
	add.s32 	%r179, %r98, %r99;
	ld.local.u32 	%r100, [%rd6+-8];
	shr.u32 	%r101, %r100, %r97;
	shl.b32 	%r102, %r180, %r16;
	add.s32 	%r180, %r101, %r102;

BB31_10:
	shr.u32 	%r103, %r180, 30;
	shl.b32 	%r104, %r179, 2;
	add.s32 	%r181, %r103, %r104;
	shl.b32 	%r22, %r180, 2;
	shr.u32 	%r105, %r181, 31;
	shr.u32 	%r106, %r179, 30;
	add.s32 	%r23, %r105, %r106;
	setp.eq.s32	%p7, %r105, 0;
	mov.u32 	%r182, %r13;
	mov.u32 	%r183, %r22;
	@%p7 bra 	BB31_12;

	not.b32 	%r107, %r181;
	neg.s32 	%r24, %r22;
	setp.eq.s32	%p8, %r22, 0;
	selp.u32	%r108, 1, 0, %p8;
	add.s32 	%r181, %r108, %r107;
	xor.b32  	%r26, %r13, -2147483648;
	mov.u32 	%r182, %r26;
	mov.u32 	%r183, %r24;

BB31_12:
	mov.u32 	%r28, %r182;
	neg.s32 	%r109, %r23;
	setp.eq.s32	%p9, %r13, 0;
	selp.b32	%r186, %r23, %r109, %p9;
	clz.b32 	%r185, %r181;
	setp.eq.s32	%p10, %r185, 0;
	shl.b32 	%r110, %r181, %r185;
	mov.u32 	%r111, 32;
	sub.s32 	%r112, %r111, %r185;
	shr.u32 	%r113, %r183, %r112;
	add.s32 	%r114, %r113, %r110;
	selp.b32	%r32, %r181, %r114, %p10;
	mov.u32 	%r115, -921707870;
	mul.hi.u32 	%r184, %r32, %r115;
	setp.lt.s32	%p11, %r184, 1;
	@%p11 bra 	BB31_14;

	mul.lo.s32 	%r116, %r32, -921707870;
	shr.u32 	%r117, %r116, 31;
	shl.b32 	%r118, %r184, 1;
	add.s32 	%r184, %r117, %r118;
	add.s32 	%r185, %r185, 1;

BB31_14:
	mov.u32 	%r119, 126;
	sub.s32 	%r120, %r119, %r185;
	shl.b32 	%r121, %r120, 23;
	add.s32 	%r122, %r184, 1;
	shr.u32 	%r123, %r122, 7;
	add.s32 	%r124, %r123, 1;
	shr.u32 	%r125, %r124, 1;
	add.s32 	%r126, %r125, %r121;
	or.b32  	%r127, %r126, %r28;
	mov.b32 	 %f122, %r127;

BB31_15:
	and.b32  	%r128, %r186, 3;
	cvt.rn.f32.s32	%f96, %r128;
	add.f32 	%f97, %f122, 0fBF490FDB;
	fma.rn.f32 	%f123, %f96, 0f3FC90FDB, %f97;
	abs.f32 	%f98, %f123;
	setp.neu.f32	%p12, %f98, 0f7F800000;
	@%p12 bra 	BB31_17;

	mov.f32 	%f99, 0f00000000;
	mul.rn.f32 	%f123, %f123, %f99;

BB31_17:
	mul.f32 	%f100, %f123, 0f3F22F983;
	cvt.rni.s32.f32	%r196, %f100;
	cvt.rn.f32.s32	%f101, %r196;
	neg.f32 	%f102, %f101;
	fma.rn.f32 	%f104, %f102, %f90, %f123;
	fma.rn.f32 	%f106, %f102, %f92, %f104;
	fma.rn.f32 	%f124, %f102, %f94, %f106;
	abs.f32 	%f108, %f123;
	setp.leu.f32	%p13, %f108, 0f47CE4780;
	@%p13 bra 	BB31_27;

	mov.b32 	 %r40, %f123;
	shr.u32 	%r41, %r40, 23;
	shl.b32 	%r131, %r40, 8;
	or.b32  	%r42, %r131, -2147483648;
	add.u64 	%rd24, %SP, 0;
	cvta.to.local.u64 	%rd34, %rd24;
	mov.u32 	%r188, 0;
	mov.u64 	%rd33, __cudart_i2opi_f;
	mov.u32 	%r187, -6;

BB31_19:
	.pragma "nounroll";
	ld.const.u32 	%r134, [%rd33];
	// inline asm
	{
	mad.lo.cc.u32   %r132, %r134, %r42, %r188;
	madc.hi.u32     %r188, %r134, %r42,  0;
	}
	// inline asm
	st.local.u32 	[%rd34], %r132;
	add.s64 	%rd34, %rd34, 4;
	add.s64 	%rd33, %rd33, 4;
	add.s32 	%r187, %r187, 1;
	setp.ne.s32	%p14, %r187, 0;
	@%p14 bra 	BB31_19;

	and.b32  	%r137, %r41, 255;
	add.s32 	%r138, %r137, -128;
	shr.u32 	%r139, %r138, 5;
	and.b32  	%r47, %r40, -2147483648;
	cvta.to.local.u64 	%rd26, %rd24;
	st.local.u32 	[%rd26+24], %r188;
	mov.u32 	%r140, 6;
	sub.s32 	%r141, %r140, %r139;
	mul.wide.s32 	%rd27, %r141, 4;
	add.s64 	%rd12, %rd26, %rd27;
	ld.local.u32 	%r189, [%rd12];
	ld.local.u32 	%r190, [%rd12+-4];
	and.b32  	%r50, %r41, 31;
	setp.eq.s32	%p15, %r50, 0;
	@%p15 bra 	BB31_22;

	mov.u32 	%r142, 32;
	sub.s32 	%r143, %r142, %r50;
	shr.u32 	%r144, %r190, %r143;
	shl.b32 	%r145, %r189, %r50;
	add.s32 	%r189, %r144, %r145;
	ld.local.u32 	%r146, [%rd12+-8];
	shr.u32 	%r147, %r146, %r143;
	shl.b32 	%r148, %r190, %r50;
	add.s32 	%r190, %r147, %r148;

BB31_22:
	shr.u32 	%r149, %r190, 30;
	shl.b32 	%r150, %r189, 2;
	add.s32 	%r191, %r149, %r150;
	shl.b32 	%r56, %r190, 2;
	shr.u32 	%r151, %r191, 31;
	shr.u32 	%r152, %r189, 30;
	add.s32 	%r57, %r151, %r152;
	setp.eq.s32	%p16, %r151, 0;
	mov.u32 	%r192, %r47;
	mov.u32 	%r193, %r56;
	@%p16 bra 	BB31_24;

	not.b32 	%r153, %r191;
	neg.s32 	%r58, %r56;
	setp.eq.s32	%p17, %r56, 0;
	selp.u32	%r154, 1, 0, %p17;
	add.s32 	%r191, %r154, %r153;
	xor.b32  	%r60, %r47, -2147483648;
	mov.u32 	%r192, %r60;
	mov.u32 	%r193, %r58;

BB31_24:
	mov.u32 	%r62, %r192;
	neg.s32 	%r155, %r57;
	setp.eq.s32	%p18, %r47, 0;
	selp.b32	%r196, %r57, %r155, %p18;
	clz.b32 	%r195, %r191;
	setp.eq.s32	%p19, %r195, 0;
	shl.b32 	%r156, %r191, %r195;
	mov.u32 	%r157, 32;
	sub.s32 	%r158, %r157, %r195;
	shr.u32 	%r159, %r193, %r158;
	add.s32 	%r160, %r159, %r156;
	selp.b32	%r66, %r191, %r160, %p19;
	mov.u32 	%r161, -921707870;
	mul.hi.u32 	%r194, %r66, %r161;
	setp.lt.s32	%p20, %r194, 1;
	@%p20 bra 	BB31_26;

	mul.lo.s32 	%r162, %r66, -921707870;
	shr.u32 	%r163, %r162, 31;
	shl.b32 	%r164, %r194, 1;
	add.s32 	%r194, %r163, %r164;
	add.s32 	%r195, %r195, 1;

BB31_26:
	mov.u32 	%r165, 126;
	sub.s32 	%r166, %r165, %r195;
	shl.b32 	%r167, %r166, 23;
	add.s32 	%r168, %r194, 1;
	shr.u32 	%r169, %r168, 7;
	add.s32 	%r170, %r169, 1;
	shr.u32 	%r171, %r170, 1;
	add.s32 	%r172, %r171, %r167;
	or.b32  	%r173, %r172, %r62;
	mov.b32 	 %f124, %r173;

BB31_27:
	mul.rn.f32 	%f14, %f124, %f124;
	add.s32 	%r73, %r196, 1;
	and.b32  	%r74, %r73, 1;
	setp.eq.s32	%p21, %r74, 0;
	@%p21 bra 	BB31_29;
	bra.uni 	BB31_28;

BB31_29:
	mov.f32 	%f111, 0f3C08839E;
	mov.f32 	%f112, 0fB94CA1F9;
	fma.rn.f32 	%f125, %f112, %f14, %f111;
	bra.uni 	BB31_30;

BB31_3:
	add.f32 	%f29, %f1, 0fC019E8A9;
	add.f32 	%f30, %f29, 0fB3E971B3;
	mov.f32 	%f31, 0fA9ACA9B3;
	mov.f32 	%f32, 0fA6B3B8E7;
	fma.rn.f32 	%f33, %f32, %f30, %f31;
	mov.f32 	%f34, 0f2C3F0E18;
	fma.rn.f32 	%f35, %f33, %f30, %f34;
	mov.f32 	%f36, 0fACD41781;
	fma.rn.f32 	%f37, %f35, %f30, %f36;
	mov.f32 	%f38, 0fAFE90F38;
	fma.rn.f32 	%f39, %f37, %f30, %f38;
	mov.f32 	%f40, 0f3020305B;
	fma.rn.f32 	%f41, %f39, %f30, %f40;
	mov.f32 	%f42, 0f33797143;
	fma.rn.f32 	%f43, %f41, %f30, %f42;
	mov.f32 	%f44, 0f30F76F85;
	fma.rn.f32 	%f45, %f43, %f30, %f44;
	mov.f32 	%f46, 0fB6B6DFC6;
	fma.rn.f32 	%f47, %f45, %f30, %f46;
	mov.f32 	%f48, 0fB6F665C9;
	fma.rn.f32 	%f49, %f47, %f30, %f48;
	mov.f32 	%f50, 0f399E2DEB;
	fma.rn.f32 	%f51, %f49, %f30, %f50;
	mov.f32 	%f52, 0f3A4AE334;
	fma.rn.f32 	%f53, %f51, %f30, %f52;
	mov.f32 	%f54, 0fBBEEAA1B;
	fma.rn.f32 	%f55, %f53, %f30, %f54;
	mov.f32 	%f56, 0fBCDA7747;
	fma.rn.f32 	%f57, %f55, %f30, %f56;
	mul.f32 	%f58, %f30, %f57;
	add.f32 	%f59, %f1, 0fC0B0A47B;
	add.f32 	%f60, %f59, 0f339A7A37;
	mul.f32 	%f61, %f60, %f58;
	add.f32 	%f62, %f1, 0fC10A75AB;
	add.f32 	%f63, %f62, 0fB4CCCDED;
	mul.f32 	%f128, %f63, %f61;
	bra.uni 	BB31_38;

BB31_28:
	mov.f32 	%f109, 0fBAB6061A;
	mov.f32 	%f110, 0f37CCF5CE;
	fma.rn.f32 	%f125, %f110, %f14, %f109;

BB31_30:
	@%p21 bra 	BB31_32;
	bra.uni 	BB31_31;

BB31_32:
	mov.f32 	%f116, 0fBE2AAAA3;
	fma.rn.f32 	%f117, %f125, %f14, %f116;
	mov.f32 	%f118, 0f00000000;
	fma.rn.f32 	%f126, %f117, %f14, %f118;
	bra.uni 	BB31_33;

BB31_31:
	mov.f32 	%f113, 0f3D2AAAA5;
	fma.rn.f32 	%f114, %f125, %f14, %f113;
	mov.f32 	%f115, 0fBF000000;
	fma.rn.f32 	%f126, %f114, %f14, %f115;

BB31_33:
	fma.rn.f32 	%f127, %f126, %f124, %f124;
	@%p21 bra 	BB31_35;

	fma.rn.f32 	%f127, %f126, %f14, %f76;

BB31_35:
	and.b32  	%r174, %r73, 2;
	setp.eq.s32	%p24, %r174, 0;
	@%p24 bra 	BB31_37;

	mov.f32 	%f120, 0f00000000;
	mov.f32 	%f121, 0fBF800000;
	fma.rn.f32 	%f127, %f127, %f121, %f120;

BB31_37:
	mul.f32 	%f128, %f4, %f127;

BB31_38:
	mul.lo.s32 	%r175, %r176, %r77;
	mul.wide.s32 	%rd29, %r175, 4;
	add.s64 	%rd30, %rd28, %rd29;
	st.global.f32 	[%rd30], %f128;
	add.s32 	%r176, %r3, %r176;
	setp.lt.s32	%p25, %r176, %r76;
	@%p25 bra 	BB31_2;

BB31_39:
	ret;
}

	// .globl	map_j1_float
.visible .entry map_j1_float(
	.param .u32 map_j1_float_param_0,
	.param .u64 map_j1_float_param_1,
	.param .u32 map_j1_float_param_2,
	.param .u64 map_j1_float_param_3,
	.param .u32 map_j1_float_param_4
)
{
	.local .align 4 .b8 	__local_depot32[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<28>;
	.reg .f32 	%f<129>;
	.reg .b32 	%r<202>;
	.reg .b64 	%rd<36>;


	mov.u64 	%rd35, __local_depot32;
	cvta.local.u64 	%SP, %rd35;
	ld.param.u32 	%r74, [map_j1_float_param_0];
	ld.param.u64 	%rd13, [map_j1_float_param_1];
	ld.param.u32 	%r75, [map_j1_float_param_2];
	ld.param.u64 	%rd14, [map_j1_float_param_3];
	ld.param.u32 	%r76, [map_j1_float_param_4];
	mov.u32 	%r77, %ntid.x;
	mov.u32 	%r78, %ctaid.x;
	mov.u32 	%r79, %tid.x;
	mad.lo.s32 	%r181, %r77, %r78, %r79;
	setp.ge.s32	%p1, %r181, %r74;
	@%p1 bra 	BB32_39;

	cvta.to.global.u64 	%rd15, %rd14;
	cvta.to.global.u64 	%rd28, %rd13;

BB32_2:
	mul.lo.s32 	%r80, %r181, %r76;
	mul.wide.s32 	%rd16, %r80, 4;
	add.s64 	%rd17, %rd15, %rd16;
	ld.global.f32 	%f1, [%rd17];
	abs.f32 	%f2, %f1;
	setp.gtu.f32	%p2, %f2, 0f40FB3333;
	@%p2 bra 	BB32_4;
	bra.uni 	BB32_3;

BB32_4:
	abs.f32 	%f61, %f2;
	mov.f32 	%f128, 0f00000000;
	setp.eq.f32	%p3, %f61, 0f7F800000;
	@%p3 bra 	BB32_38;

	// inline asm
	rcp.approx.ftz.f32 %f62,%f2;
	// inline asm
	mul.f32 	%f64, %f62, %f62;
	mov.f32 	%f65, 0f3F3FF7E9;
	mov.f32 	%f66, 0fC082CB37;
	fma.rn.f32 	%f67, %f66, %f64, %f65;
	mov.f32 	%f68, 0fBE458BAE;
	fma.rn.f32 	%f69, %f67, %f64, %f68;
	mov.f32 	%f70, 0f3E3FFF8B;
	fma.rn.f32 	%f71, %f69, %f64, %f70;
	mov.f32 	%f72, 0f3F800000;
	fma.rn.f32 	%f73, %f71, %f64, %f72;
	mov.f32 	%f74, 0f3EB914AD;
	mov.f32 	%f75, 0fBFCA3BA2;
	fma.rn.f32 	%f76, %f75, %f64, %f74;
	mov.f32 	%f77, 0fBE27F2EC;
	fma.rn.f32 	%f78, %f76, %f64, %f77;
	mov.f32 	%f79, 0f3EBFFFFD;
	fma.rn.f32 	%f80, %f78, %f64, %f79;
	fma.rn.f32 	%f4, %f80, %f62, %f2;
	rsqrt.approx.f32 	%f81, %f2;
	mul.f32 	%f82, %f81, 0f3F4C422A;
	mul.f32 	%f5, %f73, %f82;
	mul.f32 	%f83, %f4, 0f3F22F983;
	cvt.rni.s32.f32	%r191, %f83;
	cvt.rn.f32.s32	%f84, %r191;
	neg.f32 	%f85, %f84;
	mov.f32 	%f86, 0f3FC90FDA;
	fma.rn.f32 	%f87, %f85, %f86, %f4;
	mov.f32 	%f88, 0f33A22168;
	fma.rn.f32 	%f89, %f85, %f88, %f87;
	mov.f32 	%f90, 0f27C234C5;
	fma.rn.f32 	%f122, %f85, %f90, %f89;
	abs.f32 	%f91, %f4;
	setp.leu.f32	%p4, %f91, 0f47CE4780;
	@%p4 bra 	BB32_15;

	mov.b32 	 %r4, %f4;
	shr.u32 	%r5, %r4, 23;
	shl.b32 	%r83, %r4, 8;
	or.b32  	%r6, %r83, -2147483648;
	add.u64 	%rd19, %SP, 0;
	cvta.to.local.u64 	%rd32, %rd19;
	mov.u32 	%r183, 0;
	mov.u64 	%rd31, __cudart_i2opi_f;
	mov.u32 	%r182, -6;

BB32_7:
	.pragma "nounroll";
	ld.const.u32 	%r86, [%rd31];
	// inline asm
	{
	mad.lo.cc.u32   %r84, %r86, %r6, %r183;
	madc.hi.u32     %r183, %r86, %r6,  0;
	}
	// inline asm
	st.local.u32 	[%rd32], %r84;
	add.s64 	%rd32, %rd32, 4;
	add.s64 	%rd31, %rd31, 4;
	add.s32 	%r182, %r182, 1;
	setp.ne.s32	%p5, %r182, 0;
	@%p5 bra 	BB32_7;

	and.b32  	%r89, %r5, 255;
	add.s32 	%r90, %r89, -128;
	shr.u32 	%r91, %r90, 5;
	and.b32  	%r11, %r4, -2147483648;
	cvta.to.local.u64 	%rd21, %rd19;
	st.local.u32 	[%rd21+24], %r183;
	mov.u32 	%r92, 6;
	sub.s32 	%r93, %r92, %r91;
	mul.wide.s32 	%rd22, %r93, 4;
	add.s64 	%rd6, %rd21, %rd22;
	ld.local.u32 	%r184, [%rd6];
	ld.local.u32 	%r185, [%rd6+-4];
	and.b32  	%r14, %r5, 31;
	setp.eq.s32	%p6, %r14, 0;
	@%p6 bra 	BB32_10;

	mov.u32 	%r94, 32;
	sub.s32 	%r95, %r94, %r14;
	shr.u32 	%r96, %r185, %r95;
	shl.b32 	%r97, %r184, %r14;
	add.s32 	%r184, %r96, %r97;
	ld.local.u32 	%r98, [%rd6+-8];
	shr.u32 	%r99, %r98, %r95;
	shl.b32 	%r100, %r185, %r14;
	add.s32 	%r185, %r99, %r100;

BB32_10:
	shr.u32 	%r101, %r185, 30;
	shl.b32 	%r102, %r184, 2;
	add.s32 	%r186, %r101, %r102;
	shl.b32 	%r20, %r185, 2;
	shr.u32 	%r103, %r186, 31;
	shr.u32 	%r104, %r184, 30;
	add.s32 	%r21, %r103, %r104;
	setp.eq.s32	%p7, %r103, 0;
	mov.u32 	%r187, %r11;
	mov.u32 	%r188, %r20;
	@%p7 bra 	BB32_12;

	not.b32 	%r105, %r186;
	neg.s32 	%r22, %r20;
	setp.eq.s32	%p8, %r20, 0;
	selp.u32	%r106, 1, 0, %p8;
	add.s32 	%r186, %r106, %r105;
	xor.b32  	%r24, %r11, -2147483648;
	mov.u32 	%r187, %r24;
	mov.u32 	%r188, %r22;

BB32_12:
	mov.u32 	%r26, %r187;
	neg.s32 	%r107, %r21;
	setp.eq.s32	%p9, %r11, 0;
	selp.b32	%r191, %r21, %r107, %p9;
	clz.b32 	%r190, %r186;
	setp.eq.s32	%p10, %r190, 0;
	shl.b32 	%r108, %r186, %r190;
	mov.u32 	%r109, 32;
	sub.s32 	%r110, %r109, %r190;
	shr.u32 	%r111, %r188, %r110;
	add.s32 	%r112, %r111, %r108;
	selp.b32	%r30, %r186, %r112, %p10;
	mov.u32 	%r113, -921707870;
	mul.hi.u32 	%r189, %r30, %r113;
	setp.lt.s32	%p11, %r189, 1;
	@%p11 bra 	BB32_14;

	mul.lo.s32 	%r114, %r30, -921707870;
	shr.u32 	%r115, %r114, 31;
	shl.b32 	%r116, %r189, 1;
	add.s32 	%r189, %r115, %r116;
	add.s32 	%r190, %r190, 1;

BB32_14:
	mov.u32 	%r117, 126;
	sub.s32 	%r118, %r117, %r190;
	shl.b32 	%r119, %r118, 23;
	add.s32 	%r120, %r189, 1;
	shr.u32 	%r121, %r120, 7;
	add.s32 	%r122, %r121, 1;
	shr.u32 	%r123, %r122, 1;
	add.s32 	%r124, %r123, %r119;
	or.b32  	%r125, %r124, %r26;
	mov.b32 	 %f122, %r125;

BB32_15:
	and.b32  	%r126, %r191, 3;
	cvt.rn.f32.s32	%f92, %r126;
	add.f32 	%f93, %f122, 0fC016CBE4;
	fma.rn.f32 	%f123, %f92, 0f3FC90FDB, %f93;
	abs.f32 	%f94, %f123;
	setp.neu.f32	%p12, %f94, 0f7F800000;
	@%p12 bra 	BB32_17;

	mov.f32 	%f95, 0f00000000;
	mul.rn.f32 	%f123, %f123, %f95;

BB32_17:
	mul.f32 	%f96, %f123, 0f3F22F983;
	cvt.rni.s32.f32	%r201, %f96;
	cvt.rn.f32.s32	%f97, %r201;
	neg.f32 	%f98, %f97;
	fma.rn.f32 	%f100, %f98, %f86, %f123;
	fma.rn.f32 	%f102, %f98, %f88, %f100;
	fma.rn.f32 	%f124, %f98, %f90, %f102;
	abs.f32 	%f104, %f123;
	setp.leu.f32	%p13, %f104, 0f47CE4780;
	@%p13 bra 	BB32_27;

	mov.b32 	 %r38, %f123;
	shr.u32 	%r39, %r38, 23;
	shl.b32 	%r129, %r38, 8;
	or.b32  	%r40, %r129, -2147483648;
	add.u64 	%rd24, %SP, 0;
	cvta.to.local.u64 	%rd34, %rd24;
	mov.u32 	%r193, 0;
	mov.u64 	%rd33, __cudart_i2opi_f;
	mov.u32 	%r192, -6;

BB32_19:
	.pragma "nounroll";
	ld.const.u32 	%r132, [%rd33];
	// inline asm
	{
	mad.lo.cc.u32   %r130, %r132, %r40, %r193;
	madc.hi.u32     %r193, %r132, %r40,  0;
	}
	// inline asm
	st.local.u32 	[%rd34], %r130;
	add.s64 	%rd34, %rd34, 4;
	add.s64 	%rd33, %rd33, 4;
	add.s32 	%r192, %r192, 1;
	setp.ne.s32	%p14, %r192, 0;
	@%p14 bra 	BB32_19;

	and.b32  	%r135, %r39, 255;
	add.s32 	%r136, %r135, -128;
	shr.u32 	%r137, %r136, 5;
	and.b32  	%r45, %r38, -2147483648;
	cvta.to.local.u64 	%rd26, %rd24;
	st.local.u32 	[%rd26+24], %r193;
	mov.u32 	%r138, 6;
	sub.s32 	%r139, %r138, %r137;
	mul.wide.s32 	%rd27, %r139, 4;
	add.s64 	%rd12, %rd26, %rd27;
	ld.local.u32 	%r194, [%rd12];
	ld.local.u32 	%r195, [%rd12+-4];
	and.b32  	%r48, %r39, 31;
	setp.eq.s32	%p15, %r48, 0;
	@%p15 bra 	BB32_22;

	mov.u32 	%r140, 32;
	sub.s32 	%r141, %r140, %r48;
	shr.u32 	%r142, %r195, %r141;
	shl.b32 	%r143, %r194, %r48;
	add.s32 	%r194, %r142, %r143;
	ld.local.u32 	%r144, [%rd12+-8];
	shr.u32 	%r145, %r144, %r141;
	shl.b32 	%r146, %r195, %r48;
	add.s32 	%r195, %r145, %r146;

BB32_22:
	shr.u32 	%r147, %r195, 30;
	shl.b32 	%r148, %r194, 2;
	add.s32 	%r196, %r147, %r148;
	shl.b32 	%r54, %r195, 2;
	shr.u32 	%r149, %r196, 31;
	shr.u32 	%r150, %r194, 30;
	add.s32 	%r55, %r149, %r150;
	setp.eq.s32	%p16, %r149, 0;
	mov.u32 	%r197, %r45;
	mov.u32 	%r198, %r54;
	@%p16 bra 	BB32_24;

	not.b32 	%r151, %r196;
	neg.s32 	%r56, %r54;
	setp.eq.s32	%p17, %r54, 0;
	selp.u32	%r152, 1, 0, %p17;
	add.s32 	%r196, %r152, %r151;
	xor.b32  	%r58, %r45, -2147483648;
	mov.u32 	%r197, %r58;
	mov.u32 	%r198, %r56;

BB32_24:
	mov.u32 	%r60, %r197;
	neg.s32 	%r153, %r55;
	setp.eq.s32	%p18, %r45, 0;
	selp.b32	%r201, %r55, %r153, %p18;
	clz.b32 	%r200, %r196;
	setp.eq.s32	%p19, %r200, 0;
	shl.b32 	%r154, %r196, %r200;
	mov.u32 	%r155, 32;
	sub.s32 	%r156, %r155, %r200;
	shr.u32 	%r157, %r198, %r156;
	add.s32 	%r158, %r157, %r154;
	selp.b32	%r64, %r196, %r158, %p19;
	mov.u32 	%r159, -921707870;
	mul.hi.u32 	%r199, %r64, %r159;
	setp.lt.s32	%p20, %r199, 1;
	@%p20 bra 	BB32_26;

	mul.lo.s32 	%r160, %r64, -921707870;
	shr.u32 	%r161, %r160, 31;
	shl.b32 	%r162, %r199, 1;
	add.s32 	%r199, %r161, %r162;
	add.s32 	%r200, %r200, 1;

BB32_26:
	mov.u32 	%r163, 126;
	sub.s32 	%r164, %r163, %r200;
	shl.b32 	%r165, %r164, 23;
	add.s32 	%r166, %r199, 1;
	shr.u32 	%r167, %r166, 7;
	add.s32 	%r168, %r167, 1;
	shr.u32 	%r169, %r168, 1;
	add.s32 	%r170, %r169, %r165;
	or.b32  	%r171, %r170, %r60;
	mov.b32 	 %f124, %r171;

BB32_27:
	mul.rn.f32 	%f15, %f124, %f124;
	add.s32 	%r71, %r201, 1;
	and.b32  	%r72, %r71, 1;
	setp.eq.s32	%p21, %r72, 0;
	@%p21 bra 	BB32_29;
	bra.uni 	BB32_28;

BB32_29:
	mov.f32 	%f107, 0f3C08839E;
	mov.f32 	%f108, 0fB94CA1F9;
	fma.rn.f32 	%f125, %f108, %f15, %f107;
	bra.uni 	BB32_30;

BB32_3:
	add.f32 	%f29, %f2, 0fC0753AAC;
	add.f32 	%f30, %f29, 0f33A5090F;
	mov.f32 	%f31, 0f2B81BF42;
	mov.f32 	%f32, 0f29AF3463;
	fma.rn.f32 	%f33, %f32, %f30, %f31;
	mov.f32 	%f34, 0fADE21EC1;
	fma.rn.f32 	%f35, %f33, %f30, %f34;
	mov.f32 	%f36, 0fAF5DDEFF;
	fma.rn.f32 	%f37, %f35, %f30, %f36;
	mov.f32 	%f38, 0f319B0C9D;
	fma.rn.f32 	%f39, %f37, %f30, %f38;
	mov.f32 	%f40, 0f32E81173;
	fma.rn.f32 	%f41, %f39, %f30, %f40;
	mov.f32 	%f42, 0fB50F8DC8;
	fma.rn.f32 	%f43, %f41, %f30, %f42;
	mov.f32 	%f44, 0fB61E653D;
	fma.rn.f32 	%f45, %f43, %f30, %f44;
	mov.f32 	%f46, 0f382CD9C5;
	fma.rn.f32 	%f47, %f45, %f30, %f46;
	mov.f32 	%f48, 0f38F9EB10;
	fma.rn.f32 	%f49, %f47, %f30, %f48;
	mov.f32 	%f50, 0fBAECEB9C;
	fma.rn.f32 	%f51, %f49, %f30, %f50;
	mov.f32 	%f52, 0fBB276FFD;
	fma.rn.f32 	%f53, %f51, %f30, %f52;
	mov.f32 	%f54, 0f3D073993;
	fma.rn.f32 	%f55, %f53, %f30, %f54;
	add.f32 	%f56, %f2, 0fC0E07FB0;
	add.f32 	%f57, %f56, 0f3444B8DB;
	mul.f32 	%f58, %f57, %f55;
	mul.f32 	%f59, %f30, %f58;
	mul.f32 	%f128, %f2, %f59;
	bra.uni 	BB32_38;

BB32_28:
	mov.f32 	%f105, 0fBAB6061A;
	mov.f32 	%f106, 0f37CCF5CE;
	fma.rn.f32 	%f125, %f106, %f15, %f105;

BB32_30:
	@%p21 bra 	BB32_32;
	bra.uni 	BB32_31;

BB32_32:
	mov.f32 	%f112, 0fBE2AAAA3;
	fma.rn.f32 	%f113, %f125, %f15, %f112;
	mov.f32 	%f114, 0f00000000;
	fma.rn.f32 	%f126, %f113, %f15, %f114;
	bra.uni 	BB32_33;

BB32_31:
	mov.f32 	%f109, 0f3D2AAAA5;
	fma.rn.f32 	%f110, %f125, %f15, %f109;
	mov.f32 	%f111, 0fBF000000;
	fma.rn.f32 	%f126, %f110, %f15, %f111;

BB32_33:
	fma.rn.f32 	%f127, %f126, %f124, %f124;
	@%p21 bra 	BB32_35;

	fma.rn.f32 	%f127, %f126, %f15, %f72;

BB32_35:
	and.b32  	%r172, %r71, 2;
	setp.eq.s32	%p24, %r172, 0;
	@%p24 bra 	BB32_37;

	mov.f32 	%f116, 0f00000000;
	mov.f32 	%f117, 0fBF800000;
	fma.rn.f32 	%f127, %f127, %f117, %f116;

BB32_37:
	mul.f32 	%f128, %f5, %f127;

BB32_38:
	neg.f32 	%f118, %f128;
	setp.lt.f32	%p25, %f1, 0f00000000;
	selp.f32	%f119, %f118, %f128, %p25;
	mov.b32 	 %r173, %f1;
	and.b32  	%r174, %r173, -2147483648;
	mov.b32 	 %r175, %f119;
	and.b32  	%r176, %r175, 2147483647;
	or.b32  	%r177, %r176, %r174;
	mov.b32 	 %f120, %r177;
	setp.lt.f32	%p26, %f2, 0f0DA24260;
	selp.f32	%f121, %f120, %f119, %p26;
	mul.lo.s32 	%r178, %r181, %r75;
	mul.wide.s32 	%rd29, %r178, 4;
	add.s64 	%rd30, %rd28, %rd29;
	st.global.f32 	[%rd30], %f121;
	mov.u32 	%r180, %nctaid.x;
	mad.lo.s32 	%r181, %r180, %r77, %r181;
	setp.lt.s32	%p27, %r181, %r74;
	@%p27 bra 	BB32_2;

BB32_39:
	ret;
}

	// .globl	map_lgamma_float
.visible .entry map_lgamma_float(
	.param .u32 map_lgamma_float_param_0,
	.param .u64 map_lgamma_float_param_1,
	.param .u32 map_lgamma_float_param_2,
	.param .u64 map_lgamma_float_param_3,
	.param .u32 map_lgamma_float_param_4
)
{
	.reg .pred 	%p<27>;
	.reg .f32 	%f<283>;
	.reg .b32 	%r<34>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r8, [map_lgamma_float_param_0];
	ld.param.u64 	%rd1, [map_lgamma_float_param_1];
	ld.param.u32 	%r9, [map_lgamma_float_param_2];
	ld.param.u64 	%rd2, [map_lgamma_float_param_3];
	ld.param.u32 	%r10, [map_lgamma_float_param_4];
	mov.u32 	%r11, %tid.x;
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r12, %ctaid.x;
	mad.lo.s32 	%r33, %r1, %r12, %r11;
	setp.ge.s32	%p1, %r33, %r8;
	@%p1 bra 	BB33_35;

	mov.u32 	%r13, %nctaid.x;
	mul.lo.s32 	%r3, %r13, %r1;
	cvta.to.global.u64 	%rd3, %rd2;
	cvta.to.global.u64 	%rd6, %rd1;

BB33_2:
	mul.lo.s32 	%r14, %r33, %r10;
	mul.wide.s32 	%rd4, %r14, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	abs.f32 	%f2, %f1;
	setp.ltu.f32	%p2, %f2, 0f40400000;
	@%p2 bra 	BB33_8;
	bra.uni 	BB33_3;

BB33_8:
	setp.ltu.f32	%p8, %f2, 0f3FC00000;
	@%p8 bra 	BB33_10;
	bra.uni 	BB33_9;

BB33_10:
	setp.ltu.f32	%p9, %f2, 0f3F333333;
	@%p9 bra 	BB33_12;
	bra.uni 	BB33_11;

BB33_12:
	mov.f32 	%f147, 0fBBB34878;
	mov.f32 	%f148, 0f3B6B1C86;
	fma.rn.f32 	%f149, %f148, %f2, %f147;
	mov.f32 	%f150, 0fBD36CAEF;
	fma.rn.f32 	%f151, %f149, %f2, %f150;
	mov.f32 	%f152, 0f3E2B5555;
	fma.rn.f32 	%f153, %f151, %f2, %f152;
	mov.f32 	%f154, 0fBD2C96C7;
	fma.rn.f32 	%f155, %f153, %f2, %f154;
	mov.f32 	%f156, 0fBF27E6EB;
	fma.rn.f32 	%f157, %f155, %f2, %f156;
	mov.f32 	%f158, 0f3F13C463;
	fma.rn.f32 	%f159, %f157, %f2, %f158;
	mul.f32 	%f160, %f2, %f159;
	fma.rn.f32 	%f161, %f160, %f2, %f2;
	setp.lt.f32	%p10, %f161, 0f00800000;
	mul.f32 	%f162, %f161, 0f4B000000;
	selp.f32	%f12, %f162, %f161, %p10;
	selp.f32	%f163, 0fC1B80000, 0f00000000, %p10;
	mov.b32 	 %r19, %f12;
	add.s32 	%r20, %r19, -1059760811;
	and.b32  	%r21, %r20, -8388608;
	sub.s32 	%r22, %r19, %r21;
	mov.b32 	 %f164, %r22;
	cvt.rn.f32.s32	%f165, %r21;
	mov.f32 	%f166, 0f34000000;
	fma.rn.f32 	%f167, %f165, %f166, %f163;
	add.f32 	%f168, %f164, 0fBF800000;
	mov.f32 	%f169, 0f3E1039F6;
	mov.f32 	%f170, 0fBE055027;
	fma.rn.f32 	%f171, %f170, %f168, %f169;
	mov.f32 	%f172, 0fBDF8CDCC;
	fma.rn.f32 	%f173, %f171, %f168, %f172;
	mov.f32 	%f174, 0f3E0F2955;
	fma.rn.f32 	%f175, %f173, %f168, %f174;
	mov.f32 	%f176, 0fBE2AD8B9;
	fma.rn.f32 	%f177, %f175, %f168, %f176;
	mov.f32 	%f178, 0f3E4CED0B;
	fma.rn.f32 	%f179, %f177, %f168, %f178;
	mov.f32 	%f180, 0fBE7FFF22;
	fma.rn.f32 	%f181, %f179, %f168, %f180;
	mov.f32 	%f182, 0f3EAAAA78;
	fma.rn.f32 	%f183, %f181, %f168, %f182;
	mov.f32 	%f184, 0fBF000000;
	fma.rn.f32 	%f185, %f183, %f168, %f184;
	mul.f32 	%f186, %f168, %f185;
	fma.rn.f32 	%f187, %f186, %f168, %f168;
	mov.f32 	%f188, 0f3F317218;
	fma.rn.f32 	%f274, %f167, %f188, %f187;
	setp.lt.u32	%p11, %r19, 2139095040;
	@%p11 bra 	BB33_14;

	mov.f32 	%f189, 0f7F800000;
	fma.rn.f32 	%f274, %f12, %f189, %f189;

BB33_14:
	neg.f32 	%f190, %f274;
	setp.eq.f32	%p12, %f12, 0f00000000;
	selp.f32	%f282, 0f7F800000, %f190, %p12;
	bra.uni 	BB33_15;

BB33_3:
	setp.ltu.f32	%p3, %f2, 0f40F9999A;
	@%p3 bra 	BB33_7;
	bra.uni 	BB33_4;

BB33_7:
	add.f32 	%f88, %f2, 0fC0400000;
	mov.f32 	%f89, 0fC640F6F8;
	mov.f32 	%f90, 0fC43B38FB;
	fma.rn.f32 	%f91, %f90, %f88, %f89;
	mov.f32 	%f92, 0fC7206560;
	fma.rn.f32 	%f93, %f91, %f88, %f92;
	mov.f32 	%f94, 0fC73CB6AA;
	fma.rn.f32 	%f95, %f93, %f88, %f94;
	mov.f32 	%f96, 0fC80BAE5A;
	fma.rn.f32 	%f97, %f95, %f88, %f96;
	add.f32 	%f98, %f88, 0fC381A020;
	mov.f32 	%f99, 0fC62864B8;
	fma.rn.f32 	%f100, %f98, %f88, %f99;
	mov.f32 	%f101, 0fC7B50686;
	fma.rn.f32 	%f102, %f100, %f88, %f101;
	mov.f32 	%f103, 0fC8498465;
	fma.rn.f32 	%f87, %f102, %f88, %f103;
	// inline asm
	rcp.approx.ftz.f32 %f86,%f87;
	// inline asm
	fma.rn.f32 	%f282, %f97, %f86, %f88;
	bra.uni 	BB33_15;

BB33_9:
	add.f32 	%f104, %f2, 0fC0000000;
	mov.f32 	%f105, 0fB967A002;
	mov.f32 	%f106, 0f385007FA;
	fma.rn.f32 	%f107, %f106, %f104, %f105;
	mov.f32 	%f108, 0f3A0DE6FC;
	fma.rn.f32 	%f109, %f107, %f104, %f108;
	mov.f32 	%f110, 0fBA9DE0E2;
	fma.rn.f32 	%f111, %f109, %f104, %f110;
	mov.f32 	%f112, 0f3B3D05B7;
	fma.rn.f32 	%f113, %f111, %f104, %f112;
	mov.f32 	%f114, 0fBBF1EB10;
	fma.rn.f32 	%f115, %f113, %f104, %f114;
	mov.f32 	%f116, 0f3CA89A28;
	fma.rn.f32 	%f117, %f115, %f104, %f116;
	mov.f32 	%f118, 0fBD89F01A;
	fma.rn.f32 	%f119, %f117, %f104, %f118;
	mov.f32 	%f120, 0f3EA51A66;
	fma.rn.f32 	%f121, %f119, %f104, %f120;
	mov.f32 	%f122, 0f3ED87730;
	fma.rn.f32 	%f123, %f121, %f104, %f122;
	mul.f32 	%f282, %f104, %f123;
	bra.uni 	BB33_15;

BB33_4:
	// inline asm
	rcp.approx.ftz.f32 %f42,%f2;
	// inline asm
	mul.f32 	%f44, %f42, %f42;
	mov.f32 	%f45, 0fBB360953;
	mov.f32 	%f46, 0f3A4BE755;
	fma.rn.f32 	%f47, %f46, %f44, %f45;
	mov.f32 	%f48, 0f3DAAAAA3;
	fma.rn.f32 	%f49, %f47, %f44, %f48;
	mov.f32 	%f50, 0f3F6B3F8E;
	fma.rn.f32 	%f3, %f49, %f42, %f50;
	mul.f32 	%f51, %f2, 0f4B000000;
	setp.lt.f32	%p4, %f2, 0f00800000;
	selp.f32	%f4, %f51, %f2, %p4;
	selp.f32	%f52, 0fC1B80000, 0f00000000, %p4;
	mov.b32 	 %r15, %f4;
	add.s32 	%r16, %r15, -1059760811;
	and.b32  	%r17, %r16, -8388608;
	sub.s32 	%r18, %r15, %r17;
	mov.b32 	 %f53, %r18;
	cvt.rn.f32.s32	%f54, %r17;
	mov.f32 	%f55, 0f34000000;
	fma.rn.f32 	%f56, %f54, %f55, %f52;
	add.f32 	%f57, %f53, 0fBF800000;
	mov.f32 	%f58, 0f3E1039F6;
	mov.f32 	%f59, 0fBE055027;
	fma.rn.f32 	%f60, %f59, %f57, %f58;
	mov.f32 	%f61, 0fBDF8CDCC;
	fma.rn.f32 	%f62, %f60, %f57, %f61;
	mov.f32 	%f63, 0f3E0F2955;
	fma.rn.f32 	%f64, %f62, %f57, %f63;
	mov.f32 	%f65, 0fBE2AD8B9;
	fma.rn.f32 	%f66, %f64, %f57, %f65;
	mov.f32 	%f67, 0f3E4CED0B;
	fma.rn.f32 	%f68, %f66, %f57, %f67;
	mov.f32 	%f69, 0fBE7FFF22;
	fma.rn.f32 	%f70, %f68, %f57, %f69;
	mov.f32 	%f71, 0f3EAAAA78;
	fma.rn.f32 	%f72, %f70, %f57, %f71;
	mov.f32 	%f73, 0fBF000000;
	fma.rn.f32 	%f74, %f72, %f57, %f73;
	mul.f32 	%f75, %f57, %f74;
	fma.rn.f32 	%f76, %f75, %f57, %f57;
	mov.f32 	%f77, 0f3F317218;
	fma.rn.f32 	%f273, %f56, %f77, %f76;
	setp.lt.u32	%p5, %r15, 2139095040;
	@%p5 bra 	BB33_6;

	mov.f32 	%f78, 0f7F800000;
	fma.rn.f32 	%f273, %f4, %f78, %f78;

BB33_6:
	mul.f32 	%f79, %f273, 0f3F000000;
	setp.eq.f32	%p6, %f4, 0f00000000;
	selp.f32	%f80, 0fFF800000, %f79, %p6;
	add.f32 	%f81, %f2, 0fBF000000;
	mul.rn.f32 	%f82, %f80, %f81;
	sub.f32 	%f83, %f82, %f2;
	add.rn.f32 	%f84, %f82, %f3;
	add.f32 	%f85, %f83, %f84;
	setp.eq.f32	%p7, %f2, 0f7F800000;
	selp.f32	%f282, %f2, %f85, %p7;
	bra.uni 	BB33_15;

BB33_11:
	mov.f32 	%f124, 0f3F800000;
	sub.f32 	%f125, %f124, %f2;
	mov.f32 	%f126, 0f3DD47577;
	mov.f32 	%f127, 0f3D3BEF76;
	fma.rn.f32 	%f128, %f127, %f125, %f126;
	mov.f32 	%f129, 0f3DFB8079;
	fma.rn.f32 	%f130, %f128, %f125, %f129;
	mov.f32 	%f131, 0f3E0295B5;
	fma.rn.f32 	%f132, %f130, %f125, %f131;
	mov.f32 	%f133, 0f3E12A765;
	fma.rn.f32 	%f134, %f132, %f125, %f133;
	mov.f32 	%f135, 0f3E2D6867;
	fma.rn.f32 	%f136, %f134, %f125, %f135;
	mov.f32 	%f137, 0f3E5462BF;
	fma.rn.f32 	%f138, %f136, %f125, %f137;
	mov.f32 	%f139, 0f3E8A8A72;
	fma.rn.f32 	%f140, %f138, %f125, %f139;
	mov.f32 	%f141, 0f3ECD26A4;
	fma.rn.f32 	%f142, %f140, %f125, %f141;
	mov.f32 	%f143, 0f3F528D32;
	fma.rn.f32 	%f144, %f142, %f125, %f143;
	mov.f32 	%f145, 0f3F13C468;
	fma.rn.f32 	%f146, %f144, %f125, %f145;
	mul.f32 	%f282, %f125, %f146;

BB33_15:
	mov.f32 	%f17, %f282;
	setp.ge.f32	%p13, %f1, 0f00000000;
	mov.f32 	%f281, %f17;
	@%p13 bra 	BB33_34;

	cvt.rmi.f32.f32	%f192, %f2;
	setp.eq.f32	%p14, %f2, %f192;
	mov.f32 	%f191, 0f7F800000;
	mov.f32 	%f281, %f191;
	@%p14 bra 	BB33_34;

	setp.lt.f32	%p15, %f2, 0f1FEC1E4A;
	@%p15 bra 	BB33_31;
	bra.uni 	BB33_18;

BB33_31:
	setp.lt.f32	%p23, %f2, 0f00800000;
	mul.f32 	%f244, %f2, 0f4B000000;
	selp.f32	%f36, %f244, %f2, %p23;
	selp.f32	%f245, 0fC1B80000, 0f00000000, %p23;
	mov.b32 	 %r28, %f36;
	add.s32 	%r29, %r28, -1059760811;
	and.b32  	%r30, %r29, -8388608;
	sub.s32 	%r31, %r28, %r30;
	mov.b32 	 %f246, %r31;
	cvt.rn.f32.s32	%f247, %r30;
	mov.f32 	%f248, 0f34000000;
	fma.rn.f32 	%f249, %f247, %f248, %f245;
	add.f32 	%f250, %f246, 0fBF800000;
	mov.f32 	%f251, 0f3E1039F6;
	mov.f32 	%f252, 0fBE055027;
	fma.rn.f32 	%f253, %f252, %f250, %f251;
	mov.f32 	%f254, 0fBDF8CDCC;
	fma.rn.f32 	%f255, %f253, %f250, %f254;
	mov.f32 	%f256, 0f3E0F2955;
	fma.rn.f32 	%f257, %f255, %f250, %f256;
	mov.f32 	%f258, 0fBE2AD8B9;
	fma.rn.f32 	%f259, %f257, %f250, %f258;
	mov.f32 	%f260, 0f3E4CED0B;
	fma.rn.f32 	%f261, %f259, %f250, %f260;
	mov.f32 	%f262, 0fBE7FFF22;
	fma.rn.f32 	%f263, %f261, %f250, %f262;
	mov.f32 	%f264, 0f3EAAAA78;
	fma.rn.f32 	%f265, %f263, %f250, %f264;
	mov.f32 	%f266, 0fBF000000;
	fma.rn.f32 	%f267, %f265, %f250, %f266;
	mul.f32 	%f268, %f250, %f267;
	fma.rn.f32 	%f269, %f268, %f250, %f250;
	mov.f32 	%f270, 0f3F317218;
	fma.rn.f32 	%f279, %f249, %f270, %f269;
	setp.lt.u32	%p24, %r28, 2139095040;
	@%p24 bra 	BB33_33;

	mov.f32 	%f271, 0f7F800000;
	fma.rn.f32 	%f279, %f36, %f271, %f271;

BB33_33:
	neg.f32 	%f272, %f279;
	setp.eq.f32	%p25, %f36, 0f00000000;
	selp.f32	%f281, 0f7F800000, %f272, %p25;
	bra.uni 	BB33_34;

BB33_18:
	add.f32 	%f193, %f2, %f2;
	cvt.rni.f32.f32	%f194, %f193;
	cvt.rzi.s32.f32	%r5, %f194;
	neg.f32 	%f195, %f194;
	mov.f32 	%f196, 0f3F000000;
	fma.rn.f32 	%f197, %f195, %f196, %f2;
	mul.f32 	%f18, %f197, 0f40490FDB;
	mul.rn.f32 	%f19, %f18, %f18;
	and.b32  	%r6, %r5, 1;
	setp.eq.s32	%p16, %r6, 0;
	@%p16 bra 	BB33_20;
	bra.uni 	BB33_19;

BB33_20:
	mov.f32 	%f200, 0f3C08839E;
	mov.f32 	%f201, 0fB94CA1F9;
	fma.rn.f32 	%f275, %f201, %f19, %f200;
	bra.uni 	BB33_21;

BB33_19:
	mov.f32 	%f198, 0fBAB6061A;
	mov.f32 	%f199, 0f37CCF5CE;
	fma.rn.f32 	%f275, %f199, %f19, %f198;

BB33_21:
	@%p16 bra 	BB33_23;
	bra.uni 	BB33_22;

BB33_23:
	mov.f32 	%f205, 0fBE2AAAA3;
	fma.rn.f32 	%f206, %f275, %f19, %f205;
	mov.f32 	%f207, 0f00000000;
	fma.rn.f32 	%f276, %f206, %f19, %f207;
	bra.uni 	BB33_24;

BB33_22:
	mov.f32 	%f202, 0f3D2AAAA5;
	fma.rn.f32 	%f203, %f275, %f19, %f202;
	mov.f32 	%f204, 0fBF000000;
	fma.rn.f32 	%f276, %f203, %f19, %f204;

BB33_24:
	fma.rn.f32 	%f277, %f276, %f18, %f18;
	@%p16 bra 	BB33_26;

	mov.f32 	%f208, 0f3F800000;
	fma.rn.f32 	%f277, %f276, %f19, %f208;

BB33_26:
	and.b32  	%r23, %r5, 2;
	setp.eq.s32	%p19, %r23, 0;
	@%p19 bra 	BB33_28;

	mov.f32 	%f209, 0f00000000;
	mov.f32 	%f210, 0fBF800000;
	fma.rn.f32 	%f277, %f277, %f210, %f209;

BB33_28:
	abs.f32 	%f211, %f277;
	mul.f32 	%f212, %f2, %f211;
	setp.lt.f32	%p20, %f212, 0f00800000;
	mul.f32 	%f213, %f212, 0f4B000000;
	selp.f32	%f31, %f213, %f212, %p20;
	selp.f32	%f214, 0fC1B80000, 0f00000000, %p20;
	mov.b32 	 %r24, %f31;
	add.s32 	%r25, %r24, -1059760811;
	and.b32  	%r26, %r25, -8388608;
	sub.s32 	%r27, %r24, %r26;
	mov.b32 	 %f215, %r27;
	cvt.rn.f32.s32	%f216, %r26;
	mov.f32 	%f217, 0f34000000;
	fma.rn.f32 	%f218, %f216, %f217, %f214;
	add.f32 	%f219, %f215, 0fBF800000;
	mov.f32 	%f220, 0f3E1039F6;
	mov.f32 	%f221, 0fBE055027;
	fma.rn.f32 	%f222, %f221, %f219, %f220;
	mov.f32 	%f223, 0fBDF8CDCC;
	fma.rn.f32 	%f224, %f222, %f219, %f223;
	mov.f32 	%f225, 0f3E0F2955;
	fma.rn.f32 	%f226, %f224, %f219, %f225;
	mov.f32 	%f227, 0fBE2AD8B9;
	fma.rn.f32 	%f228, %f226, %f219, %f227;
	mov.f32 	%f229, 0f3E4CED0B;
	fma.rn.f32 	%f230, %f228, %f219, %f229;
	mov.f32 	%f231, 0fBE7FFF22;
	fma.rn.f32 	%f232, %f230, %f219, %f231;
	mov.f32 	%f233, 0f3EAAAA78;
	fma.rn.f32 	%f234, %f232, %f219, %f233;
	mov.f32 	%f235, 0fBF000000;
	fma.rn.f32 	%f236, %f234, %f219, %f235;
	mul.f32 	%f237, %f236, %f219;
	fma.rn.f32 	%f238, %f237, %f219, %f219;
	mov.f32 	%f239, 0f3F317218;
	fma.rn.f32 	%f278, %f218, %f239, %f238;
	setp.lt.u32	%p21, %r24, 2139095040;
	@%p21 bra 	BB33_30;

	mov.f32 	%f240, 0f7F800000;
	fma.rn.f32 	%f278, %f31, %f240, %f240;

BB33_30:
	mov.f32 	%f241, 0f3F928682;
	sub.f32 	%f242, %f241, %f278;
	setp.eq.f32	%p22, %f31, 0f00000000;
	selp.f32	%f243, 0f7F800000, %f242, %p22;
	sub.f32 	%f281, %f243, %f17;

BB33_34:
	mul.lo.s32 	%r32, %r33, %r9;
	mul.wide.s32 	%rd7, %r32, 4;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.f32 	[%rd8], %f281;
	add.s32 	%r33, %r3, %r33;
	setp.lt.s32	%p26, %r33, %r8;
	@%p26 bra 	BB33_2;

BB33_35:
	ret;
}

	// .globl	map_log10_float
.visible .entry map_log10_float(
	.param .u32 map_log10_float_param_0,
	.param .u64 map_log10_float_param_1,
	.param .u32 map_log10_float_param_2,
	.param .u64 map_log10_float_param_3,
	.param .u32 map_log10_float_param_4
)
{
	.reg .pred 	%p<6>;
	.reg .f32 	%f<37>;
	.reg .b32 	%r<19>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r6, [map_log10_float_param_0];
	ld.param.u64 	%rd3, [map_log10_float_param_1];
	ld.param.u32 	%r7, [map_log10_float_param_2];
	ld.param.u64 	%rd4, [map_log10_float_param_3];
	ld.param.u32 	%r8, [map_log10_float_param_4];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r18, %r1, %r9, %r10;
	setp.ge.s32	%p1, %r18, %r6;
	@%p1 bra 	BB34_5;

	cvta.to.global.u64 	%rd1, %rd3;
	cvta.to.global.u64 	%rd2, %rd4;
	mov.u32 	%r11, %nctaid.x;
	mul.lo.s32 	%r3, %r11, %r1;

BB34_2:
	mul.lo.s32 	%r12, %r18, %r8;
	mul.wide.s32 	%rd5, %r12, 4;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.f32 	%f5, [%rd6];
	setp.lt.f32	%p2, %f5, 0f00800000;
	mul.f32 	%f6, %f5, 0f4B000000;
	selp.f32	%f1, %f6, %f5, %p2;
	selp.f32	%f7, 0fC1B80000, 0f00000000, %p2;
	mov.b32 	 %r13, %f1;
	add.s32 	%r14, %r13, -1059760811;
	and.b32  	%r15, %r14, -8388608;
	sub.s32 	%r16, %r13, %r15;
	mov.b32 	 %f8, %r16;
	cvt.rn.f32.s32	%f9, %r15;
	mov.f32 	%f10, 0f34000000;
	fma.rn.f32 	%f11, %f9, %f10, %f7;
	add.f32 	%f12, %f8, 0fBF800000;
	mov.f32 	%f13, 0f3E1039F6;
	mov.f32 	%f14, 0fBE055027;
	fma.rn.f32 	%f15, %f14, %f12, %f13;
	mov.f32 	%f16, 0fBDF8CDCC;
	fma.rn.f32 	%f17, %f15, %f12, %f16;
	mov.f32 	%f18, 0f3E0F2955;
	fma.rn.f32 	%f19, %f17, %f12, %f18;
	mov.f32 	%f20, 0fBE2AD8B9;
	fma.rn.f32 	%f21, %f19, %f12, %f20;
	mov.f32 	%f22, 0f3E4CED0B;
	fma.rn.f32 	%f23, %f21, %f12, %f22;
	mov.f32 	%f24, 0fBE7FFF22;
	fma.rn.f32 	%f25, %f23, %f12, %f24;
	mov.f32 	%f26, 0f3EAAAA78;
	fma.rn.f32 	%f27, %f25, %f12, %f26;
	mov.f32 	%f28, 0fBF000000;
	fma.rn.f32 	%f29, %f27, %f12, %f28;
	mul.f32 	%f30, %f12, %f29;
	fma.rn.f32 	%f31, %f30, %f12, %f12;
	mov.f32 	%f32, 0f3F317218;
	fma.rn.f32 	%f36, %f11, %f32, %f31;
	setp.lt.u32	%p3, %r13, 2139095040;
	@%p3 bra 	BB34_4;

	mov.f32 	%f33, 0f7F800000;
	fma.rn.f32 	%f36, %f1, %f33, %f33;

BB34_4:
	mul.f32 	%f34, %f36, 0f3EDE5BD9;
	setp.eq.f32	%p4, %f1, 0f00000000;
	selp.f32	%f35, 0fFF800000, %f34, %p4;
	mul.lo.s32 	%r17, %r18, %r7;
	mul.wide.s32 	%rd7, %r17, 4;
	add.s64 	%rd8, %rd1, %rd7;
	st.global.f32 	[%rd8], %f35;
	add.s32 	%r18, %r3, %r18;
	setp.lt.s32	%p5, %r18, %r6;
	@%p5 bra 	BB34_2;

BB34_5:
	ret;
}

	// .globl	map_log1p_float
.visible .entry map_log1p_float(
	.param .u32 map_log1p_float_param_0,
	.param .u64 map_log1p_float_param_1,
	.param .u32 map_log1p_float_param_2,
	.param .u64 map_log1p_float_param_3,
	.param .u32 map_log1p_float_param_4
)
{
	.reg .pred 	%p<6>;
	.reg .f32 	%f<39>;
	.reg .b32 	%r<22>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r7, [map_log1p_float_param_0];
	ld.param.u64 	%rd3, [map_log1p_float_param_1];
	ld.param.u32 	%r8, [map_log1p_float_param_2];
	ld.param.u64 	%rd4, [map_log1p_float_param_3];
	ld.param.u32 	%r9, [map_log1p_float_param_4];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r10, %ctaid.x;
	mov.u32 	%r11, %tid.x;
	mad.lo.s32 	%r21, %r1, %r10, %r11;
	setp.ge.s32	%p1, %r21, %r7;
	@%p1 bra 	BB35_7;

	cvta.to.global.u64 	%rd1, %rd3;
	cvta.to.global.u64 	%rd2, %rd4;
	mov.u32 	%r12, %nctaid.x;
	mul.lo.s32 	%r3, %r12, %r1;

BB35_2:
	mul.lo.s32 	%r13, %r21, %r9;
	mul.wide.s32 	%rd5, %r13, 4;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.f32 	%f1, [%rd6];
	mov.f32 	%f7, 0f3F800000;
	add.rz.f32 	%f8, %f1, %f7;
	mov.b32 	 %r14, %f8;
	add.s32 	%r15, %r14, -1061158912;
	and.b32  	%r16, %r15, -8388608;
	mov.b32 	 %r5, %f1;
	sub.s32 	%r17, %r5, %r16;
	mov.b32 	 %f9, %r17;
	mov.u32 	%r18, 1082130432;
	sub.s32 	%r19, %r18, %r16;
	mov.b32 	 %f10, %r19;
	mov.f32 	%f11, 0fBF800000;
	mov.f32 	%f12, 0f3E800000;
	fma.rn.f32 	%f13, %f12, %f10, %f11;
	add.f32 	%f14, %f13, %f9;
	cvt.rn.f32.s32	%f15, %r16;
	mul.f32 	%f16, %f15, 0f34000000;
	mov.f32 	%f17, 0f3DD80012;
	mov.f32 	%f18, 0fBD39BF78;
	fma.rn.f32 	%f19, %f18, %f14, %f17;
	mov.f32 	%f20, 0fBE0778E0;
	fma.rn.f32 	%f21, %f19, %f14, %f20;
	mov.f32 	%f22, 0f3E146475;
	fma.rn.f32 	%f23, %f21, %f14, %f22;
	mov.f32 	%f24, 0fBE2A68DD;
	fma.rn.f32 	%f25, %f23, %f14, %f24;
	mov.f32 	%f26, 0f3E4CAF9E;
	fma.rn.f32 	%f27, %f25, %f14, %f26;
	mov.f32 	%f28, 0fBE800042;
	fma.rn.f32 	%f29, %f27, %f14, %f28;
	mov.f32 	%f30, 0f3EAAAAE6;
	fma.rn.f32 	%f31, %f29, %f14, %f30;
	mov.f32 	%f32, 0fBF000000;
	fma.rn.f32 	%f33, %f31, %f14, %f32;
	mul.f32 	%f34, %f14, %f33;
	fma.rn.f32 	%f35, %f34, %f14, %f14;
	mov.f32 	%f36, 0f3F317218;
	fma.rn.f32 	%f38, %f16, %f36, %f35;
	setp.lt.u32	%p2, %r5, 2139095040;
	@%p2 bra 	BB35_6;

	setp.lt.s32	%p3, %r5, -1082130431;
	@%p3 bra 	BB35_5;

	mov.f32 	%f37, 0f7F800000;
	fma.rn.f32 	%f38, %f1, %f37, %f37;

BB35_5:
	setp.eq.f32	%p4, %f1, 0f00000000;
	selp.f32	%f38, 0f80000000, %f38, %p4;

BB35_6:
	mul.lo.s32 	%r20, %r21, %r8;
	mul.wide.s32 	%rd7, %r20, 4;
	add.s64 	%rd8, %rd1, %rd7;
	st.global.f32 	[%rd8], %f38;
	add.s32 	%r21, %r3, %r21;
	setp.lt.s32	%p5, %r21, %r7;
	@%p5 bra 	BB35_2;

BB35_7:
	ret;
}

	// .globl	map_log2_float
.visible .entry map_log2_float(
	.param .u32 map_log2_float_param_0,
	.param .u64 map_log2_float_param_1,
	.param .u32 map_log2_float_param_2,
	.param .u64 map_log2_float_param_3,
	.param .u32 map_log2_float_param_4
)
{
	.reg .pred 	%p<6>;
	.reg .f32 	%f<39>;
	.reg .b32 	%r<19>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r6, [map_log2_float_param_0];
	ld.param.u64 	%rd3, [map_log2_float_param_1];
	ld.param.u32 	%r7, [map_log2_float_param_2];
	ld.param.u64 	%rd4, [map_log2_float_param_3];
	ld.param.u32 	%r8, [map_log2_float_param_4];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r18, %r1, %r9, %r10;
	setp.ge.s32	%p1, %r18, %r6;
	@%p1 bra 	BB36_5;

	cvta.to.global.u64 	%rd1, %rd3;
	cvta.to.global.u64 	%rd2, %rd4;
	mov.u32 	%r11, %nctaid.x;
	mul.lo.s32 	%r3, %r11, %r1;

BB36_2:
	mul.lo.s32 	%r12, %r18, %r8;
	mul.wide.s32 	%rd5, %r12, 4;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.f32 	%f5, [%rd6];
	setp.lt.f32	%p2, %f5, 0f00800000;
	mul.f32 	%f6, %f5, 0f4B000000;
	selp.f32	%f1, %f6, %f5, %p2;
	selp.f32	%f7, 0fC1B80000, 0f00000000, %p2;
	mov.b32 	 %r13, %f1;
	add.s32 	%r14, %r13, -1060439283;
	and.b32  	%r15, %r14, -8388608;
	sub.s32 	%r16, %r13, %r15;
	mov.b32 	 %f8, %r16;
	cvt.rn.f32.s32	%f9, %r15;
	mov.f32 	%f10, 0f34000000;
	fma.rn.f32 	%f11, %f9, %f10, %f7;
	add.f32 	%f12, %f8, 0fBF800000;
	mov.f32 	%f13, 0fBE2C7F30;
	mov.f32 	%f14, 0f3DC6B27F;
	fma.rn.f32 	%f15, %f14, %f12, %f13;
	mov.f32 	%f16, 0f3E2FCF2A;
	fma.rn.f32 	%f17, %f15, %f12, %f16;
	mov.f32 	%f18, 0fBE374E43;
	fma.rn.f32 	%f19, %f17, %f12, %f18;
	mov.f32 	%f20, 0f3E520BF4;
	fma.rn.f32 	%f21, %f19, %f12, %f20;
	mov.f32 	%f22, 0fBE763C8B;
	fma.rn.f32 	%f23, %f21, %f12, %f22;
	mov.f32 	%f24, 0f3E93BF99;
	fma.rn.f32 	%f25, %f23, %f12, %f24;
	mov.f32 	%f26, 0fBEB8AA49;
	fma.rn.f32 	%f27, %f25, %f12, %f26;
	mov.f32 	%f28, 0f3EF6384A;
	fma.rn.f32 	%f29, %f27, %f12, %f28;
	mov.f32 	%f30, 0fBF38AA3B;
	fma.rn.f32 	%f31, %f29, %f12, %f30;
	mul.f32 	%f32, %f12, %f31;
	mul.f32 	%f33, %f12, %f32;
	mov.f32 	%f34, 0f3FB8AA3B;
	fma.rn.f32 	%f35, %f12, %f34, %f33;
	add.f32 	%f38, %f11, %f35;
	setp.lt.u32	%p3, %r13, 2139095040;
	@%p3 bra 	BB36_4;

	mov.f32 	%f36, 0f7F800000;
	fma.rn.f32 	%f38, %f1, %f36, %f36;

BB36_4:
	setp.eq.f32	%p4, %f1, 0f00000000;
	selp.f32	%f37, 0fFF800000, %f38, %p4;
	mul.lo.s32 	%r17, %r18, %r7;
	mul.wide.s32 	%rd7, %r17, 4;
	add.s64 	%rd8, %rd1, %rd7;
	st.global.f32 	[%rd8], %f37;
	add.s32 	%r18, %r3, %r18;
	setp.lt.s32	%p5, %r18, %r6;
	@%p5 bra 	BB36_2;

BB36_5:
	ret;
}

	// .globl	map_logb_float
.visible .entry map_logb_float(
	.param .u32 map_logb_float_param_0,
	.param .u64 map_logb_float_param_1,
	.param .u32 map_logb_float_param_2,
	.param .u64 map_logb_float_param_3,
	.param .u32 map_logb_float_param_4
)
{
	.reg .pred 	%p<6>;
	.reg .f32 	%f<10>;
	.reg .b32 	%r<21>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r7, [map_logb_float_param_0];
	ld.param.u64 	%rd3, [map_logb_float_param_1];
	ld.param.u32 	%r8, [map_logb_float_param_2];
	ld.param.u64 	%rd4, [map_logb_float_param_3];
	ld.param.u32 	%r9, [map_logb_float_param_4];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r10, %ctaid.x;
	mov.u32 	%r11, %tid.x;
	mad.lo.s32 	%r20, %r1, %r10, %r11;
	setp.ge.s32	%p1, %r20, %r7;
	@%p1 bra 	BB37_6;

	cvta.to.global.u64 	%rd1, %rd3;
	cvta.to.global.u64 	%rd2, %rd4;
	mov.u32 	%r12, %nctaid.x;
	mul.lo.s32 	%r3, %r12, %r1;

BB37_2:
	mul.lo.s32 	%r13, %r20, %r9;
	mul.wide.s32 	%rd5, %r13, 4;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.f32 	%f1, [%rd6];
	abs.f32 	%f5, %f1;
	mov.b32 	 %r5, %f5;
	setp.lt.u32	%p2, %r5, 8388608;
	@%p2 bra 	BB37_4;
	bra.uni 	BB37_3;

BB37_4:
	clz.b32 	%r16, %r5;
	mov.u32 	%r17, -118;
	sub.s32 	%r18, %r17, %r16;
	cvt.rn.f32.s32	%f8, %r18;
	setp.eq.f32	%p4, %f1, 0f00000000;
	selp.f32	%f9, 0fFF800000, %f8, %p4;
	bra.uni 	BB37_5;

BB37_3:
	shr.u32 	%r14, %r5, 23;
	add.s32 	%r15, %r14, -127;
	cvt.rn.f32.s32	%f6, %r15;
	mul.f32 	%f7, %f1, %f1;
	setp.gt.u32	%p3, %r5, 2139095039;
	selp.f32	%f9, %f7, %f6, %p3;

BB37_5:
	mul.lo.s32 	%r19, %r20, %r8;
	mul.wide.s32 	%rd7, %r19, 4;
	add.s64 	%rd8, %rd1, %rd7;
	st.global.f32 	[%rd8], %f9;
	add.s32 	%r20, %r3, %r20;
	setp.lt.s32	%p5, %r20, %r7;
	@%p5 bra 	BB37_2;

BB37_6:
	ret;
}

	// .globl	map_log_float
.visible .entry map_log_float(
	.param .u32 map_log_float_param_0,
	.param .u64 map_log_float_param_1,
	.param .u32 map_log_float_param_2,
	.param .u64 map_log_float_param_3,
	.param .u32 map_log_float_param_4
)
{
	.reg .pred 	%p<6>;
	.reg .f32 	%f<36>;
	.reg .b32 	%r<19>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r6, [map_log_float_param_0];
	ld.param.u64 	%rd3, [map_log_float_param_1];
	ld.param.u32 	%r7, [map_log_float_param_2];
	ld.param.u64 	%rd4, [map_log_float_param_3];
	ld.param.u32 	%r8, [map_log_float_param_4];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r18, %r1, %r9, %r10;
	setp.ge.s32	%p1, %r18, %r6;
	@%p1 bra 	BB38_5;

	cvta.to.global.u64 	%rd1, %rd3;
	cvta.to.global.u64 	%rd2, %rd4;
	mov.u32 	%r11, %nctaid.x;
	mul.lo.s32 	%r3, %r11, %r1;

BB38_2:
	mul.lo.s32 	%r12, %r18, %r8;
	mul.wide.s32 	%rd5, %r12, 4;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.f32 	%f5, [%rd6];
	setp.lt.f32	%p2, %f5, 0f00800000;
	mul.f32 	%f6, %f5, 0f4B000000;
	selp.f32	%f1, %f6, %f5, %p2;
	selp.f32	%f7, 0fC1B80000, 0f00000000, %p2;
	mov.b32 	 %r13, %f1;
	add.s32 	%r14, %r13, -1059760811;
	and.b32  	%r15, %r14, -8388608;
	sub.s32 	%r16, %r13, %r15;
	mov.b32 	 %f8, %r16;
	cvt.rn.f32.s32	%f9, %r15;
	mov.f32 	%f10, 0f34000000;
	fma.rn.f32 	%f11, %f9, %f10, %f7;
	add.f32 	%f12, %f8, 0fBF800000;
	mov.f32 	%f13, 0f3E1039F6;
	mov.f32 	%f14, 0fBE055027;
	fma.rn.f32 	%f15, %f14, %f12, %f13;
	mov.f32 	%f16, 0fBDF8CDCC;
	fma.rn.f32 	%f17, %f15, %f12, %f16;
	mov.f32 	%f18, 0f3E0F2955;
	fma.rn.f32 	%f19, %f17, %f12, %f18;
	mov.f32 	%f20, 0fBE2AD8B9;
	fma.rn.f32 	%f21, %f19, %f12, %f20;
	mov.f32 	%f22, 0f3E4CED0B;
	fma.rn.f32 	%f23, %f21, %f12, %f22;
	mov.f32 	%f24, 0fBE7FFF22;
	fma.rn.f32 	%f25, %f23, %f12, %f24;
	mov.f32 	%f26, 0f3EAAAA78;
	fma.rn.f32 	%f27, %f25, %f12, %f26;
	mov.f32 	%f28, 0fBF000000;
	fma.rn.f32 	%f29, %f27, %f12, %f28;
	mul.f32 	%f30, %f12, %f29;
	fma.rn.f32 	%f31, %f30, %f12, %f12;
	mov.f32 	%f32, 0f3F317218;
	fma.rn.f32 	%f35, %f11, %f32, %f31;
	setp.lt.u32	%p3, %r13, 2139095040;
	@%p3 bra 	BB38_4;

	mov.f32 	%f33, 0f7F800000;
	fma.rn.f32 	%f35, %f1, %f33, %f33;

BB38_4:
	setp.eq.f32	%p4, %f1, 0f00000000;
	selp.f32	%f34, 0fFF800000, %f35, %p4;
	mul.lo.s32 	%r17, %r18, %r7;
	mul.wide.s32 	%rd7, %r17, 4;
	add.s64 	%rd8, %rd1, %rd7;
	st.global.f32 	[%rd8], %f34;
	add.s32 	%r18, %r3, %r18;
	setp.lt.s32	%p5, %r18, %r6;
	@%p5 bra 	BB38_2;

BB38_5:
	ret;
}

	// .globl	map_nearbyint_float
.visible .entry map_nearbyint_float(
	.param .u32 map_nearbyint_float_param_0,
	.param .u64 map_nearbyint_float_param_1,
	.param .u32 map_nearbyint_float_param_2,
	.param .u64 map_nearbyint_float_param_3,
	.param .u32 map_nearbyint_float_param_4
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<15>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r6, [map_nearbyint_float_param_0];
	ld.param.u64 	%rd3, [map_nearbyint_float_param_1];
	ld.param.u32 	%r7, [map_nearbyint_float_param_2];
	ld.param.u64 	%rd4, [map_nearbyint_float_param_3];
	ld.param.u32 	%r8, [map_nearbyint_float_param_4];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r14, %r1, %r9, %r10;
	setp.ge.s32	%p1, %r14, %r6;
	@%p1 bra 	BB39_3;

	cvta.to.global.u64 	%rd1, %rd3;
	cvta.to.global.u64 	%rd2, %rd4;
	mov.u32 	%r11, %nctaid.x;
	mul.lo.s32 	%r3, %r11, %r1;

BB39_2:
	mul.lo.s32 	%r12, %r14, %r8;
	mul.wide.s32 	%rd5, %r12, 4;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.f32 	%f1, [%rd6];
	cvt.rni.f32.f32	%f2, %f1;
	mul.lo.s32 	%r13, %r14, %r7;
	mul.wide.s32 	%rd7, %r13, 4;
	add.s64 	%rd8, %rd1, %rd7;
	st.global.f32 	[%rd8], %f2;
	add.s32 	%r14, %r3, %r14;
	setp.lt.s32	%p2, %r14, %r6;
	@%p2 bra 	BB39_2;

BB39_3:
	ret;
}

	// .globl	map_normcdf_float
.visible .entry map_normcdf_float(
	.param .u32 map_normcdf_float_param_0,
	.param .u64 map_normcdf_float_param_1,
	.param .u32 map_normcdf_float_param_2,
	.param .u64 map_normcdf_float_param_3,
	.param .u32 map_normcdf_float_param_4
)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<81>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r6, [map_normcdf_float_param_0];
	ld.param.u64 	%rd3, [map_normcdf_float_param_1];
	ld.param.u32 	%r7, [map_normcdf_float_param_2];
	ld.param.u64 	%rd4, [map_normcdf_float_param_3];
	ld.param.u32 	%r8, [map_normcdf_float_param_4];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r17, %r1, %r9, %r10;
	setp.ge.s32	%p1, %r17, %r6;
	@%p1 bra 	BB40_5;

	cvta.to.global.u64 	%rd1, %rd3;
	cvta.to.global.u64 	%rd2, %rd4;
	mov.u32 	%r11, %nctaid.x;
	mul.lo.s32 	%r3, %r11, %r1;

BB40_2:
	mul.lo.s32 	%r12, %r17, %r8;
	mul.wide.s32 	%rd5, %r12, 4;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.f32 	%f13, [%rd6];
	abs.f32 	%f14, %f13;
	setp.gt.f32	%p2, %f14, 0f41680000;
	mov.b32 	 %r13, %f13;
	and.b32  	%r14, %r13, -2147483648;
	or.b32  	%r15, %r14, 1097334784;
	mov.b32 	 %f15, %r15;
	selp.f32	%f16, %f15, %f13, %p2;
	mov.f32 	%f17, 0fBF3504F3;
	mul.rn.f32 	%f1, %f16, %f17;
	neg.f32 	%f18, %f1;
	fma.rn.f32 	%f19, %f16, %f17, %f18;
	mov.f32 	%f20, 0fB24FE77A;
	fma.rn.f32 	%f2, %f16, %f20, %f19;
	add.rn.f32 	%f3, %f1, %f2;
	abs.f32 	%f21, %f3;
	add.f32 	%f8, %f21, 0f40800000;
	// inline asm
	rcp.approx.ftz.f32 %f7,%f8;
	// inline asm
	add.f32 	%f22, %f21, 0fC0800000;
	mul.rn.f32 	%f23, %f22, %f7;
	add.f32 	%f24, %f23, 0f3F800000;
	mov.f32 	%f25, 0fC0800000;
	fma.rn.f32 	%f26, %f25, %f24, %f21;
	neg.f32 	%f27, %f23;
	fma.rn.f32 	%f28, %f27, %f21, %f26;
	fma.rn.f32 	%f29, %f7, %f28, %f23;
	mov.f32 	%f30, 0f3BE6E05B;
	mov.f32 	%f31, 0f3A69A091;
	fma.rn.f32 	%f32, %f31, %f29, %f30;
	mov.f32 	%f33, 0fBC81FB4B;
	fma.rn.f32 	%f34, %f32, %f29, %f33;
	mov.f32 	%f35, 0f3D15373B;
	fma.rn.f32 	%f36, %f34, %f29, %f35;
	mov.f32 	%f37, 0fBD887C5A;
	fma.rn.f32 	%f38, %f36, %f29, %f37;
	mov.f32 	%f39, 0f3DC021D5;
	fma.rn.f32 	%f40, %f38, %f29, %f39;
	mov.f32 	%f41, 0fBDCED424;
	fma.rn.f32 	%f42, %f40, %f29, %f41;
	mov.f32 	%f43, 0f3D8B74DE;
	fma.rn.f32 	%f44, %f42, %f29, %f43;
	mov.f32 	%f45, 0f3C7BF170;
	fma.rn.f32 	%f46, %f44, %f29, %f45;
	mov.f32 	%f47, 0fBE0EF8D4;
	fma.rn.f32 	%f48, %f46, %f29, %f47;
	mov.f32 	%f49, 0f3F9DD2C9;
	fma.rn.f32 	%f50, %f48, %f29, %f49;
	mov.f32 	%f51, 0f3F800000;
	mov.f32 	%f52, 0f40000000;
	fma.rn.f32 	%f10, %f52, %f21, %f51;
	// inline asm
	rcp.approx.ftz.f32 %f9,%f10;
	// inline asm
	mul.rn.f32 	%f53, %f50, %f9;
	mul.f32 	%f54, %f53, 0fC0000000;
	fma.rn.f32 	%f55, %f21, %f54, %f50;
	sub.f32 	%f56, %f55, %f53;
	fma.rn.f32 	%f57, %f56, %f9, %f53;
	mul.f32 	%f58, %f21, %f21;
	neg.f32 	%f59, %f58;
	mul.f32 	%f60, %f58, 0fBFB8AA3B;
	cvt.rzi.f32.f32	%f61, %f60;
	mov.f32 	%f62, 0fBF317200;
	fma.rn.f32 	%f63, %f61, %f62, %f59;
	mov.f32 	%f64, 0fB5BFBE8E;
	fma.rn.f32 	%f65, %f61, %f64, %f63;
	mul.f32 	%f12, %f65, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f11,%f12;
	// inline asm
	add.f32 	%f66, %f61, 0f00000000;
	ex2.approx.f32 	%f67, %f66;
	mul.f32 	%f68, %f11, %f67;
	neg.f32 	%f69, %f21;
	fma.rn.f32 	%f70, %f69, %f21, %f58;
	fma.rn.f32 	%f71, %f68, %f70, %f68;
	mul.f32 	%f72, %f57, %f71;
	setp.gt.f32	%p3, %f21, 0f4120E148;
	selp.f32	%f73, 0f00000000, %f72, %p3;
	setp.lt.f32	%p4, %f3, 0f00000000;
	sub.f32 	%f74, %f52, %f73;
	selp.f32	%f80, %f74, %f73, %p4;
	setp.geu.f32	%p5, %f16, 0fBF800000;
	@%p5 bra 	BB40_4;

	sub.f32 	%f75, %f1, %f3;
	add.rn.f32 	%f76, %f75, %f2;
	mul.f32 	%f77, %f3, 0fC0000000;
	mul.f32 	%f78, %f77, %f80;
	fma.rn.f32 	%f80, %f78, %f76, %f80;

BB40_4:
	mul.lo.s32 	%r16, %r17, %r7;
	mul.wide.s32 	%rd7, %r16, 4;
	add.s64 	%rd8, %rd1, %rd7;
	mul.f32 	%f79, %f80, 0f3F000000;
	st.global.f32 	[%rd8], %f79;
	add.s32 	%r17, %r3, %r17;
	setp.lt.s32	%p6, %r17, %r6;
	@%p6 bra 	BB40_2;

BB40_5:
	ret;
}

	// .globl	map_normcdfinv_float
.visible .entry map_normcdfinv_float(
	.param .u32 map_normcdfinv_float_param_0,
	.param .u64 map_normcdfinv_float_param_1,
	.param .u32 map_normcdfinv_float_param_2,
	.param .u64 map_normcdfinv_float_param_3,
	.param .u32 map_normcdfinv_float_param_4
)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<60>;
	.reg .b32 	%r<15>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r6, [map_normcdfinv_float_param_0];
	ld.param.u64 	%rd3, [map_normcdfinv_float_param_1];
	ld.param.u32 	%r7, [map_normcdfinv_float_param_2];
	ld.param.u64 	%rd4, [map_normcdfinv_float_param_3];
	ld.param.u32 	%r8, [map_normcdfinv_float_param_4];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r14, %r1, %r9, %r10;
	setp.ge.s32	%p1, %r14, %r6;
	@%p1 bra 	BB41_6;

	cvta.to.global.u64 	%rd1, %rd3;
	cvta.to.global.u64 	%rd2, %rd4;
	mov.u32 	%r11, %nctaid.x;
	mul.lo.s32 	%r3, %r11, %r1;

BB41_2:
	mul.lo.s32 	%r12, %r14, %r8;
	mul.wide.s32 	%rd5, %r12, 4;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.f32 	%f7, [%rd6];
	add.f32 	%f1, %f7, %f7;
	neg.f32 	%f2, %f1;
	mov.f32 	%f8, 0f40000000;
	add.rn.f32 	%f3, %f8, %f2;
	setp.le.f32	%p2, %f1, 0f3FFF9097;
	setp.ge.f32	%p3, %f1, 0f3B5ED289;
	and.pred  	%p4, %p3, %p2;
	@%p4 bra 	BB41_4;
	bra.uni 	BB41_3;

BB41_4:
	mul.rn.f32 	%f35, %f3, %f1;
	// inline asm
	lg2.approx.ftz.f32 %f34,%f35;
	// inline asm
	neg.f32 	%f36, %f34;
	mov.f32 	%f37, 0f3221F645;
	mov.f32 	%f38, 0fAF8A6370;
	fma.rn.f32 	%f39, %f38, %f36, %f37;
	mov.f32 	%f40, 0fB4016FDA;
	fma.rn.f32 	%f41, %f39, %f36, %f40;
	mov.f32 	%f42, 0f3468F846;
	fma.rn.f32 	%f43, %f41, %f36, %f42;
	mov.f32 	%f44, 0f370742AA;
	fma.rn.f32 	%f45, %f43, %f36, %f44;
	mov.f32 	%f46, 0fB804DB4D;
	fma.rn.f32 	%f47, %f45, %f36, %f46;
	mov.f32 	%f48, 0fBA4AFEA1;
	fma.rn.f32 	%f49, %f47, %f36, %f48;
	mov.f32 	%f50, 0f3BB5C027;
	fma.rn.f32 	%f51, %f49, %f36, %f50;
	mov.f32 	%f52, 0f3E24AE0F;
	fma.rn.f32 	%f53, %f51, %f36, %f52;
	mov.f32 	%f54, 0f3F62DFC4;
	fma.rn.f32 	%f55, %f53, %f36, %f54;
	fma.rn.f32 	%f59, %f55, %f2, %f55;
	bra.uni 	BB41_5;

BB41_3:
	setp.gt.f32	%p5, %f1, 0f3F800000;
	selp.f32	%f13, %f3, %f1, %p5;
	lg2.approx.f32 	%f14, %f13;
	neg.f32 	%f10, %f14;
	// inline asm
	rsqrt.approx.ftz.f32 %f9,%f10;
	// inline asm
	mov.f32 	%f15, 0f42FEF829;
	mov.f32 	%f16, 0fC27C73F1;
	fma.rn.f32 	%f17, %f16, %f9, %f15;
	mov.f32 	%f18, 0fC2E4361C;
	fma.rn.f32 	%f19, %f17, %f9, %f18;
	mov.f32 	%f20, 0f42714D9B;
	fma.rn.f32 	%f21, %f19, %f9, %f20;
	mov.f32 	%f22, 0fC1AE51B3;
	fma.rn.f32 	%f23, %f21, %f9, %f22;
	mov.f32 	%f24, 0f40CEF504;
	fma.rn.f32 	%f25, %f23, %f9, %f24;
	mov.f32 	%f26, 0fBFEA9E05;
	fma.rn.f32 	%f27, %f25, %f9, %f26;
	mov.f32 	%f28, 0fBCF871F4;
	fma.rn.f32 	%f29, %f27, %f9, %f28;
	mov.f32 	%f30, 0f3F553775;
	fma.rn.f32 	%f31, %f29, %f9, %f30;
	// inline asm
	rcp.approx.ftz.f32 %f11,%f9;
	// inline asm
	mul.rn.f32 	%f32, %f31, %f11;
	neg.f32 	%f33, %f32;
	selp.f32	%f59, %f33, %f32, %p5;

BB41_5:
	mul.f32 	%f56, %f59, 0fBFB504F3;
	mov.f32 	%f57, 0f00000000;
	add.rn.f32 	%f58, %f56, %f57;
	mul.lo.s32 	%r13, %r14, %r7;
	mul.wide.s32 	%rd7, %r13, 4;
	add.s64 	%rd8, %rd1, %rd7;
	st.global.f32 	[%rd8], %f58;
	add.s32 	%r14, %r3, %r14;
	setp.lt.s32	%p6, %r14, %r6;
	@%p6 bra 	BB41_2;

BB41_6:
	ret;
}

	// .globl	map_rcbrt_float
.visible .entry map_rcbrt_float(
	.param .u32 map_rcbrt_float_param_0,
	.param .u64 map_rcbrt_float_param_1,
	.param .u32 map_rcbrt_float_param_2,
	.param .u64 map_rcbrt_float_param_3,
	.param .u32 map_rcbrt_float_param_4
)
{
	.reg .pred 	%p<5>;
	.reg .f32 	%f<21>;
	.reg .b32 	%r<16>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r6, [map_rcbrt_float_param_0];
	ld.param.u64 	%rd3, [map_rcbrt_float_param_1];
	ld.param.u32 	%r7, [map_rcbrt_float_param_2];
	ld.param.u64 	%rd4, [map_rcbrt_float_param_3];
	ld.param.u32 	%r8, [map_rcbrt_float_param_4];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r15, %r1, %r9, %r10;
	setp.ge.s32	%p1, %r15, %r6;
	@%p1 bra 	BB42_5;

	cvta.to.global.u64 	%rd1, %rd3;
	cvta.to.global.u64 	%rd2, %rd4;
	mov.u32 	%r11, %nctaid.x;
	mul.lo.s32 	%r3, %r11, %r1;

BB42_2:
	mul.lo.s32 	%r12, %r15, %r8;
	mul.wide.s32 	%rd5, %r12, 4;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.f32 	%f1, [%rd6];
	abs.f32 	%f7, %f1;
	lg2.approx.f32 	%f8, %f7;
	mul.f32 	%f6, %f8, 0fBEAAAAAB;
	// inline asm
	ex2.approx.ftz.f32 %f5,%f6;
	// inline asm
	mul.f32 	%f9, %f7, %f5;
	neg.f32 	%f10, %f9;
	mul.f32 	%f11, %f5, %f5;
	mov.f32 	%f12, 0f3F800000;
	fma.rn.f32 	%f13, %f11, %f10, %f12;
	mul.f32 	%f14, %f5, 0f3EAAAAAB;
	fma.rn.f32 	%f15, %f13, %f14, %f5;
	mov.b32 	 %r13, %f1;
	setp.lt.s32	%p2, %r13, 0;
	neg.f32 	%f16, %f15;
	selp.f32	%f20, %f16, %f15, %p2;
	add.f32 	%f17, %f1, %f1;
	setp.neu.f32	%p3, %f17, %f1;
	@%p3 bra 	BB42_4;

	// inline asm
	rcp.approx.ftz.f32 %f20,%f1;
	// inline asm

BB42_4:
	mul.lo.s32 	%r14, %r15, %r7;
	mul.wide.s32 	%rd7, %r14, 4;
	add.s64 	%rd8, %rd1, %rd7;
	st.global.f32 	[%rd8], %f20;
	add.s32 	%r15, %r3, %r15;
	setp.lt.s32	%p4, %r15, %r6;
	@%p4 bra 	BB42_2;

BB42_5:
	ret;
}

	// .globl	map_rint_float
.visible .entry map_rint_float(
	.param .u32 map_rint_float_param_0,
	.param .u64 map_rint_float_param_1,
	.param .u32 map_rint_float_param_2,
	.param .u64 map_rint_float_param_3,
	.param .u32 map_rint_float_param_4
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<15>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r6, [map_rint_float_param_0];
	ld.param.u64 	%rd3, [map_rint_float_param_1];
	ld.param.u32 	%r7, [map_rint_float_param_2];
	ld.param.u64 	%rd4, [map_rint_float_param_3];
	ld.param.u32 	%r8, [map_rint_float_param_4];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r14, %r1, %r9, %r10;
	setp.ge.s32	%p1, %r14, %r6;
	@%p1 bra 	BB43_3;

	cvta.to.global.u64 	%rd1, %rd3;
	cvta.to.global.u64 	%rd2, %rd4;
	mov.u32 	%r11, %nctaid.x;
	mul.lo.s32 	%r3, %r11, %r1;

BB43_2:
	mul.lo.s32 	%r12, %r14, %r8;
	mul.wide.s32 	%rd5, %r12, 4;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.f32 	%f1, [%rd6];
	cvt.rni.f32.f32	%f2, %f1;
	mul.lo.s32 	%r13, %r14, %r7;
	mul.wide.s32 	%rd7, %r13, 4;
	add.s64 	%rd8, %rd1, %rd7;
	st.global.f32 	[%rd8], %f2;
	add.s32 	%r14, %r3, %r14;
	setp.lt.s32	%p2, %r14, %r6;
	@%p2 bra 	BB43_2;

BB43_3:
	ret;
}

	// .globl	map_round_float
.visible .entry map_round_float(
	.param .u32 map_round_float_param_0,
	.param .u64 map_round_float_param_1,
	.param .u32 map_round_float_param_2,
	.param .u64 map_round_float_param_3,
	.param .u32 map_round_float_param_4
)
{
	.reg .pred 	%p<5>;
	.reg .f32 	%f<10>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r6, [map_round_float_param_0];
	ld.param.u64 	%rd3, [map_round_float_param_1];
	ld.param.u32 	%r7, [map_round_float_param_2];
	ld.param.u64 	%rd4, [map_round_float_param_3];
	ld.param.u32 	%r8, [map_round_float_param_4];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r17, %r1, %r9, %r10;
	setp.ge.s32	%p1, %r17, %r6;
	@%p1 bra 	BB44_5;

	cvta.to.global.u64 	%rd1, %rd3;
	cvta.to.global.u64 	%rd2, %rd4;
	mov.u32 	%r11, %nctaid.x;
	mul.lo.s32 	%r3, %r11, %r1;

BB44_2:
	mul.lo.s32 	%r12, %r17, %r8;
	mul.wide.s32 	%rd5, %r12, 4;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.f32 	%f1, [%rd6];
	abs.f32 	%f5, %f1;
	mov.b32 	 %r13, %f1;
	and.b32  	%r14, %r13, -2147483648;
	or.b32  	%r15, %r14, 1056964608;
	mov.b32 	 %f6, %r15;
	add.f32 	%f7, %f1, %f6;
	cvt.rzi.f32.f32	%f8, %f7;
	setp.gt.f32	%p2, %f5, 0f4B000000;
	selp.f32	%f9, %f1, %f8, %p2;
	setp.geu.f32	%p3, %f5, 0f3F000000;
	@%p3 bra 	BB44_4;

	cvt.rzi.f32.f32	%f9, %f1;

BB44_4:
	mul.lo.s32 	%r16, %r17, %r7;
	mul.wide.s32 	%rd7, %r16, 4;
	add.s64 	%rd8, %rd1, %rd7;
	st.global.f32 	[%rd8], %f9;
	add.s32 	%r17, %r3, %r17;
	setp.lt.s32	%p4, %r17, %r6;
	@%p4 bra 	BB44_2;

BB44_5:
	ret;
}

	// .globl	map_rsqrt_float
.visible .entry map_rsqrt_float(
	.param .u32 map_rsqrt_float_param_0,
	.param .u64 map_rsqrt_float_param_1,
	.param .u32 map_rsqrt_float_param_2,
	.param .u64 map_rsqrt_float_param_3,
	.param .u32 map_rsqrt_float_param_4
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<15>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r6, [map_rsqrt_float_param_0];
	ld.param.u64 	%rd3, [map_rsqrt_float_param_1];
	ld.param.u32 	%r7, [map_rsqrt_float_param_2];
	ld.param.u64 	%rd4, [map_rsqrt_float_param_3];
	ld.param.u32 	%r8, [map_rsqrt_float_param_4];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r14, %r1, %r9, %r10;
	setp.ge.s32	%p1, %r14, %r6;
	@%p1 bra 	BB45_3;

	cvta.to.global.u64 	%rd1, %rd3;
	cvta.to.global.u64 	%rd2, %rd4;
	mov.u32 	%r11, %nctaid.x;
	mul.lo.s32 	%r3, %r11, %r1;

BB45_2:
	mul.lo.s32 	%r12, %r14, %r8;
	mul.wide.s32 	%rd5, %r12, 4;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.f32 	%f1, [%rd6];
	rsqrt.approx.f32 	%f2, %f1;
	mul.lo.s32 	%r13, %r14, %r7;
	mul.wide.s32 	%rd7, %r13, 4;
	add.s64 	%rd8, %rd1, %rd7;
	st.global.f32 	[%rd8], %f2;
	add.s32 	%r14, %r3, %r14;
	setp.lt.s32	%p2, %r14, %r6;
	@%p2 bra 	BB45_2;

BB45_3:
	ret;
}

	// .globl	map_sin_float
.visible .entry map_sin_float(
	.param .u32 map_sin_float_param_0,
	.param .u64 map_sin_float_param_1,
	.param .u32 map_sin_float_param_2,
	.param .u64 map_sin_float_param_3,
	.param .u32 map_sin_float_param_4
)
{
	.local .align 4 .b8 	__local_depot46[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<16>;
	.reg .f32 	%f<48>;
	.reg .b32 	%r<106>;
	.reg .b64 	%rd<23>;


	mov.u64 	%rd22, __local_depot46;
	cvta.local.u64 	%SP, %rd22;
	ld.param.u32 	%r41, [map_sin_float_param_0];
	ld.param.u64 	%rd8, [map_sin_float_param_1];
	ld.param.u32 	%r42, [map_sin_float_param_2];
	ld.param.u64 	%rd9, [map_sin_float_param_3];
	ld.param.u32 	%r43, [map_sin_float_param_4];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r44, %ctaid.x;
	mov.u32 	%r45, %tid.x;
	mad.lo.s32 	%r95, %r1, %r44, %r45;
	setp.ge.s32	%p1, %r95, %r41;
	@%p1 bra 	BB46_25;

	cvta.to.global.u64 	%rd1, %rd8;
	mov.u32 	%r46, %nctaid.x;
	mul.lo.s32 	%r3, %r46, %r1;
	cvta.to.global.u64 	%rd10, %rd9;

BB46_2:
	mul.lo.s32 	%r47, %r95, %r43;
	mul.wide.s32 	%rd11, %r47, 4;
	add.s64 	%rd12, %rd10, %rd11;
	ld.global.f32 	%f43, [%rd12];
	abs.f32 	%f19, %f43;
	setp.neu.f32	%p2, %f19, 0f7F800000;
	@%p2 bra 	BB46_4;

	mov.f32 	%f20, 0f00000000;
	mul.rn.f32 	%f43, %f43, %f20;

BB46_4:
	mul.f32 	%f21, %f43, 0f3F22F983;
	cvt.rni.s32.f32	%r105, %f21;
	cvt.rn.f32.s32	%f22, %r105;
	neg.f32 	%f23, %f22;
	mov.f32 	%f24, 0f3FC90FDA;
	fma.rn.f32 	%f25, %f23, %f24, %f43;
	mov.f32 	%f26, 0f33A22168;
	fma.rn.f32 	%f27, %f23, %f26, %f25;
	mov.f32 	%f28, 0f27C234C5;
	fma.rn.f32 	%f44, %f23, %f28, %f27;
	abs.f32 	%f29, %f43;
	setp.leu.f32	%p3, %f29, 0f47CE4780;
	@%p3 bra 	BB46_14;

	mov.b32 	 %r6, %f43;
	shr.u32 	%r7, %r6, 23;
	shl.b32 	%r50, %r6, 8;
	or.b32  	%r8, %r50, -2147483648;
	add.u64 	%rd14, %SP, 0;
	cvta.to.local.u64 	%rd21, %rd14;
	mov.u32 	%r97, 0;
	mov.u64 	%rd20, __cudart_i2opi_f;
	mov.u32 	%r96, -6;

BB46_6:
	.pragma "nounroll";
	ld.const.u32 	%r53, [%rd20];
	// inline asm
	{
	mad.lo.cc.u32   %r51, %r53, %r8, %r97;
	madc.hi.u32     %r97, %r53, %r8,  0;
	}
	// inline asm
	st.local.u32 	[%rd21], %r51;
	add.s64 	%rd21, %rd21, 4;
	add.s64 	%rd20, %rd20, 4;
	add.s32 	%r96, %r96, 1;
	setp.ne.s32	%p4, %r96, 0;
	@%p4 bra 	BB46_6;

	and.b32  	%r56, %r7, 255;
	add.s32 	%r57, %r56, -128;
	shr.u32 	%r58, %r57, 5;
	and.b32  	%r13, %r6, -2147483648;
	cvta.to.local.u64 	%rd16, %rd14;
	st.local.u32 	[%rd16+24], %r97;
	mov.u32 	%r59, 6;
	sub.s32 	%r60, %r59, %r58;
	mul.wide.s32 	%rd17, %r60, 4;
	add.s64 	%rd7, %rd16, %rd17;
	ld.local.u32 	%r98, [%rd7];
	ld.local.u32 	%r99, [%rd7+-4];
	and.b32  	%r16, %r7, 31;
	setp.eq.s32	%p5, %r16, 0;
	@%p5 bra 	BB46_9;

	mov.u32 	%r61, 32;
	sub.s32 	%r62, %r61, %r16;
	shr.u32 	%r63, %r99, %r62;
	shl.b32 	%r64, %r98, %r16;
	add.s32 	%r98, %r63, %r64;
	ld.local.u32 	%r65, [%rd7+-8];
	shr.u32 	%r66, %r65, %r62;
	shl.b32 	%r67, %r99, %r16;
	add.s32 	%r99, %r66, %r67;

BB46_9:
	shr.u32 	%r68, %r99, 30;
	shl.b32 	%r69, %r98, 2;
	add.s32 	%r100, %r68, %r69;
	shl.b32 	%r22, %r99, 2;
	shr.u32 	%r70, %r100, 31;
	shr.u32 	%r71, %r98, 30;
	add.s32 	%r23, %r70, %r71;
	setp.eq.s32	%p6, %r70, 0;
	mov.u32 	%r101, %r13;
	mov.u32 	%r102, %r22;
	@%p6 bra 	BB46_11;

	not.b32 	%r72, %r100;
	neg.s32 	%r24, %r22;
	setp.eq.s32	%p7, %r22, 0;
	selp.u32	%r73, 1, 0, %p7;
	add.s32 	%r100, %r73, %r72;
	xor.b32  	%r26, %r13, -2147483648;
	mov.u32 	%r101, %r26;
	mov.u32 	%r102, %r24;

BB46_11:
	mov.u32 	%r28, %r101;
	neg.s32 	%r74, %r23;
	setp.eq.s32	%p8, %r13, 0;
	selp.b32	%r105, %r23, %r74, %p8;
	clz.b32 	%r104, %r100;
	setp.eq.s32	%p9, %r104, 0;
	shl.b32 	%r75, %r100, %r104;
	mov.u32 	%r76, 32;
	sub.s32 	%r77, %r76, %r104;
	shr.u32 	%r78, %r102, %r77;
	add.s32 	%r79, %r78, %r75;
	selp.b32	%r32, %r100, %r79, %p9;
	mov.u32 	%r80, -921707870;
	mul.hi.u32 	%r103, %r32, %r80;
	setp.lt.s32	%p10, %r103, 1;
	@%p10 bra 	BB46_13;

	mul.lo.s32 	%r81, %r32, -921707870;
	shr.u32 	%r82, %r81, 31;
	shl.b32 	%r83, %r103, 1;
	add.s32 	%r103, %r82, %r83;
	add.s32 	%r104, %r104, 1;

BB46_13:
	mov.u32 	%r84, 126;
	sub.s32 	%r85, %r84, %r104;
	shl.b32 	%r86, %r85, 23;
	add.s32 	%r87, %r103, 1;
	shr.u32 	%r88, %r87, 7;
	add.s32 	%r89, %r88, 1;
	shr.u32 	%r90, %r89, 1;
	add.s32 	%r91, %r90, %r86;
	or.b32  	%r92, %r91, %r28;
	mov.b32 	 %f44, %r92;

BB46_14:
	mul.rn.f32 	%f7, %f44, %f44;
	and.b32  	%r39, %r105, 1;
	setp.eq.s32	%p11, %r39, 0;
	@%p11 bra 	BB46_16;
	bra.uni 	BB46_15;

BB46_16:
	mov.f32 	%f32, 0f3C08839E;
	mov.f32 	%f33, 0fB94CA1F9;
	fma.rn.f32 	%f45, %f33, %f7, %f32;
	bra.uni 	BB46_17;

BB46_15:
	mov.f32 	%f30, 0fBAB6061A;
	mov.f32 	%f31, 0f37CCF5CE;
	fma.rn.f32 	%f45, %f31, %f7, %f30;

BB46_17:
	@%p11 bra 	BB46_19;
	bra.uni 	BB46_18;

BB46_19:
	mov.f32 	%f37, 0fBE2AAAA3;
	fma.rn.f32 	%f38, %f45, %f7, %f37;
	mov.f32 	%f39, 0f00000000;
	fma.rn.f32 	%f46, %f38, %f7, %f39;
	bra.uni 	BB46_20;

BB46_18:
	mov.f32 	%f34, 0f3D2AAAA5;
	fma.rn.f32 	%f35, %f45, %f7, %f34;
	mov.f32 	%f36, 0fBF000000;
	fma.rn.f32 	%f46, %f35, %f7, %f36;

BB46_20:
	fma.rn.f32 	%f47, %f46, %f44, %f44;
	@%p11 bra 	BB46_22;

	mov.f32 	%f40, 0f3F800000;
	fma.rn.f32 	%f47, %f46, %f7, %f40;

BB46_22:
	and.b32  	%r93, %r105, 2;
	setp.eq.s32	%p14, %r93, 0;
	@%p14 bra 	BB46_24;

	mov.f32 	%f41, 0f00000000;
	mov.f32 	%f42, 0fBF800000;
	fma.rn.f32 	%f47, %f47, %f42, %f41;

BB46_24:
	mul.lo.s32 	%r94, %r95, %r42;
	mul.wide.s32 	%rd18, %r94, 4;
	add.s64 	%rd19, %rd1, %rd18;
	st.global.f32 	[%rd19], %f47;
	add.s32 	%r95, %r3, %r95;
	setp.lt.s32	%p15, %r95, %r41;
	@%p15 bra 	BB46_2;

BB46_25:
	ret;
}

	// .globl	map_sinh_float
.visible .entry map_sinh_float(
	.param .u32 map_sinh_float_param_0,
	.param .u64 map_sinh_float_param_1,
	.param .u32 map_sinh_float_param_2,
	.param .u64 map_sinh_float_param_3,
	.param .u32 map_sinh_float_param_4
)
{
	.reg .pred 	%p<5>;
	.reg .f32 	%f<32>;
	.reg .b32 	%r<20>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r6, [map_sinh_float_param_0];
	ld.param.u64 	%rd3, [map_sinh_float_param_1];
	ld.param.u32 	%r7, [map_sinh_float_param_2];
	ld.param.u64 	%rd4, [map_sinh_float_param_3];
	ld.param.u32 	%r8, [map_sinh_float_param_4];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r19, %r1, %r9, %r10;
	setp.ge.s32	%p1, %r19, %r6;
	@%p1 bra 	BB47_6;

	cvta.to.global.u64 	%rd1, %rd3;
	cvta.to.global.u64 	%rd2, %rd4;
	mov.u32 	%r11, %nctaid.x;
	mul.lo.s32 	%r3, %r11, %r1;

BB47_2:
	mul.lo.s32 	%r12, %r19, %r8;
	mul.wide.s32 	%rd5, %r12, 4;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.f32 	%f1, [%rd6];
	abs.f32 	%f2, %f1;
	setp.ltu.f32	%p2, %f2, 0f3F800000;
	@%p2 bra 	BB47_4;
	bra.uni 	BB47_3;

BB47_4:
	mul.f32 	%f22, %f1, %f1;
	mov.f32 	%f23, 0f394FFF49;
	mov.f32 	%f24, 0f363D0ADA;
	fma.rn.f32 	%f25, %f24, %f22, %f23;
	mov.f32 	%f26, 0f3C08889A;
	fma.rn.f32 	%f27, %f25, %f22, %f26;
	mov.f32 	%f28, 0f3E2AAAAB;
	fma.rn.f32 	%f29, %f27, %f22, %f28;
	mul.f32 	%f30, %f22, %f29;
	fma.rn.f32 	%f31, %f30, %f1, %f1;
	bra.uni 	BB47_5;

BB47_3:
	mul.f32 	%f8, %f2, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f9, %f8;
	mov.f32 	%f10, 0fBF317200;
	fma.rn.f32 	%f11, %f9, %f10, %f2;
	mov.f32 	%f12, 0fB5BFBE8E;
	fma.rn.f32 	%f13, %f9, %f12, %f11;
	mul.f32 	%f7, %f13, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f6,%f7;
	// inline asm
	add.f32 	%f14, %f9, 0fC0000000;
	ex2.approx.f32 	%f15, %f14;
	mul.f32 	%f16, %f6, %f15;
	mov.f32 	%f17, 0f3E000000;
	div.approx.f32 	%f18, %f17, %f16;
	neg.f32 	%f19, %f18;
	mov.f32 	%f20, 0f40000000;
	fma.rn.f32 	%f21, %f20, %f16, %f19;
	mov.b32 	 %r13, %f21;
	setp.ltu.f32	%p3, %f2, 0f42B40000;
	selp.b32	%r14, %r13, 2139095040, %p3;
	mov.b32 	 %r15, %f1;
	and.b32  	%r16, %r15, -2147483648;
	or.b32  	%r17, %r14, %r16;
	mov.b32 	 %f31, %r17;

BB47_5:
	mul.lo.s32 	%r18, %r19, %r7;
	mul.wide.s32 	%rd7, %r18, 4;
	add.s64 	%rd8, %rd1, %rd7;
	st.global.f32 	[%rd8], %f31;
	add.s32 	%r19, %r3, %r19;
	setp.lt.s32	%p4, %r19, %r6;
	@%p4 bra 	BB47_2;

BB47_6:
	ret;
}

	// .globl	map_sinpi_float
.visible .entry map_sinpi_float(
	.param .u32 map_sinpi_float_param_0,
	.param .u64 map_sinpi_float_param_1,
	.param .u32 map_sinpi_float_param_2,
	.param .u64 map_sinpi_float_param_3,
	.param .u32 map_sinpi_float_param_4
)
{
	.reg .pred 	%p<8>;
	.reg .f32 	%f<42>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r8, [map_sinpi_float_param_0];
	ld.param.u64 	%rd1, [map_sinpi_float_param_1];
	ld.param.u32 	%r9, [map_sinpi_float_param_2];
	ld.param.u64 	%rd2, [map_sinpi_float_param_3];
	ld.param.u32 	%r10, [map_sinpi_float_param_4];
	mov.u32 	%r11, %tid.x;
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r12, %ctaid.x;
	mad.lo.s32 	%r17, %r1, %r12, %r11;
	setp.ge.s32	%p1, %r17, %r8;
	@%p1 bra 	BB48_15;

	mov.u32 	%r13, %nctaid.x;
	mul.lo.s32 	%r3, %r13, %r1;
	cvta.to.global.u64 	%rd3, %rd2;
	cvta.to.global.u64 	%rd6, %rd1;

BB48_2:
	mul.lo.s32 	%r14, %r17, %r10;
	mul.wide.s32 	%rd4, %r14, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	add.f32 	%f17, %f1, %f1;
	cvt.rni.f32.f32	%f18, %f17;
	cvt.rzi.s32.f32	%r5, %f18;
	neg.f32 	%f19, %f18;
	mov.f32 	%f20, 0f3F000000;
	fma.rn.f32 	%f21, %f19, %f20, %f1;
	mul.f32 	%f22, %f21, 0f34222169;
	mov.f32 	%f23, 0f40490FDA;
	fma.rn.f32 	%f2, %f21, %f23, %f22;
	mul.rn.f32 	%f3, %f2, %f2;
	and.b32  	%r6, %r5, 1;
	setp.eq.s32	%p2, %r6, 0;
	@%p2 bra 	BB48_4;
	bra.uni 	BB48_3;

BB48_4:
	mov.f32 	%f26, 0f3C08839E;
	mov.f32 	%f27, 0fB94CA1F9;
	fma.rn.f32 	%f39, %f27, %f3, %f26;
	bra.uni 	BB48_5;

BB48_3:
	mov.f32 	%f24, 0fBAB6061A;
	mov.f32 	%f25, 0f37CCF5CE;
	fma.rn.f32 	%f39, %f25, %f3, %f24;

BB48_5:
	@%p2 bra 	BB48_7;
	bra.uni 	BB48_6;

BB48_7:
	mov.f32 	%f31, 0fBE2AAAA3;
	fma.rn.f32 	%f32, %f39, %f3, %f31;
	mov.f32 	%f33, 0f00000000;
	fma.rn.f32 	%f40, %f32, %f3, %f33;
	bra.uni 	BB48_8;

BB48_6:
	mov.f32 	%f28, 0f3D2AAAA5;
	fma.rn.f32 	%f29, %f39, %f3, %f28;
	mov.f32 	%f30, 0fBF000000;
	fma.rn.f32 	%f40, %f29, %f3, %f30;

BB48_8:
	fma.rn.f32 	%f41, %f40, %f2, %f2;
	@%p2 bra 	BB48_10;

	mov.f32 	%f34, 0f3F800000;
	fma.rn.f32 	%f41, %f40, %f3, %f34;

BB48_10:
	and.b32  	%r15, %r5, 2;
	setp.eq.s32	%p5, %r15, 0;
	@%p5 bra 	BB48_12;

	mov.f32 	%f35, 0f00000000;
	mov.f32 	%f36, 0fBF800000;
	fma.rn.f32 	%f41, %f41, %f36, %f35;

BB48_12:
	cvt.rzi.f32.f32	%f37, %f1;
	setp.neu.f32	%p6, %f37, %f1;
	@%p6 bra 	BB48_14;

	mov.f32 	%f38, 0f00000000;
	mul.rn.f32 	%f41, %f1, %f38;

BB48_14:
	mul.lo.s32 	%r16, %r17, %r9;
	mul.wide.s32 	%rd7, %r16, 4;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.f32 	[%rd8], %f41;
	add.s32 	%r17, %r3, %r17;
	setp.lt.s32	%p7, %r17, %r8;
	@%p7 bra 	BB48_2;

BB48_15:
	ret;
}

	// .globl	map_sqrt_float
.visible .entry map_sqrt_float(
	.param .u32 map_sqrt_float_param_0,
	.param .u64 map_sqrt_float_param_1,
	.param .u32 map_sqrt_float_param_2,
	.param .u64 map_sqrt_float_param_3,
	.param .u32 map_sqrt_float_param_4
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<15>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r6, [map_sqrt_float_param_0];
	ld.param.u64 	%rd3, [map_sqrt_float_param_1];
	ld.param.u32 	%r7, [map_sqrt_float_param_2];
	ld.param.u64 	%rd4, [map_sqrt_float_param_3];
	ld.param.u32 	%r8, [map_sqrt_float_param_4];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r14, %r1, %r9, %r10;
	setp.ge.s32	%p1, %r14, %r6;
	@%p1 bra 	BB49_3;

	cvta.to.global.u64 	%rd1, %rd3;
	cvta.to.global.u64 	%rd2, %rd4;
	mov.u32 	%r11, %nctaid.x;
	mul.lo.s32 	%r3, %r11, %r1;

BB49_2:
	mul.lo.s32 	%r12, %r14, %r8;
	mul.wide.s32 	%rd5, %r12, 4;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.f32 	%f1, [%rd6];
	sqrt.rn.f32 	%f2, %f1;
	mul.lo.s32 	%r13, %r14, %r7;
	mul.wide.s32 	%rd7, %r13, 4;
	add.s64 	%rd8, %rd1, %rd7;
	st.global.f32 	[%rd8], %f2;
	add.s32 	%r14, %r3, %r14;
	setp.lt.s32	%p2, %r14, %r6;
	@%p2 bra 	BB49_2;

BB49_3:
	ret;
}

	// .globl	map_tan_float
.visible .entry map_tan_float(
	.param .u32 map_tan_float_param_0,
	.param .u64 map_tan_float_param_1,
	.param .u32 map_tan_float_param_2,
	.param .u64 map_tan_float_param_3,
	.param .u32 map_tan_float_param_4
)
{
	.local .align 4 .b8 	__local_depot50[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<13>;
	.reg .f32 	%f<33>;
	.reg .b32 	%r<105>;
	.reg .b64 	%rd<26>;


	mov.u64 	%rd25, __local_depot50;
	cvta.local.u64 	%SP, %rd25;
	ld.param.u32 	%r40, [map_tan_float_param_0];
	ld.param.u64 	%rd9, [map_tan_float_param_1];
	ld.param.u32 	%r41, [map_tan_float_param_2];
	ld.param.u64 	%rd10, [map_tan_float_param_3];
	ld.param.u32 	%r42, [map_tan_float_param_4];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r43, %ctaid.x;
	mov.u32 	%r44, %tid.x;
	mad.lo.s32 	%r94, %r1, %r43, %r44;
	setp.ge.s32	%p1, %r94, %r40;
	@%p1 bra 	BB50_17;

	cvta.to.global.u64 	%rd1, %rd9;
	add.u64 	%rd11, %SP, 0;
	cvta.to.local.u64 	%rd12, %rd11;
	add.s64 	%rd2, %rd12, 24;
	mov.u32 	%r45, %nctaid.x;
	mul.lo.s32 	%r3, %r45, %r1;
	cvta.to.global.u64 	%rd13, %rd10;

BB50_2:
	mul.lo.s32 	%r46, %r94, %r42;
	mul.wide.s32 	%rd14, %r46, 4;
	add.s64 	%rd15, %rd13, %rd14;
	ld.global.f32 	%f30, [%rd15];
	abs.f32 	%f10, %f30;
	setp.neu.f32	%p2, %f10, 0f7F800000;
	@%p2 bra 	BB50_4;

	mov.f32 	%f11, 0f00000000;
	mul.rn.f32 	%f30, %f30, %f11;

BB50_4:
	mul.f32 	%f12, %f30, 0f3F22F983;
	cvt.rni.s32.f32	%r104, %f12;
	cvt.rn.f32.s32	%f13, %r104;
	neg.f32 	%f14, %f13;
	mov.f32 	%f15, 0f3FC90FDA;
	fma.rn.f32 	%f16, %f14, %f15, %f30;
	mov.f32 	%f17, 0f33A22168;
	fma.rn.f32 	%f18, %f14, %f17, %f16;
	mov.f32 	%f19, 0f27C234C5;
	fma.rn.f32 	%f31, %f14, %f19, %f18;
	abs.f32 	%f20, %f30;
	setp.leu.f32	%p3, %f20, 0f47CE4780;
	@%p3 bra 	BB50_14;

	mov.b32 	 %r6, %f30;
	shr.u32 	%r7, %r6, 23;
	shl.b32 	%r49, %r6, 8;
	or.b32  	%r8, %r49, -2147483648;
	mov.u32 	%r96, 0;
	mov.u64 	%rd23, __cudart_i2opi_f;
	mov.u32 	%r95, -6;
	mov.u64 	%rd24, %rd12;

BB50_6:
	.pragma "nounroll";
	mov.u64 	%rd5, %rd24;
	ld.const.u32 	%r52, [%rd23];
	// inline asm
	{
	mad.lo.cc.u32   %r50, %r52, %r8, %r96;
	madc.hi.u32     %r96, %r52, %r8,  0;
	}
	// inline asm
	st.local.u32 	[%rd5], %r50;
	add.s64 	%rd6, %rd5, 4;
	add.s64 	%rd23, %rd23, 4;
	add.s32 	%r95, %r95, 1;
	setp.ne.s32	%p4, %r95, 0;
	mov.u64 	%rd24, %rd6;
	@%p4 bra 	BB50_6;

	and.b32  	%r55, %r7, 255;
	add.s32 	%r56, %r55, -128;
	shr.u32 	%r57, %r56, 5;
	and.b32  	%r13, %r6, -2147483648;
	st.local.u32 	[%rd2], %r96;
	mov.u32 	%r58, 6;
	sub.s32 	%r59, %r58, %r57;
	cvta.to.local.u64 	%rd19, %rd11;
	mul.wide.s32 	%rd20, %r59, 4;
	add.s64 	%rd8, %rd19, %rd20;
	ld.local.u32 	%r97, [%rd8];
	ld.local.u32 	%r98, [%rd8+-4];
	and.b32  	%r16, %r7, 31;
	setp.eq.s32	%p5, %r16, 0;
	@%p5 bra 	BB50_9;

	mov.u32 	%r60, 32;
	sub.s32 	%r61, %r60, %r16;
	shr.u32 	%r62, %r98, %r61;
	shl.b32 	%r63, %r97, %r16;
	add.s32 	%r97, %r62, %r63;
	ld.local.u32 	%r64, [%rd8+-8];
	shr.u32 	%r65, %r64, %r61;
	shl.b32 	%r66, %r98, %r16;
	add.s32 	%r98, %r65, %r66;

BB50_9:
	shr.u32 	%r67, %r98, 30;
	shl.b32 	%r68, %r97, 2;
	add.s32 	%r99, %r67, %r68;
	shl.b32 	%r22, %r98, 2;
	shr.u32 	%r69, %r99, 31;
	shr.u32 	%r70, %r97, 30;
	add.s32 	%r23, %r69, %r70;
	setp.eq.s32	%p6, %r69, 0;
	mov.u32 	%r100, %r13;
	mov.u32 	%r101, %r22;
	@%p6 bra 	BB50_11;

	not.b32 	%r71, %r99;
	neg.s32 	%r24, %r22;
	setp.eq.s32	%p7, %r22, 0;
	selp.u32	%r72, 1, 0, %p7;
	add.s32 	%r99, %r72, %r71;
	xor.b32  	%r26, %r13, -2147483648;
	mov.u32 	%r100, %r26;
	mov.u32 	%r101, %r24;

BB50_11:
	mov.u32 	%r28, %r100;
	neg.s32 	%r73, %r23;
	setp.eq.s32	%p8, %r13, 0;
	selp.b32	%r104, %r23, %r73, %p8;
	clz.b32 	%r103, %r99;
	setp.eq.s32	%p9, %r103, 0;
	shl.b32 	%r74, %r99, %r103;
	mov.u32 	%r75, 32;
	sub.s32 	%r76, %r75, %r103;
	shr.u32 	%r77, %r101, %r76;
	add.s32 	%r78, %r77, %r74;
	selp.b32	%r32, %r99, %r78, %p9;
	mov.u32 	%r79, -921707870;
	mul.hi.u32 	%r102, %r32, %r79;
	setp.lt.s32	%p10, %r102, 1;
	@%p10 bra 	BB50_13;

	mul.lo.s32 	%r80, %r32, -921707870;
	shr.u32 	%r81, %r80, 31;
	shl.b32 	%r82, %r102, 1;
	add.s32 	%r102, %r81, %r82;
	add.s32 	%r103, %r103, 1;

BB50_13:
	mov.u32 	%r83, 126;
	sub.s32 	%r84, %r83, %r103;
	shl.b32 	%r85, %r84, 23;
	add.s32 	%r86, %r102, 1;
	shr.u32 	%r87, %r86, 7;
	add.s32 	%r88, %r87, 1;
	shr.u32 	%r89, %r88, 1;
	add.s32 	%r90, %r89, %r85;
	or.b32  	%r91, %r90, %r28;
	mov.b32 	 %f31, %r91;

BB50_14:
	mul.f32 	%f21, %f31, %f31;
	mov.f32 	%f22, 0fBF52B7F4;
	mov.f32 	%f23, 0f3B86D46D;
	fma.rn.f32 	%f24, %f23, %f21, %f22;
	add.f32 	%f25, %f21, 0fC01E09D0;
	rcp.rn.f32 	%f26, %f25;
	mul.f32 	%f27, %f24, %f26;
	mul.f32 	%f28, %f21, %f27;
	fma.rn.f32 	%f32, %f28, %f31, %f31;
	and.b32  	%r92, %r104, 1;
	setp.eq.b32	%p11, %r92, 1;
	@!%p11 bra 	BB50_16;
	bra.uni 	BB50_15;

BB50_15:
	mov.f32 	%f29, 0fBF800000;
	div.rn.f32 	%f32, %f29, %f32;

BB50_16:
	mul.lo.s32 	%r93, %r94, %r41;
	mul.wide.s32 	%rd21, %r93, 4;
	add.s64 	%rd22, %rd1, %rd21;
	st.global.f32 	[%rd22], %f32;
	add.s32 	%r94, %r3, %r94;
	setp.lt.s32	%p12, %r94, %r40;
	@%p12 bra 	BB50_2;

BB50_17:
	ret;
}

	// .globl	map_tanh_float
.visible .entry map_tanh_float(
	.param .u32 map_tanh_float_param_0,
	.param .u64 map_tanh_float_param_1,
	.param .u32 map_tanh_float_param_2,
	.param .u64 map_tanh_float_param_3,
	.param .u32 map_tanh_float_param_4
)
{
	.reg .pred 	%p<6>;
	.reg .f32 	%f<33>;
	.reg .b32 	%r<20>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r6, [map_tanh_float_param_0];
	ld.param.u64 	%rd3, [map_tanh_float_param_1];
	ld.param.u32 	%r7, [map_tanh_float_param_2];
	ld.param.u64 	%rd4, [map_tanh_float_param_3];
	ld.param.u32 	%r8, [map_tanh_float_param_4];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r19, %r1, %r9, %r10;
	setp.ge.s32	%p1, %r19, %r6;
	@%p1 bra 	BB51_6;

	cvta.to.global.u64 	%rd1, %rd3;
	cvta.to.global.u64 	%rd2, %rd4;
	mov.u32 	%r11, %nctaid.x;
	mul.lo.s32 	%r3, %r11, %r1;

BB51_2:
	mul.lo.s32 	%r12, %r19, %r8;
	mul.wide.s32 	%rd5, %r12, 4;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.f32 	%f1, [%rd6];
	abs.f32 	%f2, %f1;
	setp.ltu.f32	%p2, %f2, 0f3F0CCCCD;
	@%p2 bra 	BB51_4;
	bra.uni 	BB51_3;

BB51_4:
	mul.f32 	%f21, %f1, %f1;
	mov.f32 	%f22, 0fBD57BE66;
	mov.f32 	%f23, 0f3C86A81B;
	fma.rn.f32 	%f24, %f23, %f21, %f22;
	mov.f32 	%f25, 0f3E08677B;
	fma.rn.f32 	%f26, %f24, %f21, %f25;
	mov.f32 	%f27, 0fBEAAAA29;
	fma.rn.f32 	%f28, %f26, %f21, %f27;
	mul.f32 	%f29, %f21, %f28;
	fma.rn.f32 	%f30, %f29, %f1, %f1;
	add.f32 	%f31, %f1, %f1;
	setp.eq.f32	%p4, %f1, 0f00000000;
	selp.f32	%f32, %f31, %f30, %p4;
	bra.uni 	BB51_5;

BB51_3:
	add.f32 	%f10, %f2, %f2;
	mul.f32 	%f11, %f10, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f12, %f11;
	mov.f32 	%f13, 0fBF317200;
	fma.rn.f32 	%f14, %f12, %f13, %f10;
	mov.f32 	%f15, 0fB5BFBE8E;
	fma.rn.f32 	%f16, %f12, %f15, %f14;
	mul.f32 	%f7, %f16, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f6,%f7;
	// inline asm
	ex2.approx.f32 	%f17, %f12;
	mov.f32 	%f18, 0f3F800000;
	fma.rn.f32 	%f9, %f6, %f17, %f18;
	// inline asm
	rcp.approx.ftz.f32 %f8,%f9;
	// inline asm
	mov.f32 	%f19, 0fC0000000;
	fma.rn.f32 	%f20, %f8, %f19, %f18;
	mov.b32 	 %r13, %f20;
	setp.ltu.f32	%p3, %f2, 0f42B00000;
	selp.b32	%r14, %r13, 1065353216, %p3;
	mov.b32 	 %r15, %f1;
	and.b32  	%r16, %r15, -2147483648;
	or.b32  	%r17, %r14, %r16;
	mov.b32 	 %f32, %r17;

BB51_5:
	mul.lo.s32 	%r18, %r19, %r7;
	mul.wide.s32 	%rd7, %r18, 4;
	add.s64 	%rd8, %rd1, %rd7;
	st.global.f32 	[%rd8], %f32;
	add.s32 	%r19, %r3, %r19;
	setp.lt.s32	%p5, %r19, %r6;
	@%p5 bra 	BB51_2;

BB51_6:
	ret;
}

	// .globl	map_tgamma_float
.visible .entry map_tgamma_float(
	.param .u32 map_tgamma_float_param_0,
	.param .u64 map_tgamma_float_param_1,
	.param .u32 map_tgamma_float_param_2,
	.param .u64 map_tgamma_float_param_3,
	.param .u32 map_tgamma_float_param_4
)
{
	.reg .pred 	%p<20>;
	.reg .f32 	%f<101>;
	.reg .b32 	%r<17>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r6, [map_tgamma_float_param_0];
	ld.param.u64 	%rd3, [map_tgamma_float_param_1];
	ld.param.u32 	%r7, [map_tgamma_float_param_2];
	ld.param.u64 	%rd4, [map_tgamma_float_param_3];
	ld.param.u32 	%r8, [map_tgamma_float_param_4];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r16, %r1, %r9, %r10;
	setp.ge.s32	%p1, %r16, %r6;
	@%p1 bra 	BB52_12;

	cvta.to.global.u64 	%rd1, %rd3;
	cvta.to.global.u64 	%rd2, %rd4;
	mov.u32 	%r11, %nctaid.x;
	mul.lo.s32 	%r3, %r11, %r1;

BB52_2:
	mul.lo.s32 	%r12, %r16, %r8;
	mul.wide.s32 	%rd5, %r12, 4;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.f32 	%f1, [%rd6];
	setp.ltu.f32	%p2, %f1, 0f00000000;
	@%p2 bra 	BB52_6;
	bra.uni 	BB52_3;

BB52_6:
	cvt.rmi.f32.f32	%f50, %f1;
	setp.eq.f32	%p10, %f50, %f1;
	selp.f32	%f51, 0f7FFFFFFF, %f1, %p10;
	setp.lt.f32	%p11, %f51, 0fC2246666;
	selp.f32	%f14, 0fC2246666, %f51, %p11;
	setp.lt.f32	%p12, %f14, 0fC2081EB8;
	add.f32 	%f52, %f14, 0f40C00000;
	selp.f32	%f99, %f52, %f14, %p12;
	setp.geu.f32	%p13, %f99, 0fBF000000;
	mov.f32 	%f98, %f99;
	mov.f32 	%f97, %f99;
	mov.f32 	%f96, %f99;
	@%p13 bra 	BB52_8;

BB52_7:
	add.f32 	%f98, %f98, 0f3F800000;
	mul.f32 	%f99, %f99, %f98;
	setp.lt.f32	%p14, %f98, 0fBF000000;
	mov.f32 	%f97, %f99;
	mov.f32 	%f96, %f98;
	@%p14 bra 	BB52_7;

BB52_8:
	mov.f32 	%f53, 0f3BE86AA4;
	mov.f32 	%f54, 0fBA8AA19E;
	fma.rn.f32 	%f55, %f54, %f96, %f53;
	mov.f32 	%f56, 0fBC1E2998;
	fma.rn.f32 	%f57, %f55, %f96, %f56;
	mov.f32 	%f58, 0fBD2CBE4A;
	fma.rn.f32 	%f59, %f57, %f96, %f58;
	mov.f32 	%f60, 0f3E2A8A17;
	fma.rn.f32 	%f61, %f59, %f96, %f60;
	mov.f32 	%f62, 0fBD2C0CBB;
	fma.rn.f32 	%f63, %f61, %f96, %f62;
	mov.f32 	%f64, 0fBF27E7A3;
	fma.rn.f32 	%f65, %f63, %f96, %f64;
	mov.f32 	%f66, 0f3F13C468;
	fma.rn.f32 	%f67, %f65, %f96, %f66;
	mov.f32 	%f68, 0f3F800000;
	fma.rn.f32 	%f69, %f67, %f96, %f68;
	mul.f32 	%f70, %f97, %f69;
	rcp.rn.f32 	%f100, %f70;
	setp.geu.f32	%p15, %f14, 0fC2081EB8;
	@%p15 bra 	BB52_11;

	add.f32 	%f71, %f14, 0f3F800000;
	mul.f32 	%f72, %f14, %f71;
	add.f32 	%f73, %f14, 0f40000000;
	mul.f32 	%f74, %f73, %f72;
	add.f32 	%f75, %f14, 0f40400000;
	mul.f32 	%f76, %f75, %f74;
	add.f32 	%f77, %f14, 0f40800000;
	mul.f32 	%f78, %f77, %f76;
	add.f32 	%f79, %f14, 0f40A00000;
	mul.f32 	%f80, %f79, %f78;
	rcp.rn.f32 	%f81, %f80;
	mul.f32 	%f100, %f100, %f81;
	setp.geu.f32	%p16, %f1, 0fC2280000;
	@%p16 bra 	BB52_11;

	cvt.rzi.s32.f32	%r13, %f1;
	and.b32  	%r14, %r13, 1;
	setp.eq.b32	%p17, %r14, 1;
	not.pred 	%p18, %p17;
	selp.f32	%f100, 0f80000000, %f100, %p18;
	bra.uni 	BB52_11;

BB52_3:
	setp.gt.f32	%p3, %f1, 0f42100000;
	selp.f32	%f2, 0f42100000, %f1, %p3;
	setp.gt.f32	%p4, %f2, 0f42081EB8;
	add.f32 	%f3, %f2, 0fBF800000;
	selp.f32	%f88, %f3, %f2, %p4;
	add.f32 	%f90, %f88, 0fBF800000;
	mov.f32 	%f27, 0f3F800000;
	mov.f32 	%f84, %f27;
	setp.leu.f32	%p5, %f88, 0f3FC00000;
	mov.f32 	%f83, %f27;
	mov.f32 	%f89, %f90;
	@%p5 bra 	BB52_5;

BB52_4:
	mov.f32 	%f88, %f90;
	mul.f32 	%f84, %f88, %f84;
	add.f32 	%f90, %f88, 0fBF800000;
	setp.gt.f32	%p6, %f88, 0f3FC00000;
	mov.f32 	%f82, %f84;
	mov.f32 	%f83, %f82;
	mov.f32 	%f89, %f90;
	@%p6 bra 	BB52_4;

BB52_5:
	mov.f32 	%f11, %f83;
	setp.ltu.f32	%p7, %f2, 0f3F000000;
	selp.f32	%f28, %f88, %f89, %p7;
	mov.f32 	%f29, 0f3BE86AA4;
	mov.f32 	%f30, 0fBA8AA19E;
	fma.rn.f32 	%f31, %f30, %f28, %f29;
	mov.f32 	%f32, 0fBC1E2998;
	fma.rn.f32 	%f33, %f31, %f28, %f32;
	mov.f32 	%f34, 0fBD2CBE4A;
	fma.rn.f32 	%f35, %f33, %f28, %f34;
	mov.f32 	%f36, 0f3E2A8A17;
	fma.rn.f32 	%f37, %f35, %f28, %f36;
	mov.f32 	%f38, 0fBD2C0CBB;
	fma.rn.f32 	%f39, %f37, %f28, %f38;
	mov.f32 	%f40, 0fBF27E7A3;
	fma.rn.f32 	%f41, %f39, %f28, %f40;
	mov.f32 	%f42, 0f3F13C468;
	fma.rn.f32 	%f43, %f41, %f28, %f42;
	fma.rn.f32 	%f45, %f43, %f28, %f27;
	mul.f32 	%f46, %f2, %f45;
	setp.lt.f32	%p8, %f2, 0f3F000000;
	selp.f32	%f47, %f46, %f45, %p8;
	div.approx.f32 	%f48, %f11, %f47;
	mul.f32 	%f49, %f3, %f48;
	selp.f32	%f100, %f49, %f48, %p4;

BB52_11:
	mul.lo.s32 	%r15, %r16, %r7;
	mul.wide.s32 	%rd7, %r15, 4;
	add.s64 	%rd8, %rd1, %rd7;
	st.global.f32 	[%rd8], %f100;
	add.s32 	%r16, %r3, %r16;
	setp.lt.s32	%p19, %r16, %r6;
	@%p19 bra 	BB52_2;

BB52_12:
	ret;
}

	// .globl	map_trunc_float
.visible .entry map_trunc_float(
	.param .u32 map_trunc_float_param_0,
	.param .u64 map_trunc_float_param_1,
	.param .u32 map_trunc_float_param_2,
	.param .u64 map_trunc_float_param_3,
	.param .u32 map_trunc_float_param_4
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<15>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r6, [map_trunc_float_param_0];
	ld.param.u64 	%rd3, [map_trunc_float_param_1];
	ld.param.u32 	%r7, [map_trunc_float_param_2];
	ld.param.u64 	%rd4, [map_trunc_float_param_3];
	ld.param.u32 	%r8, [map_trunc_float_param_4];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r14, %r1, %r9, %r10;
	setp.ge.s32	%p1, %r14, %r6;
	@%p1 bra 	BB53_3;

	cvta.to.global.u64 	%rd1, %rd3;
	cvta.to.global.u64 	%rd2, %rd4;
	mov.u32 	%r11, %nctaid.x;
	mul.lo.s32 	%r3, %r11, %r1;

BB53_2:
	mul.lo.s32 	%r12, %r14, %r8;
	mul.wide.s32 	%rd5, %r12, 4;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.f32 	%f1, [%rd6];
	cvt.rzi.f32.f32	%f2, %f1;
	mul.lo.s32 	%r13, %r14, %r7;
	mul.wide.s32 	%rd7, %r13, 4;
	add.s64 	%rd8, %rd1, %rd7;
	st.global.f32 	[%rd8], %f2;
	add.s32 	%r14, %r3, %r14;
	setp.lt.s32	%p2, %r14, %r6;
	@%p2 bra 	BB53_2;

BB53_3:
	ret;
}

	// .globl	map_y0_float
.visible .entry map_y0_float(
	.param .u32 map_y0_float_param_0,
	.param .u64 map_y0_float_param_1,
	.param .u32 map_y0_float_param_2,
	.param .u64 map_y0_float_param_3,
	.param .u32 map_y0_float_param_4
)
{
	.local .align 4 .b8 	__local_depot54[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<56>;
	.reg .f32 	%f<337>;
	.reg .b32 	%r<383>;
	.reg .b64 	%rd<62>;


	mov.u64 	%rd61, __local_depot54;
	cvta.local.u64 	%SP, %rd61;
	ld.param.u32 	%r144, [map_y0_float_param_0];
	ld.param.u64 	%rd25, [map_y0_float_param_1];
	ld.param.u32 	%r145, [map_y0_float_param_2];
	ld.param.u64 	%rd26, [map_y0_float_param_3];
	ld.param.u32 	%r146, [map_y0_float_param_4];
	mov.u32 	%r147, %ntid.x;
	mov.u32 	%r148, %ctaid.x;
	mov.u32 	%r149, %tid.x;
	mad.lo.s32 	%r342, %r147, %r148, %r149;
	setp.ge.s32	%p1, %r342, %r144;
	@%p1 bra 	BB54_83;

	cvta.to.global.u64 	%rd27, %rd26;
	cvta.to.global.u64 	%rd50, %rd25;
	bra.uni 	BB54_2;

BB54_72:
	mov.f32 	%f308, 0fBAB6061A;
	mov.f32 	%f309, 0f37CCF5CE;
	fma.rn.f32 	%f333, %f309, %f51, %f308;

BB54_74:
	@%p50 bra 	BB54_76;
	bra.uni 	BB54_75;

BB54_76:
	mov.f32 	%f315, 0fBE2AAAA3;
	fma.rn.f32 	%f316, %f333, %f51, %f315;
	mov.f32 	%f317, 0f00000000;
	fma.rn.f32 	%f334, %f316, %f51, %f317;
	bra.uni 	BB54_77;

BB54_75:
	mov.f32 	%f312, 0f3D2AAAA5;
	fma.rn.f32 	%f313, %f333, %f51, %f312;
	mov.f32 	%f314, 0fBF000000;
	fma.rn.f32 	%f334, %f313, %f51, %f314;

BB54_77:
	fma.rn.f32 	%f335, %f334, %f332, %f332;
	@%p50 bra 	BB54_79;

	fma.rn.f32 	%f335, %f334, %f51, %f275;

BB54_79:
	and.b32  	%r338, %r141, 2;
	setp.eq.s32	%p53, %r338, 0;
	@%p53 bra 	BB54_81;

	mov.f32 	%f319, 0f00000000;
	mov.f32 	%f320, 0fBF800000;
	fma.rn.f32 	%f335, %f335, %f320, %f319;

BB54_81:
	mul.f32 	%f336, %f41, %f335;
	bra.uni 	BB54_82;

BB54_2:
	mul.lo.s32 	%r150, %r342, %r146;
	mul.wide.s32 	%rd28, %r150, 4;
	add.s64 	%rd29, %rd27, %rd28;
	ld.global.f32 	%f1, [%rd29];
	abs.f32 	%f2, %f1;
	setp.gtu.f32	%p2, %f2, 0f3EE4C176;
	@%p2 bra 	BB54_42;
	bra.uni 	BB54_3;

BB54_42:
	setp.gtu.f32	%p29, %f2, 0f3FF67AF8;
	@%p29 bra 	BB54_44;
	bra.uni 	BB54_43;

BB54_44:
	setp.gtu.f32	%p30, %f2, 0f40B0B31E;
	@%p30 bra 	BB54_46;
	bra.uni 	BB54_45;

BB54_46:
	setp.gtu.f32	%p31, %f2, 0f410A7798;
	@%p31 bra 	BB54_48;
	bra.uni 	BB54_47;

BB54_48:
	abs.f32 	%f266, %f2;
	mov.f32 	%f336, 0f00000000;
	setp.eq.f32	%p32, %f266, 0f7F800000;
	@%p32 bra 	BB54_82;

	// inline asm
	rcp.approx.ftz.f32 %f267,%f2;
	// inline asm
	mul.f32 	%f269, %f267, %f267;
	mov.f32 	%f270, 0f3DD0D5F0;
	mov.f32 	%f271, 0fBECC69F3;
	fma.rn.f32 	%f272, %f271, %f269, %f270;
	mov.f32 	%f273, 0fBD7FF855;
	fma.rn.f32 	%f274, %f272, %f269, %f273;
	mov.f32 	%f275, 0f3F800000;
	fma.rn.f32 	%f276, %f274, %f269, %f275;
	mov.f32 	%f277, 0fBE50D31C;
	mov.f32 	%f278, 0f3F8CCD61;
	fma.rn.f32 	%f279, %f278, %f269, %f277;
	mov.f32 	%f280, 0f3D854783;
	fma.rn.f32 	%f281, %f279, %f269, %f280;
	mov.f32 	%f282, 0fBDFFFFFB;
	fma.rn.f32 	%f283, %f281, %f269, %f282;
	fma.rn.f32 	%f40, %f283, %f267, %f2;
	rsqrt.approx.f32 	%f284, %f2;
	mul.f32 	%f285, %f284, 0f3F4C422A;
	mul.f32 	%f41, %f276, %f285;
	mul.f32 	%f286, %f40, 0f3F22F983;
	cvt.rni.s32.f32	%r372, %f286;
	cvt.rn.f32.s32	%f287, %r372;
	neg.f32 	%f288, %f287;
	mov.f32 	%f289, 0f3FC90FDA;
	fma.rn.f32 	%f290, %f288, %f289, %f40;
	mov.f32 	%f291, 0f33A22168;
	fma.rn.f32 	%f292, %f288, %f291, %f290;
	mov.f32 	%f293, 0f27C234C5;
	fma.rn.f32 	%f330, %f288, %f293, %f292;
	abs.f32 	%f294, %f40;
	setp.leu.f32	%p33, %f294, 0f47CE4780;
	@%p33 bra 	BB54_59;

	mov.b32 	 %r74, %f40;
	shr.u32 	%r75, %r74, 23;
	shl.b32 	%r249, %r74, 8;
	or.b32  	%r76, %r249, -2147483648;
	add.u64 	%rd41, %SP, 0;
	cvta.to.local.u64 	%rd58, %rd41;
	mov.u32 	%r364, 0;
	mov.u64 	%rd57, __cudart_i2opi_f;
	mov.u32 	%r363, -6;

BB54_51:
	.pragma "nounroll";
	ld.const.u32 	%r252, [%rd57];
	// inline asm
	{
	mad.lo.cc.u32   %r250, %r252, %r76, %r364;
	madc.hi.u32     %r364, %r252, %r76,  0;
	}
	// inline asm
	st.local.u32 	[%rd58], %r250;
	add.s64 	%rd58, %rd58, 4;
	add.s64 	%rd57, %rd57, 4;
	add.s32 	%r363, %r363, 1;
	setp.ne.s32	%p34, %r363, 0;
	@%p34 bra 	BB54_51;

	and.b32  	%r255, %r75, 255;
	add.s32 	%r256, %r255, -128;
	shr.u32 	%r257, %r256, 5;
	and.b32  	%r81, %r74, -2147483648;
	cvta.to.local.u64 	%rd43, %rd41;
	st.local.u32 	[%rd43+24], %r364;
	mov.u32 	%r258, 6;
	sub.s32 	%r259, %r258, %r257;
	mul.wide.s32 	%rd44, %r259, 4;
	add.s64 	%rd18, %rd43, %rd44;
	ld.local.u32 	%r365, [%rd18];
	ld.local.u32 	%r366, [%rd18+-4];
	and.b32  	%r84, %r75, 31;
	setp.eq.s32	%p35, %r84, 0;
	@%p35 bra 	BB54_54;

	mov.u32 	%r260, 32;
	sub.s32 	%r261, %r260, %r84;
	shr.u32 	%r262, %r366, %r261;
	shl.b32 	%r263, %r365, %r84;
	add.s32 	%r365, %r262, %r263;
	ld.local.u32 	%r264, [%rd18+-8];
	shr.u32 	%r265, %r264, %r261;
	shl.b32 	%r266, %r366, %r84;
	add.s32 	%r366, %r265, %r266;

BB54_54:
	shr.u32 	%r267, %r366, 30;
	shl.b32 	%r268, %r365, 2;
	add.s32 	%r367, %r267, %r268;
	shl.b32 	%r90, %r366, 2;
	shr.u32 	%r269, %r367, 31;
	shr.u32 	%r270, %r365, 30;
	add.s32 	%r91, %r269, %r270;
	setp.eq.s32	%p36, %r269, 0;
	mov.u32 	%r368, %r81;
	mov.u32 	%r369, %r90;
	@%p36 bra 	BB54_56;

	not.b32 	%r271, %r367;
	neg.s32 	%r92, %r90;
	setp.eq.s32	%p37, %r90, 0;
	selp.u32	%r272, 1, 0, %p37;
	add.s32 	%r367, %r272, %r271;
	xor.b32  	%r94, %r81, -2147483648;
	mov.u32 	%r368, %r94;
	mov.u32 	%r369, %r92;

BB54_56:
	mov.u32 	%r96, %r368;
	neg.s32 	%r273, %r91;
	setp.eq.s32	%p38, %r81, 0;
	selp.b32	%r372, %r91, %r273, %p38;
	clz.b32 	%r371, %r367;
	setp.eq.s32	%p39, %r371, 0;
	shl.b32 	%r274, %r367, %r371;
	mov.u32 	%r275, 32;
	sub.s32 	%r276, %r275, %r371;
	shr.u32 	%r277, %r369, %r276;
	add.s32 	%r278, %r277, %r274;
	selp.b32	%r100, %r367, %r278, %p39;
	mov.u32 	%r279, -921707870;
	mul.hi.u32 	%r370, %r100, %r279;
	setp.lt.s32	%p40, %r370, 1;
	@%p40 bra 	BB54_58;

	mul.lo.s32 	%r280, %r100, -921707870;
	shr.u32 	%r281, %r280, 31;
	shl.b32 	%r282, %r370, 1;
	add.s32 	%r370, %r281, %r282;
	add.s32 	%r371, %r371, 1;

BB54_58:
	mov.u32 	%r283, 126;
	sub.s32 	%r284, %r283, %r371;
	shl.b32 	%r285, %r284, 23;
	add.s32 	%r286, %r370, 1;
	shr.u32 	%r287, %r286, 7;
	add.s32 	%r288, %r287, 1;
	shr.u32 	%r289, %r288, 1;
	add.s32 	%r290, %r289, %r285;
	or.b32  	%r291, %r290, %r96;
	mov.b32 	 %f330, %r291;

BB54_59:
	and.b32  	%r292, %r372, 3;
	cvt.rn.f32.s32	%f295, %r292;
	add.f32 	%f296, %f330, 0fC016CBE4;
	fma.rn.f32 	%f331, %f295, 0f3FC90FDB, %f296;
	abs.f32 	%f297, %f331;
	setp.neu.f32	%p41, %f297, 0f7F800000;
	@%p41 bra 	BB54_61;

	mov.f32 	%f298, 0f00000000;
	mul.rn.f32 	%f331, %f331, %f298;

BB54_61:
	mul.f32 	%f299, %f331, 0f3F22F983;
	cvt.rni.s32.f32	%r382, %f299;
	cvt.rn.f32.s32	%f300, %r382;
	neg.f32 	%f301, %f300;
	fma.rn.f32 	%f303, %f301, %f289, %f331;
	fma.rn.f32 	%f305, %f301, %f291, %f303;
	fma.rn.f32 	%f332, %f301, %f293, %f305;
	abs.f32 	%f307, %f331;
	setp.leu.f32	%p42, %f307, 0f47CE4780;
	@%p42 bra 	BB54_71;

	mov.b32 	 %r108, %f331;
	shr.u32 	%r109, %r108, 23;
	shl.b32 	%r295, %r108, 8;
	or.b32  	%r110, %r295, -2147483648;
	add.u64 	%rd46, %SP, 0;
	cvta.to.local.u64 	%rd60, %rd46;
	mov.u32 	%r374, 0;
	mov.u64 	%rd59, __cudart_i2opi_f;
	mov.u32 	%r373, -6;

BB54_63:
	.pragma "nounroll";
	ld.const.u32 	%r298, [%rd59];
	// inline asm
	{
	mad.lo.cc.u32   %r296, %r298, %r110, %r374;
	madc.hi.u32     %r374, %r298, %r110,  0;
	}
	// inline asm
	st.local.u32 	[%rd60], %r296;
	add.s64 	%rd60, %rd60, 4;
	add.s64 	%rd59, %rd59, 4;
	add.s32 	%r373, %r373, 1;
	setp.ne.s32	%p43, %r373, 0;
	@%p43 bra 	BB54_63;

	and.b32  	%r301, %r109, 255;
	add.s32 	%r302, %r301, -128;
	shr.u32 	%r303, %r302, 5;
	and.b32  	%r115, %r108, -2147483648;
	cvta.to.local.u64 	%rd48, %rd46;
	st.local.u32 	[%rd48+24], %r374;
	mov.u32 	%r304, 6;
	sub.s32 	%r305, %r304, %r303;
	mul.wide.s32 	%rd49, %r305, 4;
	add.s64 	%rd24, %rd48, %rd49;
	ld.local.u32 	%r375, [%rd24];
	ld.local.u32 	%r376, [%rd24+-4];
	and.b32  	%r118, %r109, 31;
	setp.eq.s32	%p44, %r118, 0;
	@%p44 bra 	BB54_66;

	mov.u32 	%r306, 32;
	sub.s32 	%r307, %r306, %r118;
	shr.u32 	%r308, %r376, %r307;
	shl.b32 	%r309, %r375, %r118;
	add.s32 	%r375, %r308, %r309;
	ld.local.u32 	%r310, [%rd24+-8];
	shr.u32 	%r311, %r310, %r307;
	shl.b32 	%r312, %r376, %r118;
	add.s32 	%r376, %r311, %r312;

BB54_66:
	shr.u32 	%r313, %r376, 30;
	shl.b32 	%r314, %r375, 2;
	add.s32 	%r377, %r313, %r314;
	shl.b32 	%r124, %r376, 2;
	shr.u32 	%r315, %r377, 31;
	shr.u32 	%r316, %r375, 30;
	add.s32 	%r125, %r315, %r316;
	setp.eq.s32	%p45, %r315, 0;
	mov.u32 	%r378, %r115;
	mov.u32 	%r379, %r124;
	@%p45 bra 	BB54_68;

	not.b32 	%r317, %r377;
	neg.s32 	%r126, %r124;
	setp.eq.s32	%p46, %r124, 0;
	selp.u32	%r318, 1, 0, %p46;
	add.s32 	%r377, %r318, %r317;
	xor.b32  	%r128, %r115, -2147483648;
	mov.u32 	%r378, %r128;
	mov.u32 	%r379, %r126;

BB54_68:
	mov.u32 	%r130, %r378;
	neg.s32 	%r319, %r125;
	setp.eq.s32	%p47, %r115, 0;
	selp.b32	%r382, %r125, %r319, %p47;
	clz.b32 	%r381, %r377;
	setp.eq.s32	%p48, %r381, 0;
	shl.b32 	%r320, %r377, %r381;
	mov.u32 	%r321, 32;
	sub.s32 	%r322, %r321, %r381;
	shr.u32 	%r323, %r379, %r322;
	add.s32 	%r324, %r323, %r320;
	selp.b32	%r134, %r377, %r324, %p48;
	mov.u32 	%r325, -921707870;
	mul.hi.u32 	%r380, %r134, %r325;
	setp.lt.s32	%p49, %r380, 1;
	@%p49 bra 	BB54_70;

	mul.lo.s32 	%r326, %r134, -921707870;
	shr.u32 	%r327, %r326, 31;
	shl.b32 	%r328, %r380, 1;
	add.s32 	%r380, %r327, %r328;
	add.s32 	%r381, %r381, 1;

BB54_70:
	mov.u32 	%r329, 126;
	sub.s32 	%r330, %r329, %r381;
	shl.b32 	%r331, %r330, 23;
	add.s32 	%r332, %r380, 1;
	shr.u32 	%r333, %r332, 7;
	add.s32 	%r334, %r333, 1;
	shr.u32 	%r335, %r334, 1;
	add.s32 	%r336, %r335, %r331;
	or.b32  	%r337, %r336, %r130;
	mov.b32 	 %f332, %r337;

BB54_71:
	mul.rn.f32 	%f51, %f332, %f332;
	add.s32 	%r141, %r382, 1;
	and.b32  	%r142, %r141, 1;
	setp.eq.s32	%p50, %r142, 0;
	@%p50 bra 	BB54_73;
	bra.uni 	BB54_72;

BB54_73:
	mov.f32 	%f310, 0f3C08839E;
	mov.f32 	%f311, 0fB94CA1F9;
	fma.rn.f32 	%f333, %f311, %f51, %f310;
	bra.uni 	BB54_74;

BB54_3:
	mul.f32 	%f65, %f2, %f2;
	mov.f32 	%f66, 0fB71F49B6;
	mov.f32 	%f67, 0f33DBE5AC;
	fma.rn.f32 	%f68, %f67, %f65, %f66;
	mov.f32 	%f69, 0f3A0D3100;
	fma.rn.f32 	%f70, %f68, %f65, %f69;
	mov.f32 	%f71, 0fBC83AD8E;
	fma.rn.f32 	%f72, %f70, %f65, %f71;
	mov.f32 	%f73, 0f3E35DE5A;
	fma.rn.f32 	%f74, %f72, %f65, %f73;
	mov.f32 	%f75, 0fBD9726B5;
	fma.rn.f32 	%f3, %f74, %f65, %f75;
	mul.f32 	%f76, %f2, 0f4B000000;
	setp.lt.f32	%p3, %f2, 0f00800000;
	selp.f32	%f4, %f76, %f2, %p3;
	selp.f32	%f77, 0fC1B80000, 0f00000000, %p3;
	mov.b32 	 %r151, %f4;
	add.s32 	%r152, %r151, -1059760811;
	and.b32  	%r153, %r152, -8388608;
	sub.s32 	%r154, %r151, %r153;
	mov.b32 	 %f78, %r154;
	cvt.rn.f32.s32	%f79, %r153;
	mov.f32 	%f80, 0f34000000;
	fma.rn.f32 	%f81, %f79, %f80, %f77;
	add.f32 	%f82, %f78, 0fBF800000;
	mov.f32 	%f83, 0f3E1039F6;
	mov.f32 	%f84, 0fBE055027;
	fma.rn.f32 	%f85, %f84, %f82, %f83;
	mov.f32 	%f86, 0fBDF8CDCC;
	fma.rn.f32 	%f87, %f85, %f82, %f86;
	mov.f32 	%f88, 0f3E0F2955;
	fma.rn.f32 	%f89, %f87, %f82, %f88;
	mov.f32 	%f90, 0fBE2AD8B9;
	fma.rn.f32 	%f91, %f89, %f82, %f90;
	mov.f32 	%f92, 0f3E4CED0B;
	fma.rn.f32 	%f93, %f91, %f82, %f92;
	mov.f32 	%f94, 0fBE7FFF22;
	fma.rn.f32 	%f95, %f93, %f82, %f94;
	mov.f32 	%f96, 0f3EAAAA78;
	fma.rn.f32 	%f97, %f95, %f82, %f96;
	mov.f32 	%f98, 0fBF000000;
	fma.rn.f32 	%f99, %f97, %f82, %f98;
	mul.f32 	%f100, %f82, %f99;
	fma.rn.f32 	%f101, %f100, %f82, %f82;
	mov.f32 	%f102, 0f3F317218;
	fma.rn.f32 	%f322, %f81, %f102, %f101;
	setp.lt.u32	%p4, %r151, 2139095040;
	@%p4 bra 	BB54_5;

	mov.f32 	%f103, 0f7F800000;
	fma.rn.f32 	%f322, %f4, %f103, %f103;

BB54_5:
	mul.f32 	%f104, %f322, 0f3F22F983;
	setp.eq.f32	%p5, %f4, 0f00000000;
	selp.f32	%f8, 0fFF800000, %f104, %p5;
	abs.f32 	%f9, %f2;
	setp.gtu.f32	%p6, %f9, 0f41000000;
	@%p6 bra 	BB54_7;
	bra.uni 	BB54_6;

BB54_7:
	abs.f32 	%f141, %f9;
	mov.f32 	%f329, 0f00000000;
	setp.eq.f32	%p7, %f141, 0f7F800000;
	@%p7 bra 	BB54_41;

	// inline asm
	rcp.approx.ftz.f32 %f142,%f9;
	// inline asm
	mul.f32 	%f144, %f142, %f142;
	mov.f32 	%f145, 0fBF03B7C2;
	mov.f32 	%f146, 0f4056FE93;
	fma.rn.f32 	%f147, %f146, %f144, %f145;
	mov.f32 	%f148, 0f3DD3B3F3;
	fma.rn.f32 	%f149, %f147, %f144, %f148;
	mov.f32 	%f150, 0fBD7FFFB6;
	fma.rn.f32 	%f151, %f149, %f144, %f150;
	mov.f32 	%f152, 0f3F800000;
	fma.rn.f32 	%f153, %f151, %f144, %f152;
	mov.f32 	%f154, 0fBE52412D;
	mov.f32 	%f155, 0f3F91E009;
	fma.rn.f32 	%f156, %f155, %f144, %f154;
	mov.f32 	%f157, 0f3D854ED1;
	fma.rn.f32 	%f158, %f156, %f144, %f157;
	mov.f32 	%f159, 0fBDFFFFFF;
	fma.rn.f32 	%f160, %f158, %f144, %f159;
	fma.rn.f32 	%f11, %f160, %f142, %f9;
	rsqrt.approx.f32 	%f161, %f9;
	mul.f32 	%f162, %f161, 0f3F4C422A;
	mul.f32 	%f12, %f153, %f162;
	mul.f32 	%f163, %f11, 0f3F22F983;
	cvt.rni.s32.f32	%r352, %f163;
	cvt.rn.f32.s32	%f164, %r352;
	neg.f32 	%f165, %f164;
	mov.f32 	%f166, 0f3FC90FDA;
	fma.rn.f32 	%f167, %f165, %f166, %f11;
	mov.f32 	%f168, 0f33A22168;
	fma.rn.f32 	%f169, %f165, %f168, %f167;
	mov.f32 	%f170, 0f27C234C5;
	fma.rn.f32 	%f323, %f165, %f170, %f169;
	abs.f32 	%f171, %f11;
	setp.leu.f32	%p8, %f171, 0f47CE4780;
	@%p8 bra 	BB54_18;

	mov.b32 	 %r4, %f11;
	shr.u32 	%r5, %r4, 23;
	shl.b32 	%r157, %r4, 8;
	or.b32  	%r6, %r157, -2147483648;
	add.u64 	%rd31, %SP, 0;
	cvta.to.local.u64 	%rd54, %rd31;
	mov.u32 	%r344, 0;
	mov.u64 	%rd53, __cudart_i2opi_f;
	mov.u32 	%r343, -6;

BB54_10:
	.pragma "nounroll";
	ld.const.u32 	%r160, [%rd53];
	// inline asm
	{
	mad.lo.cc.u32   %r158, %r160, %r6, %r344;
	madc.hi.u32     %r344, %r160, %r6,  0;
	}
	// inline asm
	st.local.u32 	[%rd54], %r158;
	add.s64 	%rd54, %rd54, 4;
	add.s64 	%rd53, %rd53, 4;
	add.s32 	%r343, %r343, 1;
	setp.ne.s32	%p9, %r343, 0;
	@%p9 bra 	BB54_10;

	and.b32  	%r163, %r5, 255;
	add.s32 	%r164, %r163, -128;
	shr.u32 	%r165, %r164, 5;
	and.b32  	%r11, %r4, -2147483648;
	cvta.to.local.u64 	%rd33, %rd31;
	st.local.u32 	[%rd33+24], %r344;
	mov.u32 	%r166, 6;
	sub.s32 	%r167, %r166, %r165;
	mul.wide.s32 	%rd34, %r167, 4;
	add.s64 	%rd6, %rd33, %rd34;
	ld.local.u32 	%r345, [%rd6];
	ld.local.u32 	%r346, [%rd6+-4];
	and.b32  	%r14, %r5, 31;
	setp.eq.s32	%p10, %r14, 0;
	@%p10 bra 	BB54_13;

	mov.u32 	%r168, 32;
	sub.s32 	%r169, %r168, %r14;
	shr.u32 	%r170, %r346, %r169;
	shl.b32 	%r171, %r345, %r14;
	add.s32 	%r345, %r170, %r171;
	ld.local.u32 	%r172, [%rd6+-8];
	shr.u32 	%r173, %r172, %r169;
	shl.b32 	%r174, %r346, %r14;
	add.s32 	%r346, %r173, %r174;

BB54_13:
	shr.u32 	%r175, %r346, 30;
	shl.b32 	%r176, %r345, 2;
	add.s32 	%r347, %r175, %r176;
	shl.b32 	%r20, %r346, 2;
	shr.u32 	%r177, %r347, 31;
	shr.u32 	%r178, %r345, 30;
	add.s32 	%r21, %r177, %r178;
	setp.eq.s32	%p11, %r177, 0;
	mov.u32 	%r348, %r11;
	mov.u32 	%r349, %r20;
	@%p11 bra 	BB54_15;

	not.b32 	%r179, %r347;
	neg.s32 	%r22, %r20;
	setp.eq.s32	%p12, %r20, 0;
	selp.u32	%r180, 1, 0, %p12;
	add.s32 	%r347, %r180, %r179;
	xor.b32  	%r24, %r11, -2147483648;
	mov.u32 	%r348, %r24;
	mov.u32 	%r349, %r22;

BB54_15:
	mov.u32 	%r26, %r348;
	neg.s32 	%r181, %r21;
	setp.eq.s32	%p13, %r11, 0;
	selp.b32	%r352, %r21, %r181, %p13;
	clz.b32 	%r351, %r347;
	setp.eq.s32	%p14, %r351, 0;
	shl.b32 	%r182, %r347, %r351;
	mov.u32 	%r183, 32;
	sub.s32 	%r184, %r183, %r351;
	shr.u32 	%r185, %r349, %r184;
	add.s32 	%r186, %r185, %r182;
	selp.b32	%r30, %r347, %r186, %p14;
	mov.u32 	%r187, -921707870;
	mul.hi.u32 	%r350, %r30, %r187;
	setp.lt.s32	%p15, %r350, 1;
	@%p15 bra 	BB54_17;

	mul.lo.s32 	%r188, %r30, -921707870;
	shr.u32 	%r189, %r188, 31;
	shl.b32 	%r190, %r350, 1;
	add.s32 	%r350, %r189, %r190;
	add.s32 	%r351, %r351, 1;

BB54_17:
	mov.u32 	%r191, 126;
	sub.s32 	%r192, %r191, %r351;
	shl.b32 	%r193, %r192, 23;
	add.s32 	%r194, %r350, 1;
	shr.u32 	%r195, %r194, 7;
	add.s32 	%r196, %r195, 1;
	shr.u32 	%r197, %r196, 1;
	add.s32 	%r198, %r197, %r193;
	or.b32  	%r199, %r198, %r26;
	mov.b32 	 %f323, %r199;

BB54_18:
	and.b32  	%r200, %r352, 3;
	cvt.rn.f32.s32	%f172, %r200;
	add.f32 	%f173, %f323, 0fBF490FDB;
	fma.rn.f32 	%f324, %f172, 0f3FC90FDB, %f173;
	abs.f32 	%f174, %f324;
	setp.neu.f32	%p16, %f174, 0f7F800000;
	@%p16 bra 	BB54_20;

	mov.f32 	%f175, 0f00000000;
	mul.rn.f32 	%f324, %f324, %f175;

BB54_20:
	mul.f32 	%f176, %f324, 0f3F22F983;
	cvt.rni.s32.f32	%r362, %f176;
	cvt.rn.f32.s32	%f177, %r362;
	neg.f32 	%f178, %f177;
	fma.rn.f32 	%f180, %f178, %f166, %f324;
	fma.rn.f32 	%f182, %f178, %f168, %f180;
	fma.rn.f32 	%f325, %f178, %f170, %f182;
	abs.f32 	%f184, %f324;
	setp.leu.f32	%p17, %f184, 0f47CE4780;
	@%p17 bra 	BB54_30;

	mov.b32 	 %r38, %f324;
	shr.u32 	%r39, %r38, 23;
	shl.b32 	%r203, %r38, 8;
	or.b32  	%r40, %r203, -2147483648;
	add.u64 	%rd36, %SP, 0;
	cvta.to.local.u64 	%rd56, %rd36;
	mov.u32 	%r354, 0;
	mov.u64 	%rd55, __cudart_i2opi_f;
	mov.u32 	%r353, -6;

BB54_22:
	.pragma "nounroll";
	ld.const.u32 	%r206, [%rd55];
	// inline asm
	{
	mad.lo.cc.u32   %r204, %r206, %r40, %r354;
	madc.hi.u32     %r354, %r206, %r40,  0;
	}
	// inline asm
	st.local.u32 	[%rd56], %r204;
	add.s64 	%rd56, %rd56, 4;
	add.s64 	%rd55, %rd55, 4;
	add.s32 	%r353, %r353, 1;
	setp.ne.s32	%p18, %r353, 0;
	@%p18 bra 	BB54_22;

	and.b32  	%r209, %r39, 255;
	add.s32 	%r210, %r209, -128;
	shr.u32 	%r211, %r210, 5;
	and.b32  	%r45, %r38, -2147483648;
	cvta.to.local.u64 	%rd38, %rd36;
	st.local.u32 	[%rd38+24], %r354;
	mov.u32 	%r212, 6;
	sub.s32 	%r213, %r212, %r211;
	mul.wide.s32 	%rd39, %r213, 4;
	add.s64 	%rd12, %rd38, %rd39;
	ld.local.u32 	%r355, [%rd12];
	ld.local.u32 	%r356, [%rd12+-4];
	and.b32  	%r48, %r39, 31;
	setp.eq.s32	%p19, %r48, 0;
	@%p19 bra 	BB54_25;

	mov.u32 	%r214, 32;
	sub.s32 	%r215, %r214, %r48;
	shr.u32 	%r216, %r356, %r215;
	shl.b32 	%r217, %r355, %r48;
	add.s32 	%r355, %r216, %r217;
	ld.local.u32 	%r218, [%rd12+-8];
	shr.u32 	%r219, %r218, %r215;
	shl.b32 	%r220, %r356, %r48;
	add.s32 	%r356, %r219, %r220;

BB54_25:
	shr.u32 	%r221, %r356, 30;
	shl.b32 	%r222, %r355, 2;
	add.s32 	%r357, %r221, %r222;
	shl.b32 	%r54, %r356, 2;
	shr.u32 	%r223, %r357, 31;
	shr.u32 	%r224, %r355, 30;
	add.s32 	%r55, %r223, %r224;
	setp.eq.s32	%p20, %r223, 0;
	mov.u32 	%r358, %r45;
	mov.u32 	%r359, %r54;
	@%p20 bra 	BB54_27;

	not.b32 	%r225, %r357;
	neg.s32 	%r56, %r54;
	setp.eq.s32	%p21, %r54, 0;
	selp.u32	%r226, 1, 0, %p21;
	add.s32 	%r357, %r226, %r225;
	xor.b32  	%r58, %r45, -2147483648;
	mov.u32 	%r358, %r58;
	mov.u32 	%r359, %r56;

BB54_27:
	mov.u32 	%r60, %r358;
	neg.s32 	%r227, %r55;
	setp.eq.s32	%p22, %r45, 0;
	selp.b32	%r362, %r55, %r227, %p22;
	clz.b32 	%r361, %r357;
	setp.eq.s32	%p23, %r361, 0;
	shl.b32 	%r228, %r357, %r361;
	mov.u32 	%r229, 32;
	sub.s32 	%r230, %r229, %r361;
	shr.u32 	%r231, %r359, %r230;
	add.s32 	%r232, %r231, %r228;
	selp.b32	%r64, %r357, %r232, %p23;
	mov.u32 	%r233, -921707870;
	mul.hi.u32 	%r360, %r64, %r233;
	setp.lt.s32	%p24, %r360, 1;
	@%p24 bra 	BB54_29;

	mul.lo.s32 	%r234, %r64, -921707870;
	shr.u32 	%r235, %r234, 31;
	shl.b32 	%r236, %r360, 1;
	add.s32 	%r360, %r235, %r236;
	add.s32 	%r361, %r361, 1;

BB54_29:
	mov.u32 	%r237, 126;
	sub.s32 	%r238, %r237, %r361;
	shl.b32 	%r239, %r238, 23;
	add.s32 	%r240, %r360, 1;
	shr.u32 	%r241, %r240, 7;
	add.s32 	%r242, %r241, 1;
	shr.u32 	%r243, %r242, 1;
	add.s32 	%r244, %r243, %r239;
	or.b32  	%r245, %r244, %r60;
	mov.b32 	 %f325, %r245;

BB54_30:
	mul.rn.f32 	%f22, %f325, %f325;
	add.s32 	%r71, %r362, 1;
	and.b32  	%r72, %r71, 1;
	setp.eq.s32	%p25, %r72, 0;
	@%p25 bra 	BB54_32;
	bra.uni 	BB54_31;

BB54_32:
	mov.f32 	%f187, 0f3C08839E;
	mov.f32 	%f188, 0fB94CA1F9;
	fma.rn.f32 	%f326, %f188, %f22, %f187;
	bra.uni 	BB54_33;

BB54_43:
	add.f32 	%f198, %f2, 0fBF64C176;
	add.f32 	%f199, %f198, 0f32657D03;
	mov.f32 	%f200, 0fBE02574C;
	mov.f32 	%f201, 0f3CDDC8B3;
	fma.rn.f32 	%f202, %f201, %f199, %f200;
	mov.f32 	%f203, 0f3E7F2CC9;
	fma.rn.f32 	%f204, %f202, %f199, %f203;
	mov.f32 	%f205, 0fBE8BF29B;
	fma.rn.f32 	%f206, %f204, %f199, %f205;
	mov.f32 	%f207, 0f3E5BCE93;
	fma.rn.f32 	%f208, %f206, %f199, %f207;
	mov.f32 	%f209, 0fBE38C4FF;
	fma.rn.f32 	%f210, %f208, %f199, %f209;
	mov.f32 	%f211, 0f3E42774D;
	fma.rn.f32 	%f212, %f210, %f199, %f211;
	mov.f32 	%f213, 0fBE525CB2;
	fma.rn.f32 	%f214, %f212, %f199, %f213;
	mov.f32 	%f215, 0f3E60F43D;
	fma.rn.f32 	%f216, %f214, %f199, %f215;
	mov.f32 	%f217, 0fBE679145;
	fma.rn.f32 	%f218, %f216, %f199, %f217;
	mov.f32 	%f219, 0f3E61D24A;
	fma.rn.f32 	%f220, %f218, %f199, %f219;
	mov.f32 	%f221, 0fBEFBF1AD;
	fma.rn.f32 	%f222, %f220, %f199, %f221;
	mov.f32 	%f223, 0f3F6121BB;
	fma.rn.f32 	%f224, %f222, %f199, %f223;
	mul.f32 	%f336, %f199, %f224;
	bra.uni 	BB54_82;

BB54_6:
	add.f32 	%f105, %f9, 0fC019E8A9;
	add.f32 	%f106, %f105, 0fB3E971B3;
	mov.f32 	%f107, 0fA9ACA9B3;
	mov.f32 	%f108, 0fA6B3B8E7;
	fma.rn.f32 	%f109, %f108, %f106, %f107;
	mov.f32 	%f110, 0f2C3F0E18;
	fma.rn.f32 	%f111, %f109, %f106, %f110;
	mov.f32 	%f112, 0fACD41781;
	fma.rn.f32 	%f113, %f111, %f106, %f112;
	mov.f32 	%f114, 0fAFE90F38;
	fma.rn.f32 	%f115, %f113, %f106, %f114;
	mov.f32 	%f116, 0f3020305B;
	fma.rn.f32 	%f117, %f115, %f106, %f116;
	mov.f32 	%f118, 0f33797143;
	fma.rn.f32 	%f119, %f117, %f106, %f118;
	mov.f32 	%f120, 0f30F76F85;
	fma.rn.f32 	%f121, %f119, %f106, %f120;
	mov.f32 	%f122, 0fB6B6DFC6;
	fma.rn.f32 	%f123, %f121, %f106, %f122;
	mov.f32 	%f124, 0fB6F665C9;
	fma.rn.f32 	%f125, %f123, %f106, %f124;
	mov.f32 	%f126, 0f399E2DEB;
	fma.rn.f32 	%f127, %f125, %f106, %f126;
	mov.f32 	%f128, 0f3A4AE334;
	fma.rn.f32 	%f129, %f127, %f106, %f128;
	mov.f32 	%f130, 0fBBEEAA1B;
	fma.rn.f32 	%f131, %f129, %f106, %f130;
	mov.f32 	%f132, 0fBCDA7747;
	fma.rn.f32 	%f133, %f131, %f106, %f132;
	mul.f32 	%f134, %f106, %f133;
	add.f32 	%f135, %f9, 0fC0B0A47B;
	add.f32 	%f136, %f135, 0f339A7A37;
	mul.f32 	%f137, %f136, %f134;
	add.f32 	%f138, %f9, 0fC10A75AB;
	add.f32 	%f139, %f138, 0fB4CCCDED;
	mul.f32 	%f329, %f139, %f137;
	bra.uni 	BB54_41;

BB54_45:
	add.f32 	%f225, %f2, 0fC07D4A9A;
	add.f32 	%f226, %f225, 0fB3D9856A;
	mov.f32 	%f227, 0fB45E2607;
	mov.f32 	%f228, 0fB449DD3F;
	fma.rn.f32 	%f229, %f228, %f226, %f227;
	mov.f32 	%f230, 0fB6857064;
	fma.rn.f32 	%f231, %f229, %f226, %f230;
	mov.f32 	%f232, 0f38554610;
	fma.rn.f32 	%f233, %f231, %f226, %f232;
	mov.f32 	%f234, 0f394ACED7;
	fma.rn.f32 	%f235, %f233, %f226, %f234;
	mov.f32 	%f236, 0fBB0F1A0C;
	fma.rn.f32 	%f237, %f235, %f226, %f236;
	mov.f32 	%f238, 0fBBE07F2E;
	fma.rn.f32 	%f239, %f237, %f226, %f238;
	mov.f32 	%f240, 0f3D6FB6B5;
	fma.rn.f32 	%f241, %f239, %f226, %f240;
	mov.f32 	%f242, 0f3D504DF1;
	fma.rn.f32 	%f243, %f241, %f226, %f242;
	mov.f32 	%f244, 0fBECE1A13;
	fma.rn.f32 	%f245, %f243, %f226, %f244;
	mul.f32 	%f336, %f226, %f245;
	bra.uni 	BB54_82;

BB54_47:
	add.f32 	%f246, %f2, 0fC0E2C0EE;
	add.f32 	%f247, %f246, 0fB39CE420;
	mov.f32 	%f248, 0f3629DA6C;
	mov.f32 	%f249, 0f3510CEBE;
	fma.rn.f32 	%f250, %f249, %f247, %f248;
	mov.f32 	%f251, 0fB84054C0;
	fma.rn.f32 	%f252, %f250, %f247, %f251;
	mov.f32 	%f253, 0fB91318AB;
	fma.rn.f32 	%f254, %f252, %f247, %f253;
	mov.f32 	%f255, 0f3B0E9921;
	fma.rn.f32 	%f256, %f254, %f247, %f255;
	mov.f32 	%f257, 0f3B5974D5;
	fma.rn.f32 	%f258, %f256, %f247, %f257;
	mov.f32 	%f259, 0fBD44B4D7;
	fma.rn.f32 	%f260, %f258, %f247, %f259;
	mov.f32 	%f261, 0fBCAD7799;
	fma.rn.f32 	%f262, %f260, %f247, %f261;
	mov.f32 	%f263, 0f3E99A665;
	fma.rn.f32 	%f264, %f262, %f247, %f263;
	mul.f32 	%f336, %f247, %f264;
	bra.uni 	BB54_82;

BB54_31:
	mov.f32 	%f185, 0fBAB6061A;
	mov.f32 	%f186, 0f37CCF5CE;
	fma.rn.f32 	%f326, %f186, %f22, %f185;

BB54_33:
	@%p25 bra 	BB54_35;
	bra.uni 	BB54_34;

BB54_35:
	mov.f32 	%f192, 0fBE2AAAA3;
	fma.rn.f32 	%f193, %f326, %f22, %f192;
	mov.f32 	%f194, 0f00000000;
	fma.rn.f32 	%f327, %f193, %f22, %f194;
	bra.uni 	BB54_36;

BB54_34:
	mov.f32 	%f189, 0f3D2AAAA5;
	fma.rn.f32 	%f190, %f326, %f22, %f189;
	fma.rn.f32 	%f327, %f190, %f22, %f98;

BB54_36:
	fma.rn.f32 	%f328, %f327, %f325, %f325;
	@%p25 bra 	BB54_38;

	fma.rn.f32 	%f328, %f327, %f22, %f152;

BB54_38:
	and.b32  	%r246, %r71, 2;
	setp.eq.s32	%p28, %r246, 0;
	@%p28 bra 	BB54_40;

	mov.f32 	%f196, 0f00000000;
	mov.f32 	%f197, 0fBF800000;
	fma.rn.f32 	%f328, %f328, %f197, %f196;

BB54_40:
	mul.f32 	%f329, %f12, %f328;

BB54_41:
	fma.rn.f32 	%f336, %f8, %f329, %f3;

BB54_82:
	setp.lt.f32	%p54, %f1, 0f00000000;
	selp.f32	%f321, 0fFFC00000, %f336, %p54;
	mul.lo.s32 	%r339, %r342, %r145;
	mul.wide.s32 	%rd51, %r339, 4;
	add.s64 	%rd52, %rd50, %rd51;
	st.global.f32 	[%rd52], %f321;
	mov.u32 	%r341, %nctaid.x;
	mad.lo.s32 	%r342, %r341, %r147, %r342;
	setp.lt.s32	%p55, %r342, %r144;
	@%p55 bra 	BB54_2;

BB54_83:
	ret;
}

	// .globl	map_y1_float
.visible .entry map_y1_float(
	.param .u32 map_y1_float_param_0,
	.param .u64 map_y1_float_param_1,
	.param .u32 map_y1_float_param_2,
	.param .u64 map_y1_float_param_3,
	.param .u32 map_y1_float_param_4
)
{
	.local .align 4 .b8 	__local_depot55[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<58>;
	.reg .f32 	%f<334>;
	.reg .b32 	%r<388>;
	.reg .b64 	%rd<62>;


	mov.u64 	%rd61, __local_depot55;
	cvta.local.u64 	%SP, %rd61;
	ld.param.u32 	%r144, [map_y1_float_param_0];
	ld.param.u64 	%rd25, [map_y1_float_param_1];
	ld.param.u32 	%r145, [map_y1_float_param_2];
	ld.param.u64 	%rd26, [map_y1_float_param_3];
	ld.param.u32 	%r146, [map_y1_float_param_4];
	mov.u32 	%r147, %ntid.x;
	mov.u32 	%r148, %ctaid.x;
	mov.u32 	%r149, %tid.x;
	mad.lo.s32 	%r347, %r147, %r148, %r149;
	setp.ge.s32	%p1, %r347, %r144;
	@%p1 bra 	BB55_85;

	cvta.to.global.u64 	%rd27, %rd26;
	cvta.to.global.u64 	%rd50, %rd25;
	bra.uni 	BB55_2;

BB55_73:
	mov.f32 	%f304, 0fBAB6061A;
	mov.f32 	%f305, 0f37CCF5CE;
	fma.rn.f32 	%f330, %f305, %f49, %f304;

BB55_75:
	@%p52 bra 	BB55_77;
	bra.uni 	BB55_76;

BB55_77:
	mov.f32 	%f311, 0fBE2AAAA3;
	fma.rn.f32 	%f312, %f330, %f49, %f311;
	mov.f32 	%f313, 0f00000000;
	fma.rn.f32 	%f331, %f312, %f49, %f313;
	bra.uni 	BB55_78;

BB55_76:
	mov.f32 	%f308, 0f3D2AAAA5;
	fma.rn.f32 	%f309, %f330, %f49, %f308;
	mov.f32 	%f310, 0fBF000000;
	fma.rn.f32 	%f331, %f309, %f49, %f310;

BB55_78:
	fma.rn.f32 	%f332, %f331, %f329, %f329;
	@%p52 bra 	BB55_80;

	fma.rn.f32 	%f332, %f331, %f49, %f271;

BB55_80:
	and.b32  	%r343, %r141, 2;
	setp.eq.s32	%p55, %r343, 0;
	@%p55 bra 	BB55_82;

	mov.f32 	%f315, 0f00000000;
	mov.f32 	%f316, 0fBF800000;
	fma.rn.f32 	%f332, %f332, %f316, %f315;

BB55_82:
	mul.f32 	%f333, %f39, %f332;
	bra.uni 	BB55_84;

BB55_2:
	mul.lo.s32 	%r150, %r347, %r146;
	mul.wide.s32 	%rd28, %r150, 4;
	add.s64 	%rd29, %rd27, %rd28;
	ld.global.f32 	%f1, [%rd29];
	abs.f32 	%f2, %f1;
	setp.lt.f32	%p2, %f2, 0f00800000;
	@%p2 bra 	BB55_83;
	bra.uni 	BB55_3;

BB55_83:
	mov.f32 	%f317, 0fBF22F983;
	div.rn.f32 	%f333, %f317, %f2;
	bra.uni 	BB55_84;

BB55_3:
	setp.gtu.f32	%p3, %f2, 0f3FD96AC4;
	@%p3 bra 	BB55_43;
	bra.uni 	BB55_4;

BB55_43:
	setp.gtu.f32	%p31, %f2, 0f40740EEE;
	@%p31 bra 	BB55_45;
	bra.uni 	BB55_44;

BB55_45:
	setp.gtu.f32	%p32, %f2, 0f40E06937;
	@%p32 bra 	BB55_47;
	bra.uni 	BB55_46;

BB55_47:
	setp.gtu.f32	%p33, %f2, 0f4122C2E3;
	@%p33 bra 	BB55_49;
	bra.uni 	BB55_48;

BB55_49:
	abs.f32 	%f262, %f2;
	mov.f32 	%f333, 0f00000000;
	setp.eq.f32	%p34, %f262, 0f7F800000;
	@%p34 bra 	BB55_84;

	// inline asm
	rcp.approx.ftz.f32 %f263,%f2;
	// inline asm
	mul.f32 	%f265, %f263, %f263;
	mov.f32 	%f266, 0fBE44AB90;
	mov.f32 	%f267, 0f3F267F60;
	fma.rn.f32 	%f268, %f267, %f265, %f266;
	mov.f32 	%f269, 0f3E3FFEBF;
	fma.rn.f32 	%f270, %f268, %f265, %f269;
	mov.f32 	%f271, 0f3F800000;
	fma.rn.f32 	%f272, %f270, %f265, %f271;
	mov.f32 	%f273, 0f3EBB73AB;
	mov.f32 	%f274, 0fBFE4E1AB;
	fma.rn.f32 	%f275, %f274, %f265, %f273;
	mov.f32 	%f276, 0fBE27FB6E;
	fma.rn.f32 	%f277, %f275, %f265, %f276;
	mov.f32 	%f278, 0f3EBFFFFF;
	fma.rn.f32 	%f279, %f277, %f265, %f278;
	fma.rn.f32 	%f38, %f279, %f263, %f2;
	rsqrt.approx.f32 	%f280, %f2;
	mul.f32 	%f281, %f280, 0f3F4C422A;
	mul.f32 	%f39, %f272, %f281;
	mul.f32 	%f282, %f38, 0f3F22F983;
	cvt.rni.s32.f32	%r377, %f282;
	cvt.rn.f32.s32	%f283, %r377;
	neg.f32 	%f284, %f283;
	mov.f32 	%f285, 0f3FC90FDA;
	fma.rn.f32 	%f286, %f284, %f285, %f38;
	mov.f32 	%f287, 0f33A22168;
	fma.rn.f32 	%f288, %f284, %f287, %f286;
	mov.f32 	%f289, 0f27C234C5;
	fma.rn.f32 	%f327, %f284, %f289, %f288;
	abs.f32 	%f290, %f38;
	setp.leu.f32	%p35, %f290, 0f47CE4780;
	@%p35 bra 	BB55_60;

	mov.b32 	 %r74, %f38;
	shr.u32 	%r75, %r74, 23;
	shl.b32 	%r254, %r74, 8;
	or.b32  	%r76, %r254, -2147483648;
	add.u64 	%rd41, %SP, 0;
	cvta.to.local.u64 	%rd58, %rd41;
	mov.u32 	%r369, 0;
	mov.u64 	%rd57, __cudart_i2opi_f;
	mov.u32 	%r368, -6;

BB55_52:
	.pragma "nounroll";
	ld.const.u32 	%r257, [%rd57];
	// inline asm
	{
	mad.lo.cc.u32   %r255, %r257, %r76, %r369;
	madc.hi.u32     %r369, %r257, %r76,  0;
	}
	// inline asm
	st.local.u32 	[%rd58], %r255;
	add.s64 	%rd58, %rd58, 4;
	add.s64 	%rd57, %rd57, 4;
	add.s32 	%r368, %r368, 1;
	setp.ne.s32	%p36, %r368, 0;
	@%p36 bra 	BB55_52;

	and.b32  	%r260, %r75, 255;
	add.s32 	%r261, %r260, -128;
	shr.u32 	%r262, %r261, 5;
	and.b32  	%r81, %r74, -2147483648;
	cvta.to.local.u64 	%rd43, %rd41;
	st.local.u32 	[%rd43+24], %r369;
	mov.u32 	%r263, 6;
	sub.s32 	%r264, %r263, %r262;
	mul.wide.s32 	%rd44, %r264, 4;
	add.s64 	%rd18, %rd43, %rd44;
	ld.local.u32 	%r370, [%rd18];
	ld.local.u32 	%r371, [%rd18+-4];
	and.b32  	%r84, %r75, 31;
	setp.eq.s32	%p37, %r84, 0;
	@%p37 bra 	BB55_55;

	mov.u32 	%r265, 32;
	sub.s32 	%r266, %r265, %r84;
	shr.u32 	%r267, %r371, %r266;
	shl.b32 	%r268, %r370, %r84;
	add.s32 	%r370, %r267, %r268;
	ld.local.u32 	%r269, [%rd18+-8];
	shr.u32 	%r270, %r269, %r266;
	shl.b32 	%r271, %r371, %r84;
	add.s32 	%r371, %r270, %r271;

BB55_55:
	shr.u32 	%r272, %r371, 30;
	shl.b32 	%r273, %r370, 2;
	add.s32 	%r372, %r272, %r273;
	shl.b32 	%r90, %r371, 2;
	shr.u32 	%r274, %r372, 31;
	shr.u32 	%r275, %r370, 30;
	add.s32 	%r91, %r274, %r275;
	setp.eq.s32	%p38, %r274, 0;
	mov.u32 	%r373, %r81;
	mov.u32 	%r374, %r90;
	@%p38 bra 	BB55_57;

	not.b32 	%r276, %r372;
	neg.s32 	%r92, %r90;
	setp.eq.s32	%p39, %r90, 0;
	selp.u32	%r277, 1, 0, %p39;
	add.s32 	%r372, %r277, %r276;
	xor.b32  	%r94, %r81, -2147483648;
	mov.u32 	%r373, %r94;
	mov.u32 	%r374, %r92;

BB55_57:
	mov.u32 	%r96, %r373;
	neg.s32 	%r278, %r91;
	setp.eq.s32	%p40, %r81, 0;
	selp.b32	%r377, %r91, %r278, %p40;
	clz.b32 	%r376, %r372;
	setp.eq.s32	%p41, %r376, 0;
	shl.b32 	%r279, %r372, %r376;
	mov.u32 	%r280, 32;
	sub.s32 	%r281, %r280, %r376;
	shr.u32 	%r282, %r374, %r281;
	add.s32 	%r283, %r282, %r279;
	selp.b32	%r100, %r372, %r283, %p41;
	mov.u32 	%r284, -921707870;
	mul.hi.u32 	%r375, %r100, %r284;
	setp.lt.s32	%p42, %r375, 1;
	@%p42 bra 	BB55_59;

	mul.lo.s32 	%r285, %r100, -921707870;
	shr.u32 	%r286, %r285, 31;
	shl.b32 	%r287, %r375, 1;
	add.s32 	%r375, %r286, %r287;
	add.s32 	%r376, %r376, 1;

BB55_59:
	mov.u32 	%r288, 126;
	sub.s32 	%r289, %r288, %r376;
	shl.b32 	%r290, %r289, 23;
	add.s32 	%r291, %r375, 1;
	shr.u32 	%r292, %r291, 7;
	add.s32 	%r293, %r292, 1;
	shr.u32 	%r294, %r293, 1;
	add.s32 	%r295, %r294, %r290;
	or.b32  	%r296, %r295, %r96;
	mov.b32 	 %f327, %r296;

BB55_60:
	and.b32  	%r297, %r377, 3;
	cvt.rn.f32.s32	%f291, %r297;
	add.f32 	%f292, %f327, 0fC07B53D1;
	fma.rn.f32 	%f328, %f291, 0f3FC90FDB, %f292;
	abs.f32 	%f293, %f328;
	setp.neu.f32	%p43, %f293, 0f7F800000;
	@%p43 bra 	BB55_62;

	mov.f32 	%f294, 0f00000000;
	mul.rn.f32 	%f328, %f328, %f294;

BB55_62:
	mul.f32 	%f295, %f328, 0f3F22F983;
	cvt.rni.s32.f32	%r387, %f295;
	cvt.rn.f32.s32	%f296, %r387;
	neg.f32 	%f297, %f296;
	fma.rn.f32 	%f299, %f297, %f285, %f328;
	fma.rn.f32 	%f301, %f297, %f287, %f299;
	fma.rn.f32 	%f329, %f297, %f289, %f301;
	abs.f32 	%f303, %f328;
	setp.leu.f32	%p44, %f303, 0f47CE4780;
	@%p44 bra 	BB55_72;

	mov.b32 	 %r108, %f328;
	shr.u32 	%r109, %r108, 23;
	shl.b32 	%r300, %r108, 8;
	or.b32  	%r110, %r300, -2147483648;
	add.u64 	%rd46, %SP, 0;
	cvta.to.local.u64 	%rd60, %rd46;
	mov.u32 	%r379, 0;
	mov.u64 	%rd59, __cudart_i2opi_f;
	mov.u32 	%r378, -6;

BB55_64:
	.pragma "nounroll";
	ld.const.u32 	%r303, [%rd59];
	// inline asm
	{
	mad.lo.cc.u32   %r301, %r303, %r110, %r379;
	madc.hi.u32     %r379, %r303, %r110,  0;
	}
	// inline asm
	st.local.u32 	[%rd60], %r301;
	add.s64 	%rd60, %rd60, 4;
	add.s64 	%rd59, %rd59, 4;
	add.s32 	%r378, %r378, 1;
	setp.ne.s32	%p45, %r378, 0;
	@%p45 bra 	BB55_64;

	and.b32  	%r306, %r109, 255;
	add.s32 	%r307, %r306, -128;
	shr.u32 	%r308, %r307, 5;
	and.b32  	%r115, %r108, -2147483648;
	cvta.to.local.u64 	%rd48, %rd46;
	st.local.u32 	[%rd48+24], %r379;
	mov.u32 	%r309, 6;
	sub.s32 	%r310, %r309, %r308;
	mul.wide.s32 	%rd49, %r310, 4;
	add.s64 	%rd24, %rd48, %rd49;
	ld.local.u32 	%r380, [%rd24];
	ld.local.u32 	%r381, [%rd24+-4];
	and.b32  	%r118, %r109, 31;
	setp.eq.s32	%p46, %r118, 0;
	@%p46 bra 	BB55_67;

	mov.u32 	%r311, 32;
	sub.s32 	%r312, %r311, %r118;
	shr.u32 	%r313, %r381, %r312;
	shl.b32 	%r314, %r380, %r118;
	add.s32 	%r380, %r313, %r314;
	ld.local.u32 	%r315, [%rd24+-8];
	shr.u32 	%r316, %r315, %r312;
	shl.b32 	%r317, %r381, %r118;
	add.s32 	%r381, %r316, %r317;

BB55_67:
	shr.u32 	%r318, %r381, 30;
	shl.b32 	%r319, %r380, 2;
	add.s32 	%r382, %r318, %r319;
	shl.b32 	%r124, %r381, 2;
	shr.u32 	%r320, %r382, 31;
	shr.u32 	%r321, %r380, 30;
	add.s32 	%r125, %r320, %r321;
	setp.eq.s32	%p47, %r320, 0;
	mov.u32 	%r383, %r115;
	mov.u32 	%r384, %r124;
	@%p47 bra 	BB55_69;

	not.b32 	%r322, %r382;
	neg.s32 	%r126, %r124;
	setp.eq.s32	%p48, %r124, 0;
	selp.u32	%r323, 1, 0, %p48;
	add.s32 	%r382, %r323, %r322;
	xor.b32  	%r128, %r115, -2147483648;
	mov.u32 	%r383, %r128;
	mov.u32 	%r384, %r126;

BB55_69:
	mov.u32 	%r130, %r383;
	neg.s32 	%r324, %r125;
	setp.eq.s32	%p49, %r115, 0;
	selp.b32	%r387, %r125, %r324, %p49;
	clz.b32 	%r386, %r382;
	setp.eq.s32	%p50, %r386, 0;
	shl.b32 	%r325, %r382, %r386;
	mov.u32 	%r326, 32;
	sub.s32 	%r327, %r326, %r386;
	shr.u32 	%r328, %r384, %r327;
	add.s32 	%r329, %r328, %r325;
	selp.b32	%r134, %r382, %r329, %p50;
	mov.u32 	%r330, -921707870;
	mul.hi.u32 	%r385, %r134, %r330;
	setp.lt.s32	%p51, %r385, 1;
	@%p51 bra 	BB55_71;

	mul.lo.s32 	%r331, %r134, -921707870;
	shr.u32 	%r332, %r331, 31;
	shl.b32 	%r333, %r385, 1;
	add.s32 	%r385, %r332, %r333;
	add.s32 	%r386, %r386, 1;

BB55_71:
	mov.u32 	%r334, 126;
	sub.s32 	%r335, %r334, %r386;
	shl.b32 	%r336, %r335, 23;
	add.s32 	%r337, %r385, 1;
	shr.u32 	%r338, %r337, 7;
	add.s32 	%r339, %r338, 1;
	shr.u32 	%r340, %r339, 1;
	add.s32 	%r341, %r340, %r336;
	or.b32  	%r342, %r341, %r130;
	mov.b32 	 %f329, %r342;

BB55_72:
	mul.rn.f32 	%f49, %f329, %f329;
	add.s32 	%r141, %r387, 1;
	and.b32  	%r142, %r141, 1;
	setp.eq.s32	%p52, %r142, 0;
	@%p52 bra 	BB55_74;
	bra.uni 	BB55_73;

BB55_74:
	mov.f32 	%f306, 0f3C08839E;
	mov.f32 	%f307, 0fB94CA1F9;
	fma.rn.f32 	%f330, %f307, %f49, %f306;
	bra.uni 	BB55_75;

BB55_4:
	mul.f32 	%f64, %f2, %f2;
	mov.f32 	%f65, 0fB58527DA;
	mov.f32 	%f66, 0f321462CC;
	fma.rn.f32 	%f67, %f66, %f64, %f65;
	mov.f32 	%f68, 0f38963E95;
	fma.rn.f32 	%f69, %f67, %f64, %f68;
	mov.f32 	%f70, 0fBB41ADCB;
	fma.rn.f32 	%f71, %f69, %f64, %f70;
	mov.f32 	%f72, 0f3D5E9CBB;
	fma.rn.f32 	%f73, %f71, %f64, %f72;
	mov.f32 	%f74, 0fBE48C331;
	fma.rn.f32 	%f3, %f73, %f64, %f74;
	mov.b32 	 %r151, %f2;
	add.s32 	%r152, %r151, -1059760811;
	and.b32  	%r153, %r152, -8388608;
	sub.s32 	%r154, %r151, %r153;
	mov.b32 	 %f75, %r154;
	cvt.rn.f32.s32	%f76, %r153;
	mov.f32 	%f326, 0f00000000;
	mov.f32 	%f78, 0f34000000;
	fma.rn.f32 	%f79, %f76, %f78, %f326;
	add.f32 	%f80, %f75, 0fBF800000;
	mov.f32 	%f81, 0f3E1039F6;
	mov.f32 	%f82, 0fBE055027;
	fma.rn.f32 	%f83, %f82, %f80, %f81;
	mov.f32 	%f84, 0fBDF8CDCC;
	fma.rn.f32 	%f85, %f83, %f80, %f84;
	mov.f32 	%f86, 0f3E0F2955;
	fma.rn.f32 	%f87, %f85, %f80, %f86;
	mov.f32 	%f88, 0fBE2AD8B9;
	fma.rn.f32 	%f89, %f87, %f80, %f88;
	mov.f32 	%f90, 0f3E4CED0B;
	fma.rn.f32 	%f91, %f89, %f80, %f90;
	mov.f32 	%f92, 0fBE7FFF22;
	fma.rn.f32 	%f93, %f91, %f80, %f92;
	mov.f32 	%f94, 0f3EAAAA78;
	fma.rn.f32 	%f95, %f93, %f80, %f94;
	mov.f32 	%f96, 0fBF000000;
	fma.rn.f32 	%f97, %f95, %f80, %f96;
	mul.f32 	%f98, %f80, %f97;
	fma.rn.f32 	%f99, %f98, %f80, %f80;
	mov.f32 	%f100, 0f3F317218;
	fma.rn.f32 	%f319, %f79, %f100, %f99;
	setp.lt.u32	%p4, %r151, 2139095040;
	@%p4 bra 	BB55_6;

	mov.f32 	%f101, 0f7F800000;
	fma.rn.f32 	%f319, %f2, %f101, %f101;

BB55_6:
	abs.f32 	%f7, %f2;
	setp.gtu.f32	%p5, %f7, 0f40FB3333;
	@%p5 bra 	BB55_8;
	bra.uni 	BB55_7;

BB55_8:
	abs.f32 	%f134, %f7;
	setp.eq.f32	%p6, %f134, 0f7F800000;
	@%p6 bra 	BB55_42;

	// inline asm
	rcp.approx.ftz.f32 %f135,%f7;
	// inline asm
	mul.f32 	%f137, %f135, %f135;
	mov.f32 	%f138, 0f3F3FF7E9;
	mov.f32 	%f139, 0fC082CB37;
	fma.rn.f32 	%f140, %f139, %f137, %f138;
	mov.f32 	%f141, 0fBE458BAE;
	fma.rn.f32 	%f142, %f140, %f137, %f141;
	mov.f32 	%f143, 0f3E3FFF8B;
	fma.rn.f32 	%f144, %f142, %f137, %f143;
	mov.f32 	%f145, 0f3F800000;
	fma.rn.f32 	%f146, %f144, %f137, %f145;
	mov.f32 	%f147, 0f3EB914AD;
	mov.f32 	%f148, 0fBFCA3BA2;
	fma.rn.f32 	%f149, %f148, %f137, %f147;
	mov.f32 	%f150, 0fBE27F2EC;
	fma.rn.f32 	%f151, %f149, %f137, %f150;
	mov.f32 	%f152, 0f3EBFFFFD;
	fma.rn.f32 	%f153, %f151, %f137, %f152;
	fma.rn.f32 	%f9, %f153, %f135, %f7;
	rsqrt.approx.f32 	%f154, %f7;
	mul.f32 	%f155, %f154, 0f3F4C422A;
	mul.f32 	%f10, %f146, %f155;
	mul.f32 	%f156, %f9, 0f3F22F983;
	cvt.rni.s32.f32	%r357, %f156;
	cvt.rn.f32.s32	%f157, %r357;
	neg.f32 	%f158, %f157;
	mov.f32 	%f159, 0f3FC90FDA;
	fma.rn.f32 	%f160, %f158, %f159, %f9;
	mov.f32 	%f161, 0f33A22168;
	fma.rn.f32 	%f162, %f158, %f161, %f160;
	mov.f32 	%f163, 0f27C234C5;
	fma.rn.f32 	%f320, %f158, %f163, %f162;
	abs.f32 	%f164, %f9;
	setp.leu.f32	%p7, %f164, 0f47CE4780;
	@%p7 bra 	BB55_19;

	mov.b32 	 %r4, %f9;
	shr.u32 	%r5, %r4, 23;
	shl.b32 	%r157, %r4, 8;
	or.b32  	%r6, %r157, -2147483648;
	add.u64 	%rd31, %SP, 0;
	cvta.to.local.u64 	%rd54, %rd31;
	mov.u32 	%r349, 0;
	mov.u64 	%rd53, __cudart_i2opi_f;
	mov.u32 	%r348, -6;

BB55_11:
	.pragma "nounroll";
	ld.const.u32 	%r160, [%rd53];
	// inline asm
	{
	mad.lo.cc.u32   %r158, %r160, %r6, %r349;
	madc.hi.u32     %r349, %r160, %r6,  0;
	}
	// inline asm
	st.local.u32 	[%rd54], %r158;
	add.s64 	%rd54, %rd54, 4;
	add.s64 	%rd53, %rd53, 4;
	add.s32 	%r348, %r348, 1;
	setp.ne.s32	%p8, %r348, 0;
	@%p8 bra 	BB55_11;

	and.b32  	%r163, %r5, 255;
	add.s32 	%r164, %r163, -128;
	shr.u32 	%r165, %r164, 5;
	and.b32  	%r11, %r4, -2147483648;
	cvta.to.local.u64 	%rd33, %rd31;
	st.local.u32 	[%rd33+24], %r349;
	mov.u32 	%r166, 6;
	sub.s32 	%r167, %r166, %r165;
	mul.wide.s32 	%rd34, %r167, 4;
	add.s64 	%rd6, %rd33, %rd34;
	ld.local.u32 	%r350, [%rd6];
	ld.local.u32 	%r351, [%rd6+-4];
	and.b32  	%r14, %r5, 31;
	setp.eq.s32	%p9, %r14, 0;
	@%p9 bra 	BB55_14;

	mov.u32 	%r168, 32;
	sub.s32 	%r169, %r168, %r14;
	shr.u32 	%r170, %r351, %r169;
	shl.b32 	%r171, %r350, %r14;
	add.s32 	%r350, %r170, %r171;
	ld.local.u32 	%r172, [%rd6+-8];
	shr.u32 	%r173, %r172, %r169;
	shl.b32 	%r174, %r351, %r14;
	add.s32 	%r351, %r173, %r174;

BB55_14:
	shr.u32 	%r175, %r351, 30;
	shl.b32 	%r176, %r350, 2;
	add.s32 	%r352, %r175, %r176;
	shl.b32 	%r20, %r351, 2;
	shr.u32 	%r177, %r352, 31;
	shr.u32 	%r178, %r350, 30;
	add.s32 	%r21, %r177, %r178;
	setp.eq.s32	%p10, %r177, 0;
	mov.u32 	%r353, %r11;
	mov.u32 	%r354, %r20;
	@%p10 bra 	BB55_16;

	not.b32 	%r179, %r352;
	neg.s32 	%r22, %r20;
	setp.eq.s32	%p11, %r20, 0;
	selp.u32	%r180, 1, 0, %p11;
	add.s32 	%r352, %r180, %r179;
	xor.b32  	%r24, %r11, -2147483648;
	mov.u32 	%r353, %r24;
	mov.u32 	%r354, %r22;

BB55_16:
	mov.u32 	%r26, %r353;
	neg.s32 	%r181, %r21;
	setp.eq.s32	%p12, %r11, 0;
	selp.b32	%r357, %r21, %r181, %p12;
	clz.b32 	%r356, %r352;
	setp.eq.s32	%p13, %r356, 0;
	shl.b32 	%r182, %r352, %r356;
	mov.u32 	%r183, 32;
	sub.s32 	%r184, %r183, %r356;
	shr.u32 	%r185, %r354, %r184;
	add.s32 	%r186, %r185, %r182;
	selp.b32	%r30, %r352, %r186, %p13;
	mov.u32 	%r187, -921707870;
	mul.hi.u32 	%r355, %r30, %r187;
	setp.lt.s32	%p14, %r355, 1;
	@%p14 bra 	BB55_18;

	mul.lo.s32 	%r188, %r30, -921707870;
	shr.u32 	%r189, %r188, 31;
	shl.b32 	%r190, %r355, 1;
	add.s32 	%r355, %r189, %r190;
	add.s32 	%r356, %r356, 1;

BB55_18:
	mov.u32 	%r191, 126;
	sub.s32 	%r192, %r191, %r356;
	shl.b32 	%r193, %r192, 23;
	add.s32 	%r194, %r355, 1;
	shr.u32 	%r195, %r194, 7;
	add.s32 	%r196, %r195, 1;
	shr.u32 	%r197, %r196, 1;
	add.s32 	%r198, %r197, %r193;
	or.b32  	%r199, %r198, %r26;
	mov.b32 	 %f320, %r199;

BB55_19:
	and.b32  	%r200, %r357, 3;
	cvt.rn.f32.s32	%f165, %r200;
	add.f32 	%f166, %f320, 0fC016CBE4;
	fma.rn.f32 	%f321, %f165, 0f3FC90FDB, %f166;
	abs.f32 	%f167, %f321;
	setp.neu.f32	%p15, %f167, 0f7F800000;
	@%p15 bra 	BB55_21;

	mov.f32 	%f168, 0f00000000;
	mul.rn.f32 	%f321, %f321, %f168;

BB55_21:
	mul.f32 	%f169, %f321, 0f3F22F983;
	cvt.rni.s32.f32	%r367, %f169;
	cvt.rn.f32.s32	%f170, %r367;
	neg.f32 	%f171, %f170;
	fma.rn.f32 	%f173, %f171, %f159, %f321;
	fma.rn.f32 	%f175, %f171, %f161, %f173;
	fma.rn.f32 	%f322, %f171, %f163, %f175;
	abs.f32 	%f177, %f321;
	setp.leu.f32	%p16, %f177, 0f47CE4780;
	@%p16 bra 	BB55_31;

	mov.b32 	 %r38, %f321;
	shr.u32 	%r39, %r38, 23;
	shl.b32 	%r203, %r38, 8;
	or.b32  	%r40, %r203, -2147483648;
	add.u64 	%rd36, %SP, 0;
	cvta.to.local.u64 	%rd56, %rd36;
	mov.u32 	%r359, 0;
	mov.u64 	%rd55, __cudart_i2opi_f;
	mov.u32 	%r358, -6;

BB55_23:
	.pragma "nounroll";
	ld.const.u32 	%r206, [%rd55];
	// inline asm
	{
	mad.lo.cc.u32   %r204, %r206, %r40, %r359;
	madc.hi.u32     %r359, %r206, %r40,  0;
	}
	// inline asm
	st.local.u32 	[%rd56], %r204;
	add.s64 	%rd56, %rd56, 4;
	add.s64 	%rd55, %rd55, 4;
	add.s32 	%r358, %r358, 1;
	setp.ne.s32	%p17, %r358, 0;
	@%p17 bra 	BB55_23;

	and.b32  	%r209, %r39, 255;
	add.s32 	%r210, %r209, -128;
	shr.u32 	%r211, %r210, 5;
	and.b32  	%r45, %r38, -2147483648;
	cvta.to.local.u64 	%rd38, %rd36;
	st.local.u32 	[%rd38+24], %r359;
	mov.u32 	%r212, 6;
	sub.s32 	%r213, %r212, %r211;
	mul.wide.s32 	%rd39, %r213, 4;
	add.s64 	%rd12, %rd38, %rd39;
	ld.local.u32 	%r360, [%rd12];
	ld.local.u32 	%r361, [%rd12+-4];
	and.b32  	%r48, %r39, 31;
	setp.eq.s32	%p18, %r48, 0;
	@%p18 bra 	BB55_26;

	mov.u32 	%r214, 32;
	sub.s32 	%r215, %r214, %r48;
	shr.u32 	%r216, %r361, %r215;
	shl.b32 	%r217, %r360, %r48;
	add.s32 	%r360, %r216, %r217;
	ld.local.u32 	%r218, [%rd12+-8];
	shr.u32 	%r219, %r218, %r215;
	shl.b32 	%r220, %r361, %r48;
	add.s32 	%r361, %r219, %r220;

BB55_26:
	shr.u32 	%r221, %r361, 30;
	shl.b32 	%r222, %r360, 2;
	add.s32 	%r362, %r221, %r222;
	shl.b32 	%r54, %r361, 2;
	shr.u32 	%r223, %r362, 31;
	shr.u32 	%r224, %r360, 30;
	add.s32 	%r55, %r223, %r224;
	setp.eq.s32	%p19, %r223, 0;
	mov.u32 	%r363, %r45;
	mov.u32 	%r364, %r54;
	@%p19 bra 	BB55_28;

	not.b32 	%r225, %r362;
	neg.s32 	%r56, %r54;
	setp.eq.s32	%p20, %r54, 0;
	selp.u32	%r226, 1, 0, %p20;
	add.s32 	%r362, %r226, %r225;
	xor.b32  	%r58, %r45, -2147483648;
	mov.u32 	%r363, %r58;
	mov.u32 	%r364, %r56;

BB55_28:
	mov.u32 	%r60, %r363;
	neg.s32 	%r227, %r55;
	setp.eq.s32	%p21, %r45, 0;
	selp.b32	%r367, %r55, %r227, %p21;
	clz.b32 	%r366, %r362;
	setp.eq.s32	%p22, %r366, 0;
	shl.b32 	%r228, %r362, %r366;
	mov.u32 	%r229, 32;
	sub.s32 	%r230, %r229, %r366;
	shr.u32 	%r231, %r364, %r230;
	add.s32 	%r232, %r231, %r228;
	selp.b32	%r64, %r362, %r232, %p22;
	mov.u32 	%r233, -921707870;
	mul.hi.u32 	%r365, %r64, %r233;
	setp.lt.s32	%p23, %r365, 1;
	@%p23 bra 	BB55_30;

	mul.lo.s32 	%r234, %r64, -921707870;
	shr.u32 	%r235, %r234, 31;
	shl.b32 	%r236, %r365, 1;
	add.s32 	%r365, %r235, %r236;
	add.s32 	%r366, %r366, 1;

BB55_30:
	mov.u32 	%r237, 126;
	sub.s32 	%r238, %r237, %r366;
	shl.b32 	%r239, %r238, 23;
	add.s32 	%r240, %r365, 1;
	shr.u32 	%r241, %r240, 7;
	add.s32 	%r242, %r241, 1;
	shr.u32 	%r243, %r242, 1;
	add.s32 	%r244, %r243, %r239;
	or.b32  	%r245, %r244, %r60;
	mov.b32 	 %f322, %r245;

BB55_31:
	mul.rn.f32 	%f20, %f322, %f322;
	add.s32 	%r71, %r367, 1;
	and.b32  	%r72, %r71, 1;
	setp.eq.s32	%p24, %r72, 0;
	@%p24 bra 	BB55_33;
	bra.uni 	BB55_32;

BB55_33:
	mov.f32 	%f180, 0f3C08839E;
	mov.f32 	%f181, 0fB94CA1F9;
	fma.rn.f32 	%f323, %f181, %f20, %f180;
	bra.uni 	BB55_34;

BB55_44:
	add.f32 	%f200, %f2, 0fC00C9DF7;
	add.f32 	%f201, %f200, 0f33B200DC;
	mov.f32 	%f202, 0f39064A88;
	mov.f32 	%f203, 0fB789E29D;
	fma.rn.f32 	%f204, %f203, %f201, %f202;
	mov.f32 	%f205, 0fB9F0AB0D;
	fma.rn.f32 	%f206, %f204, %f201, %f205;
	mov.f32 	%f207, 0f3A8F6102;
	fma.rn.f32 	%f208, %f206, %f201, %f207;
	mov.f32 	%f209, 0fBB2C7045;
	fma.rn.f32 	%f210, %f208, %f201, %f209;
	mov.f32 	%f211, 0f3BF35DF7;
	fma.rn.f32 	%f212, %f210, %f201, %f211;
	mov.f32 	%f213, 0fBB9D097C;
	fma.rn.f32 	%f214, %f212, %f201, %f213;
	mov.f32 	%f215, 0fBD06968A;
	fma.rn.f32 	%f216, %f214, %f201, %f215;
	mov.f32 	%f217, 0fBDF2B7DF;
	fma.rn.f32 	%f218, %f216, %f201, %f217;
	mov.f32 	%f219, 0f3F055242;
	fma.rn.f32 	%f220, %f218, %f201, %f219;
	mul.f32 	%f333, %f201, %f220;
	bra.uni 	BB55_84;

BB55_7:
	add.f32 	%f102, %f7, 0fC0753AAC;
	add.f32 	%f103, %f102, 0f33A5090F;
	mov.f32 	%f104, 0f2B81BF42;
	mov.f32 	%f105, 0f29AF3463;
	fma.rn.f32 	%f106, %f105, %f103, %f104;
	mov.f32 	%f107, 0fADE21EC1;
	fma.rn.f32 	%f108, %f106, %f103, %f107;
	mov.f32 	%f109, 0fAF5DDEFF;
	fma.rn.f32 	%f110, %f108, %f103, %f109;
	mov.f32 	%f111, 0f319B0C9D;
	fma.rn.f32 	%f112, %f110, %f103, %f111;
	mov.f32 	%f113, 0f32E81173;
	fma.rn.f32 	%f114, %f112, %f103, %f113;
	mov.f32 	%f115, 0fB50F8DC8;
	fma.rn.f32 	%f116, %f114, %f103, %f115;
	mov.f32 	%f117, 0fB61E653D;
	fma.rn.f32 	%f118, %f116, %f103, %f117;
	mov.f32 	%f119, 0f382CD9C5;
	fma.rn.f32 	%f120, %f118, %f103, %f119;
	mov.f32 	%f121, 0f38F9EB10;
	fma.rn.f32 	%f122, %f120, %f103, %f121;
	mov.f32 	%f123, 0fBAECEB9C;
	fma.rn.f32 	%f124, %f122, %f103, %f123;
	mov.f32 	%f125, 0fBB276FFD;
	fma.rn.f32 	%f126, %f124, %f103, %f125;
	mov.f32 	%f127, 0f3D073993;
	fma.rn.f32 	%f128, %f126, %f103, %f127;
	add.f32 	%f129, %f7, 0fC0E07FB0;
	add.f32 	%f130, %f129, 0f3444B8DB;
	mul.f32 	%f131, %f130, %f128;
	mul.f32 	%f132, %f103, %f131;
	mul.f32 	%f326, %f7, %f132;
	bra.uni 	BB55_42;

BB55_46:
	add.f32 	%f221, %f2, 0fC0ADBFF2;
	add.f32 	%f222, %f221, 0fB4687B03;
	mov.f32 	%f223, 0fB508A416;
	mov.f32 	%f224, 0f32BE57D0;
	fma.rn.f32 	%f225, %f224, %f222, %f223;
	mov.f32 	%f226, 0fB63F8A14;
	fma.rn.f32 	%f227, %f225, %f222, %f226;
	mov.f32 	%f228, 0f38427E02;
	fma.rn.f32 	%f229, %f227, %f222, %f228;
	mov.f32 	%f230, 0f3919BB1C;
	fma.rn.f32 	%f231, %f229, %f222, %f230;
	mov.f32 	%f232, 0fBB0DF1FD;
	fma.rn.f32 	%f233, %f231, %f222, %f232;
	mov.f32 	%f234, 0fBB885189;
	fma.rn.f32 	%f235, %f233, %f222, %f234;
	mov.f32 	%f236, 0f3D50AEC1;
	fma.rn.f32 	%f237, %f235, %f222, %f236;
	mov.f32 	%f238, 0f3D005CFC;
	fma.rn.f32 	%f239, %f237, %f222, %f238;
	mov.f32 	%f240, 0fBEAE3E2B;
	fma.rn.f32 	%f241, %f239, %f222, %f240;
	mul.f32 	%f333, %f222, %f241;
	bra.uni 	BB55_84;

BB55_48:
	add.f32 	%f242, %f2, 0fC109893D;
	add.f32 	%f243, %f242, 0fB4E6169B;
	mov.f32 	%f244, 0f3602902E;
	mov.f32 	%f245, 0f350CF383;
	fma.rn.f32 	%f246, %f245, %f243, %f244;
	mov.f32 	%f247, 0fB8375F71;
	fma.rn.f32 	%f248, %f246, %f243, %f247;
	mov.f32 	%f249, 0fB8D9FAA8;
	fma.rn.f32 	%f250, %f248, %f243, %f249;
	mov.f32 	%f251, 0f3B03D19A;
	fma.rn.f32 	%f252, %f250, %f243, %f251;
	mov.f32 	%f253, 0f3B1E736D;
	fma.rn.f32 	%f254, %f252, %f243, %f253;
	mov.f32 	%f255, 0fBD31CAE5;
	fma.rn.f32 	%f256, %f254, %f243, %f255;
	mov.f32 	%f257, 0fBC8159B6;
	fma.rn.f32 	%f258, %f256, %f243, %f257;
	mov.f32 	%f259, 0f3E8AFCCA;
	fma.rn.f32 	%f260, %f258, %f243, %f259;
	mul.f32 	%f333, %f243, %f260;
	bra.uni 	BB55_84;

BB55_32:
	mov.f32 	%f178, 0fBAB6061A;
	mov.f32 	%f179, 0f37CCF5CE;
	fma.rn.f32 	%f323, %f179, %f20, %f178;

BB55_34:
	@%p24 bra 	BB55_36;
	bra.uni 	BB55_35;

BB55_36:
	mov.f32 	%f185, 0fBE2AAAA3;
	fma.rn.f32 	%f186, %f323, %f20, %f185;
	mov.f32 	%f187, 0f00000000;
	fma.rn.f32 	%f324, %f186, %f20, %f187;
	bra.uni 	BB55_37;

BB55_35:
	mov.f32 	%f182, 0f3D2AAAA5;
	fma.rn.f32 	%f183, %f323, %f20, %f182;
	fma.rn.f32 	%f324, %f183, %f20, %f96;

BB55_37:
	fma.rn.f32 	%f325, %f324, %f322, %f322;
	@%p24 bra 	BB55_39;

	fma.rn.f32 	%f325, %f324, %f20, %f145;

BB55_39:
	and.b32  	%r246, %r71, 2;
	setp.eq.s32	%p27, %r246, 0;
	@%p27 bra 	BB55_41;

	mov.f32 	%f189, 0f00000000;
	mov.f32 	%f190, 0fBF800000;
	fma.rn.f32 	%f325, %f325, %f190, %f189;

BB55_41:
	mul.f32 	%f326, %f10, %f325;

BB55_42:
	setp.eq.f32	%p28, %f2, 0f00000000;
	selp.f32	%f191, 0fFF800000, %f319, %p28;
	neg.f32 	%f192, %f326;
	setp.lt.f32	%p29, %f2, 0f00000000;
	selp.f32	%f193, %f192, %f326, %p29;
	and.b32  	%r248, %r151, -2147483648;
	mov.b32 	 %r249, %f193;
	and.b32  	%r250, %r249, 2147483647;
	or.b32  	%r251, %r250, %r248;
	mov.b32 	 %f194, %r251;
	setp.lt.f32	%p30, %f7, 0f0DA24260;
	selp.f32	%f195, %f194, %f193, %p30;
	mov.f32 	%f196, 0fBF800000;
	div.rn.f32 	%f197, %f196, %f2;
	fma.rn.f32 	%f198, %f191, %f195, %f197;
	mul.f32 	%f199, %f198, 0f3F22F983;
	fma.rn.f32 	%f333, %f2, %f3, %f199;

BB55_84:
	setp.lt.f32	%p56, %f1, 0f00000000;
	selp.f32	%f318, 0fFFC00000, %f333, %p56;
	mul.lo.s32 	%r344, %r347, %r145;
	mul.wide.s32 	%rd51, %r344, 4;
	add.s64 	%rd52, %rd50, %rd51;
	st.global.f32 	[%rd52], %f318;
	mov.u32 	%r346, %nctaid.x;
	mad.lo.s32 	%r347, %r346, %r147, %r347;
	setp.lt.s32	%p57, %r347, %r144;
	@%p57 bra 	BB55_2;

BB55_85:
	ret;
}

	// .globl	map2_add_float
.visible .entry map2_add_float(
	.param .u32 map2_add_float_param_0,
	.param .u64 map2_add_float_param_1,
	.param .u32 map2_add_float_param_2,
	.param .u64 map2_add_float_param_3,
	.param .u32 map2_add_float_param_4,
	.param .u64 map2_add_float_param_5,
	.param .u32 map2_add_float_param_6
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<17>;
	.reg .b64 	%rd<13>;


	ld.param.u32 	%r6, [map2_add_float_param_0];
	ld.param.u64 	%rd4, [map2_add_float_param_1];
	ld.param.u32 	%r7, [map2_add_float_param_2];
	ld.param.u64 	%rd5, [map2_add_float_param_3];
	ld.param.u32 	%r8, [map2_add_float_param_4];
	ld.param.u64 	%rd6, [map2_add_float_param_5];
	ld.param.u32 	%r9, [map2_add_float_param_6];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r10, %ctaid.x;
	mov.u32 	%r11, %tid.x;
	mad.lo.s32 	%r16, %r1, %r10, %r11;
	setp.ge.s32	%p1, %r16, %r6;
	@%p1 bra 	BB56_3;

	cvta.to.global.u64 	%rd1, %rd4;
	cvta.to.global.u64 	%rd2, %rd6;
	cvta.to.global.u64 	%rd3, %rd5;
	mov.u32 	%r12, %nctaid.x;
	mul.lo.s32 	%r3, %r12, %r1;

BB56_2:
	mul.lo.s32 	%r13, %r16, %r8;
	mul.wide.s32 	%rd7, %r13, 4;
	add.s64 	%rd8, %rd3, %rd7;
	mul.lo.s32 	%r14, %r16, %r9;
	mul.wide.s32 	%rd9, %r14, 4;
	add.s64 	%rd10, %rd2, %rd9;
	ld.global.f32 	%f1, [%rd10];
	ld.global.f32 	%f2, [%rd8];
	add.f32 	%f3, %f2, %f1;
	mul.lo.s32 	%r15, %r16, %r7;
	mul.wide.s32 	%rd11, %r15, 4;
	add.s64 	%rd12, %rd1, %rd11;
	st.global.f32 	[%rd12], %f3;
	add.s32 	%r16, %r3, %r16;
	setp.lt.s32	%p2, %r16, %r6;
	@%p2 bra 	BB56_2;

BB56_3:
	ret;
}

	// .globl	map2_v_s_add_float
.visible .entry map2_v_s_add_float(
	.param .u32 map2_v_s_add_float_param_0,
	.param .u64 map2_v_s_add_float_param_1,
	.param .u32 map2_v_s_add_float_param_2,
	.param .u64 map2_v_s_add_float_param_3,
	.param .u32 map2_v_s_add_float_param_4,
	.param .f32 map2_v_s_add_float_param_5
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<15>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r6, [map2_v_s_add_float_param_0];
	ld.param.u64 	%rd3, [map2_v_s_add_float_param_1];
	ld.param.u32 	%r7, [map2_v_s_add_float_param_2];
	ld.param.u64 	%rd4, [map2_v_s_add_float_param_3];
	ld.param.u32 	%r8, [map2_v_s_add_float_param_4];
	ld.param.f32 	%f1, [map2_v_s_add_float_param_5];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r14, %r1, %r9, %r10;
	setp.ge.s32	%p1, %r14, %r6;
	@%p1 bra 	BB57_3;

	cvta.to.global.u64 	%rd1, %rd3;
	cvta.to.global.u64 	%rd2, %rd4;
	mov.u32 	%r11, %nctaid.x;
	mul.lo.s32 	%r3, %r11, %r1;

BB57_2:
	mul.lo.s32 	%r12, %r14, %r8;
	mul.wide.s32 	%rd5, %r12, 4;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.f32 	%f2, [%rd6];
	add.f32 	%f3, %f2, %f1;
	mul.lo.s32 	%r13, %r14, %r7;
	mul.wide.s32 	%rd7, %r13, 4;
	add.s64 	%rd8, %rd1, %rd7;
	st.global.f32 	[%rd8], %f3;
	add.s32 	%r14, %r3, %r14;
	setp.lt.s32	%p2, %r14, %r6;
	@%p2 bra 	BB57_2;

BB57_3:
	ret;
}

	// .globl	map2_s_v_add_float
.visible .entry map2_s_v_add_float(
	.param .u32 map2_s_v_add_float_param_0,
	.param .u64 map2_s_v_add_float_param_1,
	.param .u32 map2_s_v_add_float_param_2,
	.param .f32 map2_s_v_add_float_param_3,
	.param .u64 map2_s_v_add_float_param_4,
	.param .u32 map2_s_v_add_float_param_5
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<15>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r6, [map2_s_v_add_float_param_0];
	ld.param.u64 	%rd3, [map2_s_v_add_float_param_1];
	ld.param.u32 	%r7, [map2_s_v_add_float_param_2];
	ld.param.f32 	%f1, [map2_s_v_add_float_param_3];
	ld.param.u64 	%rd4, [map2_s_v_add_float_param_4];
	ld.param.u32 	%r8, [map2_s_v_add_float_param_5];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r14, %r1, %r9, %r10;
	setp.ge.s32	%p1, %r14, %r6;
	@%p1 bra 	BB58_3;

	cvta.to.global.u64 	%rd1, %rd3;
	cvta.to.global.u64 	%rd2, %rd4;
	mov.u32 	%r11, %nctaid.x;
	mul.lo.s32 	%r3, %r11, %r1;

BB58_2:
	mul.lo.s32 	%r12, %r14, %r8;
	mul.wide.s32 	%rd5, %r12, 4;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.f32 	%f2, [%rd6];
	add.f32 	%f3, %f2, %f1;
	mul.lo.s32 	%r13, %r14, %r7;
	mul.wide.s32 	%rd7, %r13, 4;
	add.s64 	%rd8, %rd1, %rd7;
	st.global.f32 	[%rd8], %f3;
	add.s32 	%r14, %r3, %r14;
	setp.lt.s32	%p2, %r14, %r6;
	@%p2 bra 	BB58_2;

BB58_3:
	ret;
}

	// .globl	map2_sub_float
.visible .entry map2_sub_float(
	.param .u32 map2_sub_float_param_0,
	.param .u64 map2_sub_float_param_1,
	.param .u32 map2_sub_float_param_2,
	.param .u64 map2_sub_float_param_3,
	.param .u32 map2_sub_float_param_4,
	.param .u64 map2_sub_float_param_5,
	.param .u32 map2_sub_float_param_6
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<17>;
	.reg .b64 	%rd<13>;


	ld.param.u32 	%r6, [map2_sub_float_param_0];
	ld.param.u64 	%rd4, [map2_sub_float_param_1];
	ld.param.u32 	%r7, [map2_sub_float_param_2];
	ld.param.u64 	%rd5, [map2_sub_float_param_3];
	ld.param.u32 	%r8, [map2_sub_float_param_4];
	ld.param.u64 	%rd6, [map2_sub_float_param_5];
	ld.param.u32 	%r9, [map2_sub_float_param_6];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r10, %ctaid.x;
	mov.u32 	%r11, %tid.x;
	mad.lo.s32 	%r16, %r1, %r10, %r11;
	setp.ge.s32	%p1, %r16, %r6;
	@%p1 bra 	BB59_3;

	cvta.to.global.u64 	%rd1, %rd4;
	cvta.to.global.u64 	%rd2, %rd6;
	cvta.to.global.u64 	%rd3, %rd5;
	mov.u32 	%r12, %nctaid.x;
	mul.lo.s32 	%r3, %r12, %r1;

BB59_2:
	mul.lo.s32 	%r13, %r16, %r8;
	mul.wide.s32 	%rd7, %r13, 4;
	add.s64 	%rd8, %rd3, %rd7;
	mul.lo.s32 	%r14, %r16, %r9;
	mul.wide.s32 	%rd9, %r14, 4;
	add.s64 	%rd10, %rd2, %rd9;
	ld.global.f32 	%f1, [%rd10];
	ld.global.f32 	%f2, [%rd8];
	sub.f32 	%f3, %f2, %f1;
	mul.lo.s32 	%r15, %r16, %r7;
	mul.wide.s32 	%rd11, %r15, 4;
	add.s64 	%rd12, %rd1, %rd11;
	st.global.f32 	[%rd12], %f3;
	add.s32 	%r16, %r3, %r16;
	setp.lt.s32	%p2, %r16, %r6;
	@%p2 bra 	BB59_2;

BB59_3:
	ret;
}

	// .globl	map2_v_s_sub_float
.visible .entry map2_v_s_sub_float(
	.param .u32 map2_v_s_sub_float_param_0,
	.param .u64 map2_v_s_sub_float_param_1,
	.param .u32 map2_v_s_sub_float_param_2,
	.param .u64 map2_v_s_sub_float_param_3,
	.param .u32 map2_v_s_sub_float_param_4,
	.param .f32 map2_v_s_sub_float_param_5
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<15>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r6, [map2_v_s_sub_float_param_0];
	ld.param.u64 	%rd3, [map2_v_s_sub_float_param_1];
	ld.param.u32 	%r7, [map2_v_s_sub_float_param_2];
	ld.param.u64 	%rd4, [map2_v_s_sub_float_param_3];
	ld.param.u32 	%r8, [map2_v_s_sub_float_param_4];
	ld.param.f32 	%f1, [map2_v_s_sub_float_param_5];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r14, %r1, %r9, %r10;
	setp.ge.s32	%p1, %r14, %r6;
	@%p1 bra 	BB60_3;

	cvta.to.global.u64 	%rd1, %rd3;
	cvta.to.global.u64 	%rd2, %rd4;
	mov.u32 	%r11, %nctaid.x;
	mul.lo.s32 	%r3, %r11, %r1;

BB60_2:
	mul.lo.s32 	%r12, %r14, %r8;
	mul.wide.s32 	%rd5, %r12, 4;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.f32 	%f2, [%rd6];
	sub.f32 	%f3, %f2, %f1;
	mul.lo.s32 	%r13, %r14, %r7;
	mul.wide.s32 	%rd7, %r13, 4;
	add.s64 	%rd8, %rd1, %rd7;
	st.global.f32 	[%rd8], %f3;
	add.s32 	%r14, %r3, %r14;
	setp.lt.s32	%p2, %r14, %r6;
	@%p2 bra 	BB60_2;

BB60_3:
	ret;
}

	// .globl	map2_s_v_sub_float
.visible .entry map2_s_v_sub_float(
	.param .u32 map2_s_v_sub_float_param_0,
	.param .u64 map2_s_v_sub_float_param_1,
	.param .u32 map2_s_v_sub_float_param_2,
	.param .f32 map2_s_v_sub_float_param_3,
	.param .u64 map2_s_v_sub_float_param_4,
	.param .u32 map2_s_v_sub_float_param_5
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<15>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r6, [map2_s_v_sub_float_param_0];
	ld.param.u64 	%rd3, [map2_s_v_sub_float_param_1];
	ld.param.u32 	%r7, [map2_s_v_sub_float_param_2];
	ld.param.f32 	%f1, [map2_s_v_sub_float_param_3];
	ld.param.u64 	%rd4, [map2_s_v_sub_float_param_4];
	ld.param.u32 	%r8, [map2_s_v_sub_float_param_5];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r14, %r1, %r9, %r10;
	setp.ge.s32	%p1, %r14, %r6;
	@%p1 bra 	BB61_3;

	cvta.to.global.u64 	%rd1, %rd3;
	cvta.to.global.u64 	%rd2, %rd4;
	mov.u32 	%r11, %nctaid.x;
	mul.lo.s32 	%r3, %r11, %r1;

BB61_2:
	mul.lo.s32 	%r12, %r14, %r8;
	mul.wide.s32 	%rd5, %r12, 4;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.f32 	%f2, [%rd6];
	sub.f32 	%f3, %f1, %f2;
	mul.lo.s32 	%r13, %r14, %r7;
	mul.wide.s32 	%rd7, %r13, 4;
	add.s64 	%rd8, %rd1, %rd7;
	st.global.f32 	[%rd8], %f3;
	add.s32 	%r14, %r3, %r14;
	setp.lt.s32	%p2, %r14, %r6;
	@%p2 bra 	BB61_2;

BB61_3:
	ret;
}

	// .globl	map2_mul_float
.visible .entry map2_mul_float(
	.param .u32 map2_mul_float_param_0,
	.param .u64 map2_mul_float_param_1,
	.param .u32 map2_mul_float_param_2,
	.param .u64 map2_mul_float_param_3,
	.param .u32 map2_mul_float_param_4,
	.param .u64 map2_mul_float_param_5,
	.param .u32 map2_mul_float_param_6
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<17>;
	.reg .b64 	%rd<13>;


	ld.param.u32 	%r6, [map2_mul_float_param_0];
	ld.param.u64 	%rd4, [map2_mul_float_param_1];
	ld.param.u32 	%r7, [map2_mul_float_param_2];
	ld.param.u64 	%rd5, [map2_mul_float_param_3];
	ld.param.u32 	%r8, [map2_mul_float_param_4];
	ld.param.u64 	%rd6, [map2_mul_float_param_5];
	ld.param.u32 	%r9, [map2_mul_float_param_6];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r10, %ctaid.x;
	mov.u32 	%r11, %tid.x;
	mad.lo.s32 	%r16, %r1, %r10, %r11;
	setp.ge.s32	%p1, %r16, %r6;
	@%p1 bra 	BB62_3;

	cvta.to.global.u64 	%rd1, %rd4;
	cvta.to.global.u64 	%rd2, %rd6;
	cvta.to.global.u64 	%rd3, %rd5;
	mov.u32 	%r12, %nctaid.x;
	mul.lo.s32 	%r3, %r12, %r1;

BB62_2:
	mul.lo.s32 	%r13, %r16, %r8;
	mul.wide.s32 	%rd7, %r13, 4;
	add.s64 	%rd8, %rd3, %rd7;
	mul.lo.s32 	%r14, %r16, %r9;
	mul.wide.s32 	%rd9, %r14, 4;
	add.s64 	%rd10, %rd2, %rd9;
	ld.global.f32 	%f1, [%rd10];
	ld.global.f32 	%f2, [%rd8];
	mul.f32 	%f3, %f2, %f1;
	mul.lo.s32 	%r15, %r16, %r7;
	mul.wide.s32 	%rd11, %r15, 4;
	add.s64 	%rd12, %rd1, %rd11;
	st.global.f32 	[%rd12], %f3;
	add.s32 	%r16, %r3, %r16;
	setp.lt.s32	%p2, %r16, %r6;
	@%p2 bra 	BB62_2;

BB62_3:
	ret;
}

	// .globl	map2_v_s_mul_float
.visible .entry map2_v_s_mul_float(
	.param .u32 map2_v_s_mul_float_param_0,
	.param .u64 map2_v_s_mul_float_param_1,
	.param .u32 map2_v_s_mul_float_param_2,
	.param .u64 map2_v_s_mul_float_param_3,
	.param .u32 map2_v_s_mul_float_param_4,
	.param .f32 map2_v_s_mul_float_param_5
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<15>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r6, [map2_v_s_mul_float_param_0];
	ld.param.u64 	%rd3, [map2_v_s_mul_float_param_1];
	ld.param.u32 	%r7, [map2_v_s_mul_float_param_2];
	ld.param.u64 	%rd4, [map2_v_s_mul_float_param_3];
	ld.param.u32 	%r8, [map2_v_s_mul_float_param_4];
	ld.param.f32 	%f1, [map2_v_s_mul_float_param_5];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r14, %r1, %r9, %r10;
	setp.ge.s32	%p1, %r14, %r6;
	@%p1 bra 	BB63_3;

	cvta.to.global.u64 	%rd1, %rd3;
	cvta.to.global.u64 	%rd2, %rd4;
	mov.u32 	%r11, %nctaid.x;
	mul.lo.s32 	%r3, %r11, %r1;

BB63_2:
	mul.lo.s32 	%r12, %r14, %r8;
	mul.wide.s32 	%rd5, %r12, 4;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.f32 	%f2, [%rd6];
	mul.f32 	%f3, %f2, %f1;
	mul.lo.s32 	%r13, %r14, %r7;
	mul.wide.s32 	%rd7, %r13, 4;
	add.s64 	%rd8, %rd1, %rd7;
	st.global.f32 	[%rd8], %f3;
	add.s32 	%r14, %r3, %r14;
	setp.lt.s32	%p2, %r14, %r6;
	@%p2 bra 	BB63_2;

BB63_3:
	ret;
}

	// .globl	map2_s_v_mul_float
.visible .entry map2_s_v_mul_float(
	.param .u32 map2_s_v_mul_float_param_0,
	.param .u64 map2_s_v_mul_float_param_1,
	.param .u32 map2_s_v_mul_float_param_2,
	.param .f32 map2_s_v_mul_float_param_3,
	.param .u64 map2_s_v_mul_float_param_4,
	.param .u32 map2_s_v_mul_float_param_5
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<15>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r6, [map2_s_v_mul_float_param_0];
	ld.param.u64 	%rd3, [map2_s_v_mul_float_param_1];
	ld.param.u32 	%r7, [map2_s_v_mul_float_param_2];
	ld.param.f32 	%f1, [map2_s_v_mul_float_param_3];
	ld.param.u64 	%rd4, [map2_s_v_mul_float_param_4];
	ld.param.u32 	%r8, [map2_s_v_mul_float_param_5];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r14, %r1, %r9, %r10;
	setp.ge.s32	%p1, %r14, %r6;
	@%p1 bra 	BB64_3;

	cvta.to.global.u64 	%rd1, %rd3;
	cvta.to.global.u64 	%rd2, %rd4;
	mov.u32 	%r11, %nctaid.x;
	mul.lo.s32 	%r3, %r11, %r1;

BB64_2:
	mul.lo.s32 	%r12, %r14, %r8;
	mul.wide.s32 	%rd5, %r12, 4;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.f32 	%f2, [%rd6];
	mul.f32 	%f3, %f2, %f1;
	mul.lo.s32 	%r13, %r14, %r7;
	mul.wide.s32 	%rd7, %r13, 4;
	add.s64 	%rd8, %rd1, %rd7;
	st.global.f32 	[%rd8], %f3;
	add.s32 	%r14, %r3, %r14;
	setp.lt.s32	%p2, %r14, %r6;
	@%p2 bra 	BB64_2;

BB64_3:
	ret;
}

	// .globl	map2_div_float
.visible .entry map2_div_float(
	.param .u32 map2_div_float_param_0,
	.param .u64 map2_div_float_param_1,
	.param .u32 map2_div_float_param_2,
	.param .u64 map2_div_float_param_3,
	.param .u32 map2_div_float_param_4,
	.param .u64 map2_div_float_param_5,
	.param .u32 map2_div_float_param_6
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<17>;
	.reg .b64 	%rd<13>;


	ld.param.u32 	%r6, [map2_div_float_param_0];
	ld.param.u64 	%rd4, [map2_div_float_param_1];
	ld.param.u32 	%r7, [map2_div_float_param_2];
	ld.param.u64 	%rd5, [map2_div_float_param_3];
	ld.param.u32 	%r8, [map2_div_float_param_4];
	ld.param.u64 	%rd6, [map2_div_float_param_5];
	ld.param.u32 	%r9, [map2_div_float_param_6];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r10, %ctaid.x;
	mov.u32 	%r11, %tid.x;
	mad.lo.s32 	%r16, %r1, %r10, %r11;
	setp.ge.s32	%p1, %r16, %r6;
	@%p1 bra 	BB65_3;

	cvta.to.global.u64 	%rd1, %rd4;
	cvta.to.global.u64 	%rd2, %rd6;
	cvta.to.global.u64 	%rd3, %rd5;
	mov.u32 	%r12, %nctaid.x;
	mul.lo.s32 	%r3, %r12, %r1;

BB65_2:
	mul.lo.s32 	%r13, %r16, %r8;
	mul.wide.s32 	%rd7, %r13, 4;
	add.s64 	%rd8, %rd3, %rd7;
	mul.lo.s32 	%r14, %r16, %r9;
	mul.wide.s32 	%rd9, %r14, 4;
	add.s64 	%rd10, %rd2, %rd9;
	ld.global.f32 	%f1, [%rd10];
	ld.global.f32 	%f2, [%rd8];
	div.rn.f32 	%f3, %f2, %f1;
	mul.lo.s32 	%r15, %r16, %r7;
	mul.wide.s32 	%rd11, %r15, 4;
	add.s64 	%rd12, %rd1, %rd11;
	st.global.f32 	[%rd12], %f3;
	add.s32 	%r16, %r3, %r16;
	setp.lt.s32	%p2, %r16, %r6;
	@%p2 bra 	BB65_2;

BB65_3:
	ret;
}

	// .globl	map2_v_s_div_float
.visible .entry map2_v_s_div_float(
	.param .u32 map2_v_s_div_float_param_0,
	.param .u64 map2_v_s_div_float_param_1,
	.param .u32 map2_v_s_div_float_param_2,
	.param .u64 map2_v_s_div_float_param_3,
	.param .u32 map2_v_s_div_float_param_4,
	.param .f32 map2_v_s_div_float_param_5
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<15>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r6, [map2_v_s_div_float_param_0];
	ld.param.u64 	%rd3, [map2_v_s_div_float_param_1];
	ld.param.u32 	%r7, [map2_v_s_div_float_param_2];
	ld.param.u64 	%rd4, [map2_v_s_div_float_param_3];
	ld.param.u32 	%r8, [map2_v_s_div_float_param_4];
	ld.param.f32 	%f1, [map2_v_s_div_float_param_5];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r14, %r1, %r9, %r10;
	setp.ge.s32	%p1, %r14, %r6;
	@%p1 bra 	BB66_3;

	cvta.to.global.u64 	%rd1, %rd3;
	cvta.to.global.u64 	%rd2, %rd4;
	mov.u32 	%r11, %nctaid.x;
	mul.lo.s32 	%r3, %r11, %r1;

BB66_2:
	mul.lo.s32 	%r12, %r14, %r8;
	mul.wide.s32 	%rd5, %r12, 4;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.f32 	%f2, [%rd6];
	div.rn.f32 	%f3, %f2, %f1;
	mul.lo.s32 	%r13, %r14, %r7;
	mul.wide.s32 	%rd7, %r13, 4;
	add.s64 	%rd8, %rd1, %rd7;
	st.global.f32 	[%rd8], %f3;
	add.s32 	%r14, %r3, %r14;
	setp.lt.s32	%p2, %r14, %r6;
	@%p2 bra 	BB66_2;

BB66_3:
	ret;
}

	// .globl	map2_s_v_div_float
.visible .entry map2_s_v_div_float(
	.param .u32 map2_s_v_div_float_param_0,
	.param .u64 map2_s_v_div_float_param_1,
	.param .u32 map2_s_v_div_float_param_2,
	.param .f32 map2_s_v_div_float_param_3,
	.param .u64 map2_s_v_div_float_param_4,
	.param .u32 map2_s_v_div_float_param_5
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<15>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r6, [map2_s_v_div_float_param_0];
	ld.param.u64 	%rd3, [map2_s_v_div_float_param_1];
	ld.param.u32 	%r7, [map2_s_v_div_float_param_2];
	ld.param.f32 	%f1, [map2_s_v_div_float_param_3];
	ld.param.u64 	%rd4, [map2_s_v_div_float_param_4];
	ld.param.u32 	%r8, [map2_s_v_div_float_param_5];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r14, %r1, %r9, %r10;
	setp.ge.s32	%p1, %r14, %r6;
	@%p1 bra 	BB67_3;

	cvta.to.global.u64 	%rd1, %rd3;
	cvta.to.global.u64 	%rd2, %rd4;
	mov.u32 	%r11, %nctaid.x;
	mul.lo.s32 	%r3, %r11, %r1;

BB67_2:
	mul.lo.s32 	%r12, %r14, %r8;
	mul.wide.s32 	%rd5, %r12, 4;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.f32 	%f2, [%rd6];
	div.rn.f32 	%f3, %f1, %f2;
	mul.lo.s32 	%r13, %r14, %r7;
	mul.wide.s32 	%rd7, %r13, 4;
	add.s64 	%rd8, %rd1, %rd7;
	st.global.f32 	[%rd8], %f3;
	add.s32 	%r14, %r3, %r14;
	setp.lt.s32	%p2, %r14, %r6;
	@%p2 bra 	BB67_2;

BB67_3:
	ret;
}

	// .globl	map2_mod_float
.visible .entry map2_mod_float(
	.param .u32 map2_mod_float_param_0,
	.param .u64 map2_mod_float_param_1,
	.param .u32 map2_mod_float_param_2,
	.param .u64 map2_mod_float_param_3,
	.param .u32 map2_mod_float_param_4,
	.param .u64 map2_mod_float_param_5,
	.param .u32 map2_mod_float_param_6
)
{
	.reg .pred 	%p<21>;
	.reg .f32 	%f<48>;
	.reg .b32 	%r<34>;
	.reg .b64 	%rd<13>;


	ld.param.u32 	%r8, [map2_mod_float_param_0];
	ld.param.u64 	%rd4, [map2_mod_float_param_1];
	ld.param.u32 	%r9, [map2_mod_float_param_2];
	ld.param.u64 	%rd5, [map2_mod_float_param_3];
	ld.param.u32 	%r10, [map2_mod_float_param_4];
	ld.param.u64 	%rd6, [map2_mod_float_param_5];
	ld.param.u32 	%r11, [map2_mod_float_param_6];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r12, %ctaid.x;
	mov.u32 	%r13, %tid.x;
	mad.lo.s32 	%r33, %r1, %r12, %r13;
	setp.ge.s32	%p1, %r33, %r8;
	@%p1 bra 	BB68_16;

	cvta.to.global.u64 	%rd1, %rd4;
	cvta.to.global.u64 	%rd2, %rd6;
	cvta.to.global.u64 	%rd3, %rd5;
	mov.u32 	%r14, %nctaid.x;
	mul.lo.s32 	%r3, %r14, %r1;

BB68_2:
	mul.lo.s32 	%r15, %r33, %r10;
	mul.wide.s32 	%rd7, %r15, 4;
	add.s64 	%rd8, %rd3, %rd7;
	mul.lo.s32 	%r16, %r33, %r11;
	mul.wide.s32 	%rd9, %r16, 4;
	add.s64 	%rd10, %rd2, %rd9;
	ld.global.f32 	%f1, [%rd8];
	abs.f32 	%f46, %f1;
	ld.global.f32 	%f3, [%rd10];
	abs.f32 	%f4, %f3;
	setp.eq.f32	%p2, %f46, 0f7F800000;
	setp.eq.f32	%p3, %f4, 0f00000000;
	or.pred  	%p4, %p2, %p3;
	mov.f32 	%f47, 0f7FFFFFFF;
	@%p4 bra 	BB68_15;

	setp.ltu.f32	%p5, %f46, %f4;
	@%p5 bra 	BB68_14;
	bra.uni 	BB68_4;

BB68_14:
	setp.gtu.f32	%p18, %f4, 0f7F800000;
	add.f32 	%f41, %f1, %f3;
	selp.f32	%f42, %f41, %f1, %p18;
	add.f32 	%f43, %f1, %f42;
	setp.leu.f32	%p19, %f46, 0f00000000;
	selp.f32	%f47, %f43, %f42, %p19;
	bra.uni 	BB68_15;

BB68_4:
	lg2.approx.f32 	%f21, %f46;
	cvt.rzi.s32.f32	%r17, %f21;
	lg2.approx.f32 	%f22, %f4;
	cvt.rzi.s32.f32	%r18, %f22;
	sub.s32 	%r5, %r17, %r18;
	abs.f32 	%f5, %f4;
	setp.eq.f32	%p6, %f5, 0f00000000;
	setp.eq.f32	%p7, %f5, 0f7F800000;
	or.pred  	%p8, %p6, %p7;
	setp.eq.s32	%p9, %r17, %r18;
	or.pred  	%p10, %p8, %p9;
	@%p10 bra 	BB68_10;
	bra.uni 	BB68_5;

BB68_10:
	setp.leu.f32	%p13, %f5, 0f00000000;
	add.f32 	%f37, %f4, %f4;
	selp.f32	%f44, %f37, %f4, %p13;
	bra.uni 	BB68_11;

BB68_5:
	abs.s32 	%r6, %r5;
	setp.lt.s32	%p11, %r6, 126;
	@%p11 bra 	BB68_9;
	bra.uni 	BB68_6;

BB68_9:
	cvt.rn.f32.s32	%f36, %r5;
	// inline asm
	ex2.approx.ftz.f32 %f35,%f36;
	// inline asm
	mul.f32 	%f44, %f4, %f35;
	bra.uni 	BB68_11;

BB68_6:
	setp.lt.s32	%p12, %r6, 252;
	@%p12 bra 	BB68_8;
	bra.uni 	BB68_7;

BB68_8:
	shr.u32 	%r24, %r5, 31;
	add.s32 	%r25, %r5, %r24;
	shr.s32 	%r26, %r25, 1;
	cvt.rn.f32.s32	%f31, %r26;
	// inline asm
	ex2.approx.ftz.f32 %f30,%f31;
	// inline asm
	mul.f32 	%f34, %f4, %f30;
	sub.s32 	%r27, %r5, %r26;
	cvt.rn.f32.s32	%f33, %r27;
	// inline asm
	ex2.approx.ftz.f32 %f32,%f33;
	// inline asm
	mul.f32 	%f44, %f34, %f32;
	bra.uni 	BB68_11;

BB68_7:
	shr.s32 	%r19, %r5, 31;
	shr.u32 	%r20, %r19, 30;
	add.s32 	%r21, %r5, %r20;
	shr.s32 	%r22, %r21, 2;
	cvt.rn.f32.s32	%f24, %r22;
	// inline asm
	ex2.approx.ftz.f32 %f23,%f24;
	// inline asm
	mul.f32 	%f27, %f4, %f23;
	mul.f32 	%f28, %f23, %f27;
	mul.f32 	%f29, %f23, %f28;
	mad.lo.s32 	%r23, %r22, -3, %r5;
	cvt.rn.f32.s32	%f26, %r23;
	// inline asm
	ex2.approx.ftz.f32 %f25,%f26;
	// inline asm
	mul.f32 	%f44, %f25, %f29;

BB68_11:
	mul.f32 	%f38, %f46, 0f3F000000;
	setp.gtu.f32	%p14, %f44, %f38;
	add.f32 	%f39, %f44, %f44;
	selp.f32	%f45, %f44, %f39, %p14;
	setp.ltu.f32	%p15, %f45, %f4;
	@%p15 bra 	BB68_13;

BB68_12:
	sub.f32 	%f40, %f46, %f45;
	setp.ltu.f32	%p16, %f46, %f45;
	selp.f32	%f46, %f46, %f40, %p16;
	mul.f32 	%f45, %f45, 0f3F000000;
	setp.ge.f32	%p17, %f45, %f4;
	@%p17 bra 	BB68_12;

BB68_13:
	mov.b32 	 %r28, %f1;
	and.b32  	%r29, %r28, -2147483648;
	mov.b32 	 %r30, %f46;
	or.b32  	%r31, %r30, %r29;
	mov.b32 	 %f47, %r31;

BB68_15:
	mul.lo.s32 	%r32, %r33, %r9;
	mul.wide.s32 	%rd11, %r32, 4;
	add.s64 	%rd12, %rd1, %rd11;
	st.global.f32 	[%rd12], %f47;
	add.s32 	%r33, %r3, %r33;
	setp.lt.s32	%p20, %r33, %r8;
	@%p20 bra 	BB68_2;

BB68_16:
	ret;
}

	// .globl	map2_v_s_mod_float
.visible .entry map2_v_s_mod_float(
	.param .u32 map2_v_s_mod_float_param_0,
	.param .u64 map2_v_s_mod_float_param_1,
	.param .u32 map2_v_s_mod_float_param_2,
	.param .u64 map2_v_s_mod_float_param_3,
	.param .u32 map2_v_s_mod_float_param_4,
	.param .f32 map2_v_s_mod_float_param_5
)
{
	.reg .pred 	%p<21>;
	.reg .f32 	%f<48>;
	.reg .b32 	%r<32>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r8, [map2_v_s_mod_float_param_0];
	ld.param.u64 	%rd3, [map2_v_s_mod_float_param_1];
	ld.param.u32 	%r9, [map2_v_s_mod_float_param_2];
	ld.param.u64 	%rd4, [map2_v_s_mod_float_param_3];
	ld.param.u32 	%r10, [map2_v_s_mod_float_param_4];
	ld.param.f32 	%f20, [map2_v_s_mod_float_param_5];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r11, %ctaid.x;
	mov.u32 	%r12, %tid.x;
	mad.lo.s32 	%r31, %r1, %r11, %r12;
	setp.ge.s32	%p1, %r31, %r8;
	@%p1 bra 	BB69_16;

	cvta.to.global.u64 	%rd1, %rd3;
	cvta.to.global.u64 	%rd2, %rd4;
	abs.f32 	%f1, %f20;
	mov.u32 	%r13, %nctaid.x;
	mul.lo.s32 	%r3, %r13, %r1;
	add.f32 	%f2, %f1, %f1;

BB69_2:
	mul.lo.s32 	%r14, %r31, %r10;
	mul.wide.s32 	%rd5, %r14, 4;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.f32 	%f3, [%rd6];
	abs.f32 	%f46, %f3;
	setp.eq.f32	%p2, %f46, 0f7F800000;
	setp.eq.f32	%p3, %f1, 0f00000000;
	or.pred  	%p4, %p2, %p3;
	mov.f32 	%f47, 0f7FFFFFFF;
	@%p4 bra 	BB69_15;

	setp.ltu.f32	%p5, %f46, %f1;
	@%p5 bra 	BB69_14;
	bra.uni 	BB69_4;

BB69_14:
	setp.gtu.f32	%p18, %f1, 0f7F800000;
	add.f32 	%f41, %f3, %f20;
	selp.f32	%f42, %f41, %f3, %p18;
	add.f32 	%f43, %f3, %f42;
	setp.leu.f32	%p19, %f46, 0f00000000;
	selp.f32	%f47, %f43, %f42, %p19;
	bra.uni 	BB69_15;

BB69_4:
	lg2.approx.f32 	%f22, %f46;
	cvt.rzi.s32.f32	%r15, %f22;
	lg2.approx.f32 	%f23, %f1;
	cvt.rzi.s32.f32	%r16, %f23;
	sub.s32 	%r5, %r15, %r16;
	abs.f32 	%f5, %f1;
	setp.eq.f32	%p6, %f5, 0f00000000;
	setp.eq.f32	%p7, %f5, 0f7F800000;
	or.pred  	%p8, %p6, %p7;
	setp.eq.s32	%p9, %r15, %r16;
	or.pred  	%p10, %p8, %p9;
	@%p10 bra 	BB69_10;
	bra.uni 	BB69_5;

BB69_10:
	setp.leu.f32	%p13, %f5, 0f00000000;
	selp.f32	%f44, %f2, %f1, %p13;
	bra.uni 	BB69_11;

BB69_5:
	abs.s32 	%r6, %r5;
	setp.lt.s32	%p11, %r6, 126;
	@%p11 bra 	BB69_9;
	bra.uni 	BB69_6;

BB69_9:
	cvt.rn.f32.s32	%f37, %r5;
	// inline asm
	ex2.approx.ftz.f32 %f36,%f37;
	// inline asm
	mul.f32 	%f44, %f1, %f36;
	bra.uni 	BB69_11;

BB69_6:
	setp.lt.s32	%p12, %r6, 252;
	@%p12 bra 	BB69_8;
	bra.uni 	BB69_7;

BB69_8:
	shr.u32 	%r22, %r5, 31;
	add.s32 	%r23, %r5, %r22;
	shr.s32 	%r24, %r23, 1;
	cvt.rn.f32.s32	%f32, %r24;
	// inline asm
	ex2.approx.ftz.f32 %f31,%f32;
	// inline asm
	mul.f32 	%f35, %f1, %f31;
	sub.s32 	%r25, %r5, %r24;
	cvt.rn.f32.s32	%f34, %r25;
	// inline asm
	ex2.approx.ftz.f32 %f33,%f34;
	// inline asm
	mul.f32 	%f44, %f35, %f33;
	bra.uni 	BB69_11;

BB69_7:
	shr.s32 	%r17, %r5, 31;
	shr.u32 	%r18, %r17, 30;
	add.s32 	%r19, %r5, %r18;
	shr.s32 	%r20, %r19, 2;
	cvt.rn.f32.s32	%f25, %r20;
	// inline asm
	ex2.approx.ftz.f32 %f24,%f25;
	// inline asm
	mul.f32 	%f28, %f1, %f24;
	mul.f32 	%f29, %f24, %f28;
	mul.f32 	%f30, %f24, %f29;
	mad.lo.s32 	%r21, %r20, -3, %r5;
	cvt.rn.f32.s32	%f27, %r21;
	// inline asm
	ex2.approx.ftz.f32 %f26,%f27;
	// inline asm
	mul.f32 	%f44, %f26, %f30;

BB69_11:
	mul.f32 	%f38, %f46, 0f3F000000;
	setp.gtu.f32	%p14, %f44, %f38;
	add.f32 	%f39, %f44, %f44;
	selp.f32	%f45, %f44, %f39, %p14;
	setp.ltu.f32	%p15, %f45, %f1;
	@%p15 bra 	BB69_13;

BB69_12:
	sub.f32 	%f40, %f46, %f45;
	setp.ltu.f32	%p16, %f46, %f45;
	selp.f32	%f46, %f46, %f40, %p16;
	mul.f32 	%f45, %f45, 0f3F000000;
	setp.ge.f32	%p17, %f45, %f1;
	@%p17 bra 	BB69_12;

BB69_13:
	mov.b32 	 %r26, %f3;
	and.b32  	%r27, %r26, -2147483648;
	mov.b32 	 %r28, %f46;
	or.b32  	%r29, %r28, %r27;
	mov.b32 	 %f47, %r29;

BB69_15:
	mul.lo.s32 	%r30, %r31, %r9;
	mul.wide.s32 	%rd7, %r30, 4;
	add.s64 	%rd8, %rd1, %rd7;
	st.global.f32 	[%rd8], %f47;
	add.s32 	%r31, %r3, %r31;
	setp.lt.s32	%p20, %r31, %r8;
	@%p20 bra 	BB69_2;

BB69_16:
	ret;
}

	// .globl	map2_s_v_mod_float
.visible .entry map2_s_v_mod_float(
	.param .u32 map2_s_v_mod_float_param_0,
	.param .u64 map2_s_v_mod_float_param_1,
	.param .u32 map2_s_v_mod_float_param_2,
	.param .f32 map2_s_v_mod_float_param_3,
	.param .u64 map2_s_v_mod_float_param_4,
	.param .u32 map2_s_v_mod_float_param_5
)
{
	.reg .pred 	%p<21>;
	.reg .f32 	%f<51>;
	.reg .b32 	%r<32>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r9, [map2_s_v_mod_float_param_0];
	ld.param.u64 	%rd3, [map2_s_v_mod_float_param_1];
	ld.param.u32 	%r10, [map2_s_v_mod_float_param_2];
	ld.param.f32 	%f20, [map2_s_v_mod_float_param_3];
	ld.param.u64 	%rd4, [map2_s_v_mod_float_param_4];
	ld.param.u32 	%r11, [map2_s_v_mod_float_param_5];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r12, %ctaid.x;
	mov.u32 	%r13, %tid.x;
	mad.lo.s32 	%r31, %r1, %r12, %r13;
	setp.ge.s32	%p1, %r31, %r9;
	@%p1 bra 	BB70_16;

	cvta.to.global.u64 	%rd1, %rd3;
	cvta.to.global.u64 	%rd2, %rd4;
	abs.f32 	%f1, %f20;
	mov.u32 	%r14, %nctaid.x;
	mul.lo.s32 	%r3, %r14, %r1;
	mul.f32 	%f2, %f1, 0f3F000000;
	mov.b32 	 %r15, %f20;
	and.b32  	%r4, %r15, -2147483648;

BB70_2:
	mul.lo.s32 	%r16, %r31, %r11;
	mul.wide.s32 	%rd5, %r16, 4;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.f32 	%f3, [%rd6];
	abs.f32 	%f4, %f3;
	setp.eq.f32	%p2, %f4, 0f00000000;
	setp.eq.f32	%p3, %f1, 0f7F800000;
	or.pred  	%p4, %p3, %p2;
	mov.f32 	%f50, 0f7FFFFFFF;
	@%p4 bra 	BB70_15;

	setp.ltu.f32	%p5, %f1, %f4;
	@%p5 bra 	BB70_14;
	bra.uni 	BB70_4;

BB70_14:
	setp.leu.f32	%p18, %f1, 0f00000000;
	add.f32 	%f41, %f3, %f20;
	setp.gtu.f32	%p19, %f4, 0f7F800000;
	selp.f32	%f42, %f41, %f20, %p19;
	add.f32 	%f43, %f42, %f20;
	selp.f32	%f50, %f43, %f42, %p18;
	bra.uni 	BB70_15;

BB70_4:
	lg2.approx.f32 	%f22, %f1;
	cvt.rzi.s32.f32	%r17, %f22;
	lg2.approx.f32 	%f23, %f4;
	cvt.rzi.s32.f32	%r18, %f23;
	sub.s32 	%r6, %r17, %r18;
	abs.f32 	%f5, %f4;
	setp.eq.f32	%p6, %f5, 0f00000000;
	setp.eq.f32	%p7, %f5, 0f7F800000;
	or.pred  	%p8, %p6, %p7;
	setp.eq.s32	%p9, %r17, %r18;
	or.pred  	%p10, %p8, %p9;
	@%p10 bra 	BB70_10;
	bra.uni 	BB70_5;

BB70_10:
	setp.leu.f32	%p13, %f5, 0f00000000;
	add.f32 	%f38, %f4, %f4;
	selp.f32	%f44, %f38, %f4, %p13;
	bra.uni 	BB70_11;

BB70_5:
	abs.s32 	%r7, %r6;
	setp.lt.s32	%p11, %r7, 126;
	@%p11 bra 	BB70_9;
	bra.uni 	BB70_6;

BB70_9:
	cvt.rn.f32.s32	%f37, %r6;
	// inline asm
	ex2.approx.ftz.f32 %f36,%f37;
	// inline asm
	mul.f32 	%f44, %f4, %f36;
	bra.uni 	BB70_11;

BB70_6:
	setp.lt.s32	%p12, %r7, 252;
	@%p12 bra 	BB70_8;
	bra.uni 	BB70_7;

BB70_8:
	shr.u32 	%r24, %r6, 31;
	add.s32 	%r25, %r6, %r24;
	shr.s32 	%r26, %r25, 1;
	cvt.rn.f32.s32	%f32, %r26;
	// inline asm
	ex2.approx.ftz.f32 %f31,%f32;
	// inline asm
	mul.f32 	%f35, %f4, %f31;
	sub.s32 	%r27, %r6, %r26;
	cvt.rn.f32.s32	%f34, %r27;
	// inline asm
	ex2.approx.ftz.f32 %f33,%f34;
	// inline asm
	mul.f32 	%f44, %f35, %f33;
	bra.uni 	BB70_11;

BB70_7:
	shr.s32 	%r19, %r6, 31;
	shr.u32 	%r20, %r19, 30;
	add.s32 	%r21, %r6, %r20;
	shr.s32 	%r22, %r21, 2;
	cvt.rn.f32.s32	%f25, %r22;
	// inline asm
	ex2.approx.ftz.f32 %f24,%f25;
	// inline asm
	mul.f32 	%f28, %f4, %f24;
	mul.f32 	%f29, %f24, %f28;
	mul.f32 	%f30, %f24, %f29;
	mad.lo.s32 	%r23, %r22, -3, %r6;
	cvt.rn.f32.s32	%f27, %r23;
	// inline asm
	ex2.approx.ftz.f32 %f26,%f27;
	// inline asm
	mul.f32 	%f44, %f26, %f30;

BB70_11:
	add.f32 	%f39, %f44, %f44;
	setp.gtu.f32	%p14, %f44, %f2;
	selp.f32	%f45, %f44, %f39, %p14;
	setp.ltu.f32	%p15, %f45, %f4;
	mov.f32 	%f48, %f1;
	mov.f32 	%f49, %f1;
	@%p15 bra 	BB70_13;

BB70_12:
	mov.f32 	%f13, %f49;
	sub.f32 	%f40, %f13, %f45;
	setp.ltu.f32	%p16, %f13, %f45;
	selp.f32	%f14, %f13, %f40, %p16;
	mul.f32 	%f45, %f45, 0f3F000000;
	setp.ge.f32	%p17, %f45, %f4;
	mov.f32 	%f48, %f14;
	mov.f32 	%f49, %f14;
	@%p17 bra 	BB70_12;

BB70_13:
	mov.b32 	 %r28, %f48;
	or.b32  	%r29, %r28, %r4;
	mov.b32 	 %f50, %r29;

BB70_15:
	mul.lo.s32 	%r30, %r31, %r10;
	mul.wide.s32 	%rd7, %r30, 4;
	add.s64 	%rd8, %rd1, %rd7;
	st.global.f32 	[%rd8], %f50;
	add.s32 	%r31, %r3, %r31;
	setp.lt.s32	%p20, %r31, %r9;
	@%p20 bra 	BB70_2;

BB70_16:
	ret;
}

	// .globl	map2_pow_float
.visible .entry map2_pow_float(
	.param .u32 map2_pow_float_param_0,
	.param .u64 map2_pow_float_param_1,
	.param .u32 map2_pow_float_param_2,
	.param .u64 map2_pow_float_param_3,
	.param .u32 map2_pow_float_param_4,
	.param .u64 map2_pow_float_param_5,
	.param .u32 map2_pow_float_param_6
)
{
	.reg .pred 	%p<31>;
	.reg .f32 	%f<106>;
	.reg .b32 	%r<40>;
	.reg .b64 	%rd<13>;


	ld.param.u32 	%r6, [map2_pow_float_param_0];
	ld.param.u64 	%rd1, [map2_pow_float_param_1];
	ld.param.u64 	%rd2, [map2_pow_float_param_3];
	ld.param.u64 	%rd3, [map2_pow_float_param_5];
	mov.u32 	%r10, %tid.x;
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r11, %ctaid.x;
	mad.lo.s32 	%r39, %r1, %r11, %r10;
	setp.ge.s32	%p2, %r39, %r6;
	@%p2 bra 	BB71_16;

	mov.u32 	%r12, %nctaid.x;
	mul.lo.s32 	%r3, %r12, %r1;
	cvta.to.global.u64 	%rd4, %rd2;
	cvta.to.global.u64 	%rd7, %rd3;
	cvta.to.global.u64 	%rd10, %rd1;

BB71_2:
	ld.param.u32 	%r38, [map2_pow_float_param_6];
	ld.param.u32 	%r37, [map2_pow_float_param_4];
	mul.lo.s32 	%r13, %r39, %r37;
	mul.wide.s32 	%rd5, %r13, 4;
	add.s64 	%rd6, %rd4, %rd5;
	mul.lo.s32 	%r14, %r39, %r38;
	mul.wide.s32 	%rd8, %r14, 4;
	add.s64 	%rd9, %rd7, %rd8;
	ld.global.f32 	%f1, [%rd9];
	mul.f32 	%f22, %f1, 0f3F000000;
	cvt.rzi.f32.f32	%f23, %f22;
	fma.rn.f32 	%f24, %f23, 0fC0000000, %f1;
	abs.f32 	%f2, %f24;
	ld.global.f32 	%f3, [%rd6];
	abs.f32 	%f4, %f3;
	setp.lt.f32	%p3, %f4, 0f00800000;
	mul.f32 	%f25, %f4, 0f4B800000;
	selp.f32	%f26, 0fC3170000, 0fC2FE0000, %p3;
	selp.f32	%f27, %f25, %f4, %p3;
	mov.b32 	 %r15, %f27;
	and.b32  	%r16, %r15, 8388607;
	or.b32  	%r17, %r16, 1065353216;
	mov.b32 	 %f28, %r17;
	shr.u32 	%r18, %r15, 23;
	cvt.rn.f32.u32	%f29, %r18;
	add.f32 	%f30, %f26, %f29;
	setp.gt.f32	%p4, %f28, 0f3FB504F3;
	mul.f32 	%f31, %f28, 0f3F000000;
	add.f32 	%f32, %f30, 0f3F800000;
	selp.f32	%f33, %f31, %f28, %p4;
	selp.f32	%f34, %f32, %f30, %p4;
	add.f32 	%f35, %f33, 0fBF800000;
	add.f32 	%f19, %f33, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f18,%f19;
	// inline asm
	add.f32 	%f36, %f35, %f35;
	mul.f32 	%f37, %f18, %f36;
	mul.f32 	%f38, %f37, %f37;
	mov.f32 	%f39, 0f3C4CAF63;
	mov.f32 	%f40, 0f3B18F0FE;
	fma.rn.f32 	%f41, %f40, %f38, %f39;
	mov.f32 	%f42, 0f3DAAAABD;
	fma.rn.f32 	%f43, %f41, %f38, %f42;
	mul.rn.f32 	%f44, %f43, %f38;
	mul.rn.f32 	%f45, %f44, %f37;
	sub.f32 	%f46, %f35, %f37;
	neg.f32 	%f47, %f37;
	add.f32 	%f48, %f46, %f46;
	fma.rn.f32 	%f49, %f47, %f35, %f48;
	mul.rn.f32 	%f50, %f18, %f49;
	add.f32 	%f51, %f45, %f37;
	sub.f32 	%f52, %f37, %f51;
	add.f32 	%f53, %f45, %f52;
	add.f32 	%f54, %f50, %f53;
	add.f32 	%f55, %f51, %f54;
	sub.f32 	%f56, %f51, %f55;
	add.f32 	%f57, %f54, %f56;
	mov.f32 	%f58, 0f3F317200;
	mul.rn.f32 	%f59, %f34, %f58;
	mov.f32 	%f60, 0f35BFBE8E;
	mul.rn.f32 	%f61, %f34, %f60;
	add.f32 	%f62, %f59, %f55;
	sub.f32 	%f63, %f59, %f62;
	add.f32 	%f64, %f55, %f63;
	add.f32 	%f65, %f57, %f64;
	add.f32 	%f66, %f61, %f65;
	add.f32 	%f67, %f62, %f66;
	sub.f32 	%f68, %f62, %f67;
	add.f32 	%f69, %f66, %f68;
	abs.f32 	%f5, %f1;
	setp.gt.f32	%p5, %f5, 0f77F684DF;
	mul.f32 	%f70, %f1, 0f39000000;
	selp.f32	%f71, %f70, %f1, %p5;
	mul.rn.f32 	%f72, %f71, %f67;
	neg.f32 	%f73, %f72;
	fma.rn.f32 	%f74, %f71, %f67, %f73;
	fma.rn.f32 	%f75, %f71, %f69, %f74;
	mov.f32 	%f76, 0f00000000;
	fma.rn.f32 	%f77, %f76, %f67, %f75;
	add.rn.f32 	%f78, %f72, %f77;
	neg.f32 	%f79, %f78;
	add.rn.f32 	%f80, %f72, %f79;
	add.rn.f32 	%f81, %f80, %f77;
	mov.b32 	 %r19, %f78;
	setp.eq.s32	%p6, %r19, 1118925336;
	add.s32 	%r20, %r19, -1;
	mov.b32 	 %f82, %r20;
	add.f32 	%f83, %f81, 0f37000000;
	selp.f32	%f84, %f82, %f78, %p6;
	selp.f32	%f6, %f83, %f81, %p6;
	mul.f32 	%f85, %f84, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f86, %f85;
	mov.f32 	%f87, 0fBF317200;
	fma.rn.f32 	%f88, %f86, %f87, %f84;
	mov.f32 	%f89, 0fB5BFBE8E;
	fma.rn.f32 	%f90, %f86, %f89, %f88;
	mul.f32 	%f21, %f90, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f20,%f21;
	// inline asm
	add.f32 	%f91, %f86, 0f00000000;
	ex2.approx.f32 	%f92, %f91;
	mul.f32 	%f93, %f20, %f92;
	setp.lt.f32	%p7, %f84, 0fC2D20000;
	selp.f32	%f94, 0f00000000, %f93, %p7;
	setp.gt.f32	%p8, %f84, 0f42D20000;
	selp.f32	%f104, 0f7F800000, %f94, %p8;
	setp.eq.f32	%p9, %f104, 0f7F800000;
	@%p9 bra 	BB71_4;

	fma.rn.f32 	%f104, %f104, %f6, %f104;

BB71_4:
	setp.lt.f32	%p10, %f3, 0f00000000;
	setp.eq.f32	%p11, %f2, 0f3F800000;
	and.pred  	%p1, %p10, %p11;
	mov.b32 	 %r21, %f104;
	xor.b32  	%r22, %r21, -2147483648;
	mov.b32 	 %f95, %r22;
	selp.f32	%f105, %f95, %f104, %p1;
	setp.eq.f32	%p12, %f3, 0f00000000;
	@%p12 bra 	BB71_7;
	bra.uni 	BB71_5;

BB71_7:
	add.f32 	%f97, %f3, %f3;
	mov.b32 	 %r23, %f97;
	selp.b32	%r24, %r23, 0, %p11;
	or.b32  	%r25, %r24, 2139095040;
	setp.lt.f32	%p16, %f1, 0f00000000;
	selp.b32	%r26, %r25, %r24, %p16;
	mov.b32 	 %f105, %r26;
	bra.uni 	BB71_8;

BB71_5:
	setp.geu.f32	%p13, %f3, 0f00000000;
	@%p13 bra 	BB71_8;

	cvt.rzi.f32.f32	%f96, %f1;
	setp.neu.f32	%p14, %f96, %f1;
	selp.f32	%f105, 0f7FFFFFFF, %f105, %p14;

BB71_8:
	abs.f32 	%f101, %f1;
	add.f32 	%f98, %f4, %f101;
	mov.b32 	 %r27, %f98;
	setp.lt.s32	%p17, %r27, 2139095040;
	@%p17 bra 	BB71_15;

	abs.f32 	%f102, %f1;
	setp.gtu.f32	%p18, %f4, 0f7F800000;
	setp.gtu.f32	%p19, %f102, 0f7F800000;
	or.pred  	%p20, %p18, %p19;
	@%p20 bra 	BB71_14;
	bra.uni 	BB71_10;

BB71_14:
	add.f32 	%f105, %f3, %f1;
	bra.uni 	BB71_15;

BB71_10:
	abs.f32 	%f103, %f1;
	setp.eq.f32	%p21, %f103, 0f7F800000;
	@%p21 bra 	BB71_13;
	bra.uni 	BB71_11;

BB71_13:
	setp.gt.f32	%p24, %f4, 0f3F800000;
	selp.b32	%r31, 2139095040, 0, %p24;
	xor.b32  	%r32, %r31, 2139095040;
	setp.lt.f32	%p25, %f1, 0f00000000;
	selp.b32	%r33, %r32, %r31, %p25;
	mov.b32 	 %f99, %r33;
	setp.eq.f32	%p26, %f3, 0fBF800000;
	selp.f32	%f105, 0f3F800000, %f99, %p26;
	bra.uni 	BB71_15;

BB71_11:
	setp.neu.f32	%p22, %f4, 0f7F800000;
	@%p22 bra 	BB71_15;

	setp.ltu.f32	%p23, %f1, 0f00000000;
	selp.b32	%r28, 0, 2139095040, %p23;
	or.b32  	%r29, %r28, -2147483648;
	selp.b32	%r30, %r29, %r28, %p1;
	mov.b32 	 %f105, %r30;

BB71_15:
	ld.param.u32 	%r36, [map2_pow_float_param_0];
	ld.param.u32 	%r35, [map2_pow_float_param_2];
	setp.eq.f32	%p27, %f1, 0f00000000;
	setp.eq.f32	%p28, %f3, 0f3F800000;
	or.pred  	%p29, %p28, %p27;
	selp.f32	%f100, 0f3F800000, %f105, %p29;
	mul.lo.s32 	%r34, %r39, %r35;
	mul.wide.s32 	%rd11, %r34, 4;
	add.s64 	%rd12, %rd10, %rd11;
	st.global.f32 	[%rd12], %f100;
	add.s32 	%r39, %r3, %r39;
	setp.lt.s32	%p30, %r39, %r36;
	@%p30 bra 	BB71_2;

BB71_16:
	ret;
}

	// .globl	map2_v_s_pow_float
.visible .entry map2_v_s_pow_float(
	.param .u32 map2_v_s_pow_float_param_0,
	.param .u64 map2_v_s_pow_float_param_1,
	.param .u32 map2_v_s_pow_float_param_2,
	.param .u64 map2_v_s_pow_float_param_3,
	.param .u32 map2_v_s_pow_float_param_4,
	.param .f32 map2_v_s_pow_float_param_5
)
{
	.reg .pred 	%p<31>;
	.reg .f32 	%f<103>;
	.reg .b32 	%r<37>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r6, [map2_v_s_pow_float_param_0];
	ld.param.u64 	%rd1, [map2_v_s_pow_float_param_1];
	ld.param.u64 	%rd2, [map2_v_s_pow_float_param_3];
	ld.param.f32 	%f18, [map2_v_s_pow_float_param_5];
	mov.u32 	%r9, %tid.x;
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r10, %ctaid.x;
	mad.lo.s32 	%r36, %r1, %r10, %r9;
	setp.ge.s32	%p2, %r36, %r6;
	@%p2 bra 	BB72_16;

	mul.f32 	%f19, %f18, 0f3F000000;
	cvt.rzi.f32.f32	%f20, %f19;
	fma.rn.f32 	%f21, %f20, 0fC0000000, %f18;
	abs.f32 	%f1, %f21;
	abs.f32 	%f2, %f18;
	setp.gt.f32	%p3, %f2, 0f77F684DF;
	mul.f32 	%f22, %f18, 0f39000000;
	selp.f32	%f3, %f22, %f18, %p3;
	mov.u32 	%r11, %nctaid.x;
	mul.lo.s32 	%r3, %r11, %r1;
	cvta.to.global.u64 	%rd3, %rd2;
	cvta.to.global.u64 	%rd6, %rd1;

BB72_2:
	ld.param.u32 	%r35, [map2_v_s_pow_float_param_4];
	mul.lo.s32 	%r12, %r36, %r35;
	mul.wide.s32 	%rd4, %r12, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f4, [%rd5];
	abs.f32 	%f5, %f4;
	setp.lt.f32	%p4, %f5, 0f00800000;
	mul.f32 	%f27, %f5, 0f4B800000;
	selp.f32	%f28, 0fC3170000, 0fC2FE0000, %p4;
	selp.f32	%f29, %f27, %f5, %p4;
	mov.b32 	 %r13, %f29;
	and.b32  	%r14, %r13, 8388607;
	or.b32  	%r15, %r14, 1065353216;
	mov.b32 	 %f30, %r15;
	shr.u32 	%r16, %r13, 23;
	cvt.rn.f32.u32	%f31, %r16;
	add.f32 	%f32, %f28, %f31;
	setp.gt.f32	%p5, %f30, 0f3FB504F3;
	mul.f32 	%f33, %f30, 0f3F000000;
	add.f32 	%f34, %f32, 0f3F800000;
	selp.f32	%f35, %f33, %f30, %p5;
	selp.f32	%f36, %f34, %f32, %p5;
	add.f32 	%f37, %f35, 0fBF800000;
	add.f32 	%f24, %f35, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f23,%f24;
	// inline asm
	add.f32 	%f38, %f37, %f37;
	mul.f32 	%f39, %f23, %f38;
	mul.f32 	%f40, %f39, %f39;
	mov.f32 	%f41, 0f3C4CAF63;
	mov.f32 	%f42, 0f3B18F0FE;
	fma.rn.f32 	%f43, %f42, %f40, %f41;
	mov.f32 	%f44, 0f3DAAAABD;
	fma.rn.f32 	%f45, %f43, %f40, %f44;
	mul.rn.f32 	%f46, %f45, %f40;
	mul.rn.f32 	%f47, %f46, %f39;
	sub.f32 	%f48, %f37, %f39;
	neg.f32 	%f49, %f39;
	add.f32 	%f50, %f48, %f48;
	fma.rn.f32 	%f51, %f49, %f37, %f50;
	mul.rn.f32 	%f52, %f23, %f51;
	add.f32 	%f53, %f47, %f39;
	sub.f32 	%f54, %f39, %f53;
	add.f32 	%f55, %f47, %f54;
	add.f32 	%f56, %f52, %f55;
	add.f32 	%f57, %f53, %f56;
	sub.f32 	%f58, %f53, %f57;
	add.f32 	%f59, %f56, %f58;
	mov.f32 	%f60, 0f3F317200;
	mul.rn.f32 	%f61, %f36, %f60;
	mov.f32 	%f62, 0f35BFBE8E;
	mul.rn.f32 	%f63, %f36, %f62;
	add.f32 	%f64, %f61, %f57;
	sub.f32 	%f65, %f61, %f64;
	add.f32 	%f66, %f57, %f65;
	add.f32 	%f67, %f59, %f66;
	add.f32 	%f68, %f63, %f67;
	add.f32 	%f69, %f64, %f68;
	sub.f32 	%f70, %f64, %f69;
	add.f32 	%f71, %f68, %f70;
	mul.rn.f32 	%f72, %f3, %f69;
	neg.f32 	%f73, %f72;
	fma.rn.f32 	%f74, %f3, %f69, %f73;
	fma.rn.f32 	%f75, %f3, %f71, %f74;
	mov.f32 	%f76, 0f00000000;
	fma.rn.f32 	%f77, %f76, %f69, %f75;
	add.rn.f32 	%f78, %f72, %f77;
	neg.f32 	%f79, %f78;
	add.rn.f32 	%f80, %f72, %f79;
	add.rn.f32 	%f81, %f80, %f77;
	mov.b32 	 %r17, %f78;
	setp.eq.s32	%p6, %r17, 1118925336;
	add.s32 	%r18, %r17, -1;
	mov.b32 	 %f82, %r18;
	add.f32 	%f83, %f81, 0f37000000;
	selp.f32	%f84, %f82, %f78, %p6;
	selp.f32	%f6, %f83, %f81, %p6;
	mul.f32 	%f85, %f84, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f86, %f85;
	mov.f32 	%f87, 0fBF317200;
	fma.rn.f32 	%f88, %f86, %f87, %f84;
	mov.f32 	%f89, 0fB5BFBE8E;
	fma.rn.f32 	%f90, %f86, %f89, %f88;
	mul.f32 	%f26, %f90, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f25,%f26;
	// inline asm
	add.f32 	%f91, %f86, 0f00000000;
	ex2.approx.f32 	%f92, %f91;
	mul.f32 	%f93, %f25, %f92;
	setp.lt.f32	%p7, %f84, 0fC2D20000;
	selp.f32	%f94, 0f00000000, %f93, %p7;
	setp.gt.f32	%p8, %f84, 0f42D20000;
	selp.f32	%f101, 0f7F800000, %f94, %p8;
	setp.eq.f32	%p9, %f101, 0f7F800000;
	@%p9 bra 	BB72_4;

	fma.rn.f32 	%f101, %f101, %f6, %f101;

BB72_4:
	setp.lt.f32	%p10, %f4, 0f00000000;
	setp.eq.f32	%p11, %f1, 0f3F800000;
	and.pred  	%p1, %p10, %p11;
	mov.b32 	 %r19, %f101;
	xor.b32  	%r20, %r19, -2147483648;
	mov.b32 	 %f95, %r20;
	selp.f32	%f102, %f95, %f101, %p1;
	setp.eq.f32	%p12, %f4, 0f00000000;
	@%p12 bra 	BB72_7;
	bra.uni 	BB72_5;

BB72_7:
	setp.lt.f32	%p15, %f18, 0f00000000;
	add.f32 	%f97, %f4, %f4;
	mov.b32 	 %r21, %f97;
	selp.b32	%r22, %r21, 0, %p11;
	or.b32  	%r23, %r22, 2139095040;
	selp.b32	%r24, %r23, %r22, %p15;
	mov.b32 	 %f102, %r24;
	bra.uni 	BB72_8;

BB72_5:
	setp.geu.f32	%p13, %f4, 0f00000000;
	@%p13 bra 	BB72_8;

	cvt.rzi.f32.f32	%f96, %f18;
	setp.neu.f32	%p14, %f96, %f18;
	selp.f32	%f102, 0f7FFFFFFF, %f102, %p14;

BB72_8:
	add.f32 	%f98, %f5, %f2;
	mov.b32 	 %r25, %f98;
	setp.lt.s32	%p17, %r25, 2139095040;
	@%p17 bra 	BB72_15;

	setp.gtu.f32	%p18, %f2, 0f7F800000;
	setp.gtu.f32	%p19, %f5, 0f7F800000;
	or.pred  	%p20, %p19, %p18;
	@%p20 bra 	BB72_14;
	bra.uni 	BB72_10;

BB72_14:
	add.f32 	%f102, %f4, %f18;
	bra.uni 	BB72_15;

BB72_10:
	setp.eq.f32	%p21, %f2, 0f7F800000;
	@%p21 bra 	BB72_13;
	bra.uni 	BB72_11;

BB72_13:
	setp.lt.f32	%p24, %f18, 0f00000000;
	setp.gt.f32	%p25, %f5, 0f3F800000;
	selp.b32	%r29, 2139095040, 0, %p25;
	xor.b32  	%r30, %r29, 2139095040;
	selp.b32	%r31, %r30, %r29, %p24;
	mov.b32 	 %f99, %r31;
	setp.eq.f32	%p26, %f4, 0fBF800000;
	selp.f32	%f102, 0f3F800000, %f99, %p26;
	bra.uni 	BB72_15;

BB72_11:
	setp.neu.f32	%p22, %f5, 0f7F800000;
	@%p22 bra 	BB72_15;

	setp.ltu.f32	%p23, %f18, 0f00000000;
	selp.b32	%r26, 0, 2139095040, %p23;
	or.b32  	%r27, %r26, -2147483648;
	selp.b32	%r28, %r27, %r26, %p1;
	mov.b32 	 %f102, %r28;

BB72_15:
	ld.param.u32 	%r34, [map2_v_s_pow_float_param_0];
	ld.param.u32 	%r33, [map2_v_s_pow_float_param_2];
	setp.eq.f32	%p27, %f4, 0f3F800000;
	setp.eq.f32	%p28, %f18, 0f00000000;
	or.pred  	%p29, %p27, %p28;
	selp.f32	%f100, 0f3F800000, %f102, %p29;
	mul.lo.s32 	%r32, %r36, %r33;
	mul.wide.s32 	%rd7, %r32, 4;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.f32 	[%rd8], %f100;
	add.s32 	%r36, %r3, %r36;
	setp.lt.s32	%p30, %r36, %r34;
	@%p30 bra 	BB72_2;

BB72_16:
	ret;
}

	// .globl	map2_s_v_pow_float
.visible .entry map2_s_v_pow_float(
	.param .u32 map2_s_v_pow_float_param_0,
	.param .u64 map2_s_v_pow_float_param_1,
	.param .u32 map2_s_v_pow_float_param_2,
	.param .f32 map2_s_v_pow_float_param_3,
	.param .u64 map2_s_v_pow_float_param_4,
	.param .u32 map2_s_v_pow_float_param_5
)
{
	.reg .pred 	%p<31>;
	.reg .f32 	%f<104>;
	.reg .b32 	%r<34>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r4, [map2_s_v_pow_float_param_0];
	ld.param.u64 	%rd1, [map2_s_v_pow_float_param_1];
	ld.param.u32 	%r5, [map2_s_v_pow_float_param_2];
	ld.param.f32 	%f22, [map2_s_v_pow_float_param_3];
	ld.param.u64 	%rd2, [map2_s_v_pow_float_param_4];
	ld.param.u32 	%r6, [map2_s_v_pow_float_param_5];
	mov.u32 	%r7, %tid.x;
	mov.u32 	%r8, %ntid.x;
	mov.u32 	%r9, %ctaid.x;
	mad.lo.s32 	%r33, %r8, %r9, %r7;
	setp.ge.s32	%p2, %r33, %r4;
	@%p2 bra 	BB73_16;

	abs.f32 	%f1, %f22;
	setp.lt.f32	%p3, %f1, 0f00800000;
	mul.f32 	%f23, %f1, 0f4B800000;
	selp.f32	%f24, 0fC3170000, 0fC2FE0000, %p3;
	selp.f32	%f25, %f23, %f1, %p3;
	mov.b32 	 %r10, %f25;
	and.b32  	%r11, %r10, 8388607;
	or.b32  	%r12, %r11, 1065353216;
	mov.b32 	 %f26, %r12;
	shr.u32 	%r13, %r10, 23;
	cvt.rn.f32.u32	%f27, %r13;
	add.f32 	%f28, %f24, %f27;
	setp.gt.f32	%p4, %f26, 0f3FB504F3;
	mul.f32 	%f29, %f26, 0f3F000000;
	add.f32 	%f30, %f28, 0f3F800000;
	selp.f32	%f31, %f29, %f26, %p4;
	selp.f32	%f32, %f30, %f28, %p4;
	add.f32 	%f2, %f31, 0fBF800000;
	add.f32 	%f3, %f31, 0f3F800000;
	add.f32 	%f4, %f2, %f2;
	mov.f32 	%f33, 0f3F317200;
	mul.rn.f32 	%f5, %f32, %f33;
	mov.f32 	%f34, 0f35BFBE8E;
	mul.rn.f32 	%f6, %f32, %f34;
	cvta.to.global.u64 	%rd3, %rd2;
	// inline asm
	rcp.approx.ftz.f32 %f35,%f3;
	// inline asm
	mul.f32 	%f42, %f35, %f4;
	cvta.to.global.u64 	%rd6, %rd1;

BB73_2:
	mul.lo.s32 	%r14, %r33, %r6;
	mul.wide.s32 	%rd4, %r14, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f7, [%rd5];
	mul.f32 	%f39, %f7, 0f3F000000;
	cvt.rzi.f32.f32	%f40, %f39;
	fma.rn.f32 	%f41, %f40, 0fC0000000, %f7;
	abs.f32 	%f8, %f41;
	mul.f32 	%f43, %f42, %f42;
	mov.f32 	%f44, 0f3C4CAF63;
	mov.f32 	%f45, 0f3B18F0FE;
	fma.rn.f32 	%f46, %f45, %f43, %f44;
	mov.f32 	%f47, 0f3DAAAABD;
	fma.rn.f32 	%f48, %f46, %f43, %f47;
	mul.rn.f32 	%f49, %f48, %f43;
	mul.rn.f32 	%f50, %f49, %f42;
	sub.f32 	%f51, %f2, %f42;
	neg.f32 	%f52, %f42;
	add.f32 	%f53, %f51, %f51;
	fma.rn.f32 	%f54, %f52, %f2, %f53;
	mul.rn.f32 	%f55, %f35, %f54;
	add.f32 	%f56, %f50, %f42;
	sub.f32 	%f57, %f42, %f56;
	add.f32 	%f58, %f50, %f57;
	add.f32 	%f59, %f55, %f58;
	add.f32 	%f60, %f56, %f59;
	sub.f32 	%f61, %f56, %f60;
	add.f32 	%f62, %f59, %f61;
	add.f32 	%f63, %f5, %f60;
	sub.f32 	%f64, %f5, %f63;
	add.f32 	%f65, %f60, %f64;
	add.f32 	%f66, %f62, %f65;
	add.f32 	%f67, %f6, %f66;
	add.f32 	%f68, %f63, %f67;
	sub.f32 	%f69, %f63, %f68;
	add.f32 	%f70, %f67, %f69;
	abs.f32 	%f9, %f7;
	setp.gt.f32	%p5, %f9, 0f77F684DF;
	mul.f32 	%f71, %f7, 0f39000000;
	selp.f32	%f72, %f71, %f7, %p5;
	mul.rn.f32 	%f73, %f72, %f68;
	neg.f32 	%f74, %f73;
	fma.rn.f32 	%f75, %f72, %f68, %f74;
	fma.rn.f32 	%f76, %f72, %f70, %f75;
	mov.f32 	%f77, 0f00000000;
	fma.rn.f32 	%f78, %f77, %f68, %f76;
	add.rn.f32 	%f79, %f73, %f78;
	neg.f32 	%f80, %f79;
	add.rn.f32 	%f81, %f73, %f80;
	add.rn.f32 	%f82, %f81, %f78;
	mov.b32 	 %r15, %f79;
	setp.eq.s32	%p6, %r15, 1118925336;
	add.s32 	%r16, %r15, -1;
	mov.b32 	 %f83, %r16;
	add.f32 	%f84, %f82, 0f37000000;
	selp.f32	%f85, %f83, %f79, %p6;
	selp.f32	%f10, %f84, %f82, %p6;
	mul.f32 	%f86, %f85, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f87, %f86;
	mov.f32 	%f88, 0fBF317200;
	fma.rn.f32 	%f89, %f87, %f88, %f85;
	mov.f32 	%f90, 0fB5BFBE8E;
	fma.rn.f32 	%f91, %f87, %f90, %f89;
	mul.f32 	%f38, %f91, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f37,%f38;
	// inline asm
	add.f32 	%f92, %f87, 0f00000000;
	ex2.approx.f32 	%f93, %f92;
	mul.f32 	%f94, %f37, %f93;
	setp.lt.f32	%p7, %f85, 0fC2D20000;
	selp.f32	%f95, 0f00000000, %f94, %p7;
	setp.gt.f32	%p8, %f85, 0f42D20000;
	selp.f32	%f102, 0f7F800000, %f95, %p8;
	setp.eq.f32	%p9, %f102, 0f7F800000;
	@%p9 bra 	BB73_4;

	fma.rn.f32 	%f102, %f102, %f10, %f102;

BB73_4:
	setp.lt.f32	%p10, %f22, 0f00000000;
	setp.eq.f32	%p11, %f8, 0f3F800000;
	and.pred  	%p1, %p10, %p11;
	mov.b32 	 %r17, %f102;
	xor.b32  	%r18, %r17, -2147483648;
	mov.b32 	 %f96, %r18;
	selp.f32	%f103, %f96, %f102, %p1;
	setp.eq.f32	%p12, %f22, 0f00000000;
	@%p12 bra 	BB73_7;
	bra.uni 	BB73_5;

BB73_7:
	add.f32 	%f98, %f22, %f22;
	mov.b32 	 %r19, %f98;
	selp.b32	%r20, %r19, 0, %p11;
	or.b32  	%r21, %r20, 2139095040;
	setp.lt.f32	%p16, %f7, 0f00000000;
	selp.b32	%r22, %r21, %r20, %p16;
	mov.b32 	 %f103, %r22;
	bra.uni 	BB73_8;

BB73_5:
	setp.geu.f32	%p13, %f22, 0f00000000;
	@%p13 bra 	BB73_8;

	cvt.rzi.f32.f32	%f97, %f7;
	setp.neu.f32	%p14, %f97, %f7;
	selp.f32	%f103, 0f7FFFFFFF, %f103, %p14;

BB73_8:
	add.f32 	%f99, %f1, %f9;
	mov.b32 	 %r23, %f99;
	setp.lt.s32	%p17, %r23, 2139095040;
	@%p17 bra 	BB73_15;

	setp.gtu.f32	%p18, %f1, 0f7F800000;
	setp.gtu.f32	%p19, %f9, 0f7F800000;
	or.pred  	%p20, %p18, %p19;
	@%p20 bra 	BB73_14;
	bra.uni 	BB73_10;

BB73_14:
	add.f32 	%f103, %f7, %f22;
	bra.uni 	BB73_15;

BB73_10:
	setp.eq.f32	%p21, %f9, 0f7F800000;
	@%p21 bra 	BB73_13;
	bra.uni 	BB73_11;

BB73_13:
	setp.eq.f32	%p24, %f22, 0fBF800000;
	setp.gt.f32	%p25, %f1, 0f3F800000;
	selp.b32	%r27, 2139095040, 0, %p25;
	xor.b32  	%r28, %r27, 2139095040;
	setp.lt.f32	%p26, %f7, 0f00000000;
	selp.b32	%r29, %r28, %r27, %p26;
	mov.b32 	 %f100, %r29;
	selp.f32	%f103, 0f3F800000, %f100, %p24;
	bra.uni 	BB73_15;

BB73_11:
	setp.neu.f32	%p22, %f1, 0f7F800000;
	@%p22 bra 	BB73_15;

	setp.ltu.f32	%p23, %f7, 0f00000000;
	selp.b32	%r24, 0, 2139095040, %p23;
	or.b32  	%r25, %r24, -2147483648;
	selp.b32	%r26, %r25, %r24, %p1;
	mov.b32 	 %f103, %r26;

BB73_15:
	setp.eq.f32	%p27, %f7, 0f00000000;
	setp.eq.f32	%p28, %f22, 0f3F800000;
	or.pred  	%p29, %p28, %p27;
	selp.f32	%f101, 0f3F800000, %f103, %p29;
	mul.lo.s32 	%r30, %r33, %r5;
	mul.wide.s32 	%rd7, %r30, 4;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.f32 	[%rd8], %f101;
	mov.u32 	%r32, %nctaid.x;
	mad.lo.s32 	%r33, %r32, %r8, %r33;
	setp.lt.s32	%p30, %r33, %r4;
	@%p30 bra 	BB73_2;

BB73_16:
	ret;
}

	// .globl	map2_max_float
.visible .entry map2_max_float(
	.param .u32 map2_max_float_param_0,
	.param .u64 map2_max_float_param_1,
	.param .u32 map2_max_float_param_2,
	.param .u64 map2_max_float_param_3,
	.param .u32 map2_max_float_param_4,
	.param .u64 map2_max_float_param_5,
	.param .u32 map2_max_float_param_6
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<17>;
	.reg .b64 	%rd<13>;


	ld.param.u32 	%r6, [map2_max_float_param_0];
	ld.param.u64 	%rd4, [map2_max_float_param_1];
	ld.param.u32 	%r7, [map2_max_float_param_2];
	ld.param.u64 	%rd5, [map2_max_float_param_3];
	ld.param.u32 	%r8, [map2_max_float_param_4];
	ld.param.u64 	%rd6, [map2_max_float_param_5];
	ld.param.u32 	%r9, [map2_max_float_param_6];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r10, %ctaid.x;
	mov.u32 	%r11, %tid.x;
	mad.lo.s32 	%r16, %r1, %r10, %r11;
	setp.ge.s32	%p1, %r16, %r6;
	@%p1 bra 	BB74_3;

	cvta.to.global.u64 	%rd1, %rd4;
	cvta.to.global.u64 	%rd2, %rd6;
	cvta.to.global.u64 	%rd3, %rd5;
	mov.u32 	%r12, %nctaid.x;
	mul.lo.s32 	%r3, %r12, %r1;

BB74_2:
	mul.lo.s32 	%r13, %r16, %r8;
	mul.wide.s32 	%rd7, %r13, 4;
	add.s64 	%rd8, %rd3, %rd7;
	mul.lo.s32 	%r14, %r16, %r9;
	mul.wide.s32 	%rd9, %r14, 4;
	add.s64 	%rd10, %rd2, %rd9;
	ld.global.f32 	%f1, [%rd10];
	ld.global.f32 	%f2, [%rd8];
	max.f32 	%f3, %f2, %f1;
	mul.lo.s32 	%r15, %r16, %r7;
	mul.wide.s32 	%rd11, %r15, 4;
	add.s64 	%rd12, %rd1, %rd11;
	st.global.f32 	[%rd12], %f3;
	add.s32 	%r16, %r3, %r16;
	setp.lt.s32	%p2, %r16, %r6;
	@%p2 bra 	BB74_2;

BB74_3:
	ret;
}

	// .globl	map2_v_s_max_float
.visible .entry map2_v_s_max_float(
	.param .u32 map2_v_s_max_float_param_0,
	.param .u64 map2_v_s_max_float_param_1,
	.param .u32 map2_v_s_max_float_param_2,
	.param .u64 map2_v_s_max_float_param_3,
	.param .u32 map2_v_s_max_float_param_4,
	.param .f32 map2_v_s_max_float_param_5
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<15>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r6, [map2_v_s_max_float_param_0];
	ld.param.u64 	%rd3, [map2_v_s_max_float_param_1];
	ld.param.u32 	%r7, [map2_v_s_max_float_param_2];
	ld.param.u64 	%rd4, [map2_v_s_max_float_param_3];
	ld.param.u32 	%r8, [map2_v_s_max_float_param_4];
	ld.param.f32 	%f1, [map2_v_s_max_float_param_5];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r14, %r1, %r9, %r10;
	setp.ge.s32	%p1, %r14, %r6;
	@%p1 bra 	BB75_3;

	cvta.to.global.u64 	%rd1, %rd3;
	cvta.to.global.u64 	%rd2, %rd4;
	mov.u32 	%r11, %nctaid.x;
	mul.lo.s32 	%r3, %r11, %r1;

BB75_2:
	mul.lo.s32 	%r12, %r14, %r8;
	mul.wide.s32 	%rd5, %r12, 4;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.f32 	%f2, [%rd6];
	max.f32 	%f3, %f2, %f1;
	mul.lo.s32 	%r13, %r14, %r7;
	mul.wide.s32 	%rd7, %r13, 4;
	add.s64 	%rd8, %rd1, %rd7;
	st.global.f32 	[%rd8], %f3;
	add.s32 	%r14, %r3, %r14;
	setp.lt.s32	%p2, %r14, %r6;
	@%p2 bra 	BB75_2;

BB75_3:
	ret;
}

	// .globl	map2_s_v_max_float
.visible .entry map2_s_v_max_float(
	.param .u32 map2_s_v_max_float_param_0,
	.param .u64 map2_s_v_max_float_param_1,
	.param .u32 map2_s_v_max_float_param_2,
	.param .f32 map2_s_v_max_float_param_3,
	.param .u64 map2_s_v_max_float_param_4,
	.param .u32 map2_s_v_max_float_param_5
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<15>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r6, [map2_s_v_max_float_param_0];
	ld.param.u64 	%rd3, [map2_s_v_max_float_param_1];
	ld.param.u32 	%r7, [map2_s_v_max_float_param_2];
	ld.param.f32 	%f1, [map2_s_v_max_float_param_3];
	ld.param.u64 	%rd4, [map2_s_v_max_float_param_4];
	ld.param.u32 	%r8, [map2_s_v_max_float_param_5];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r14, %r1, %r9, %r10;
	setp.ge.s32	%p1, %r14, %r6;
	@%p1 bra 	BB76_3;

	cvta.to.global.u64 	%rd1, %rd3;
	cvta.to.global.u64 	%rd2, %rd4;
	mov.u32 	%r11, %nctaid.x;
	mul.lo.s32 	%r3, %r11, %r1;

BB76_2:
	mul.lo.s32 	%r12, %r14, %r8;
	mul.wide.s32 	%rd5, %r12, 4;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.f32 	%f2, [%rd6];
	max.f32 	%f3, %f1, %f2;
	mul.lo.s32 	%r13, %r14, %r7;
	mul.wide.s32 	%rd7, %r13, 4;
	add.s64 	%rd8, %rd1, %rd7;
	st.global.f32 	[%rd8], %f3;
	add.s32 	%r14, %r3, %r14;
	setp.lt.s32	%p2, %r14, %r6;
	@%p2 bra 	BB76_2;

BB76_3:
	ret;
}

	// .globl	map2_min_float
.visible .entry map2_min_float(
	.param .u32 map2_min_float_param_0,
	.param .u64 map2_min_float_param_1,
	.param .u32 map2_min_float_param_2,
	.param .u64 map2_min_float_param_3,
	.param .u32 map2_min_float_param_4,
	.param .u64 map2_min_float_param_5,
	.param .u32 map2_min_float_param_6
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<17>;
	.reg .b64 	%rd<13>;


	ld.param.u32 	%r6, [map2_min_float_param_0];
	ld.param.u64 	%rd4, [map2_min_float_param_1];
	ld.param.u32 	%r7, [map2_min_float_param_2];
	ld.param.u64 	%rd5, [map2_min_float_param_3];
	ld.param.u32 	%r8, [map2_min_float_param_4];
	ld.param.u64 	%rd6, [map2_min_float_param_5];
	ld.param.u32 	%r9, [map2_min_float_param_6];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r10, %ctaid.x;
	mov.u32 	%r11, %tid.x;
	mad.lo.s32 	%r16, %r1, %r10, %r11;
	setp.ge.s32	%p1, %r16, %r6;
	@%p1 bra 	BB77_3;

	cvta.to.global.u64 	%rd1, %rd4;
	cvta.to.global.u64 	%rd2, %rd6;
	cvta.to.global.u64 	%rd3, %rd5;
	mov.u32 	%r12, %nctaid.x;
	mul.lo.s32 	%r3, %r12, %r1;

BB77_2:
	mul.lo.s32 	%r13, %r16, %r8;
	mul.wide.s32 	%rd7, %r13, 4;
	add.s64 	%rd8, %rd3, %rd7;
	mul.lo.s32 	%r14, %r16, %r9;
	mul.wide.s32 	%rd9, %r14, 4;
	add.s64 	%rd10, %rd2, %rd9;
	ld.global.f32 	%f1, [%rd10];
	ld.global.f32 	%f2, [%rd8];
	min.f32 	%f3, %f2, %f1;
	mul.lo.s32 	%r15, %r16, %r7;
	mul.wide.s32 	%rd11, %r15, 4;
	add.s64 	%rd12, %rd1, %rd11;
	st.global.f32 	[%rd12], %f3;
	add.s32 	%r16, %r3, %r16;
	setp.lt.s32	%p2, %r16, %r6;
	@%p2 bra 	BB77_2;

BB77_3:
	ret;
}

	// .globl	map2_v_s_min_float
.visible .entry map2_v_s_min_float(
	.param .u32 map2_v_s_min_float_param_0,
	.param .u64 map2_v_s_min_float_param_1,
	.param .u32 map2_v_s_min_float_param_2,
	.param .u64 map2_v_s_min_float_param_3,
	.param .u32 map2_v_s_min_float_param_4,
	.param .f32 map2_v_s_min_float_param_5
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<15>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r6, [map2_v_s_min_float_param_0];
	ld.param.u64 	%rd3, [map2_v_s_min_float_param_1];
	ld.param.u32 	%r7, [map2_v_s_min_float_param_2];
	ld.param.u64 	%rd4, [map2_v_s_min_float_param_3];
	ld.param.u32 	%r8, [map2_v_s_min_float_param_4];
	ld.param.f32 	%f1, [map2_v_s_min_float_param_5];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r14, %r1, %r9, %r10;
	setp.ge.s32	%p1, %r14, %r6;
	@%p1 bra 	BB78_3;

	cvta.to.global.u64 	%rd1, %rd3;
	cvta.to.global.u64 	%rd2, %rd4;
	mov.u32 	%r11, %nctaid.x;
	mul.lo.s32 	%r3, %r11, %r1;

BB78_2:
	mul.lo.s32 	%r12, %r14, %r8;
	mul.wide.s32 	%rd5, %r12, 4;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.f32 	%f2, [%rd6];
	min.f32 	%f3, %f2, %f1;
	mul.lo.s32 	%r13, %r14, %r7;
	mul.wide.s32 	%rd7, %r13, 4;
	add.s64 	%rd8, %rd1, %rd7;
	st.global.f32 	[%rd8], %f3;
	add.s32 	%r14, %r3, %r14;
	setp.lt.s32	%p2, %r14, %r6;
	@%p2 bra 	BB78_2;

BB78_3:
	ret;
}

	// .globl	map2_s_v_min_float
.visible .entry map2_s_v_min_float(
	.param .u32 map2_s_v_min_float_param_0,
	.param .u64 map2_s_v_min_float_param_1,
	.param .u32 map2_s_v_min_float_param_2,
	.param .f32 map2_s_v_min_float_param_3,
	.param .u64 map2_s_v_min_float_param_4,
	.param .u32 map2_s_v_min_float_param_5
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<15>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r6, [map2_s_v_min_float_param_0];
	ld.param.u64 	%rd3, [map2_s_v_min_float_param_1];
	ld.param.u32 	%r7, [map2_s_v_min_float_param_2];
	ld.param.f32 	%f1, [map2_s_v_min_float_param_3];
	ld.param.u64 	%rd4, [map2_s_v_min_float_param_4];
	ld.param.u32 	%r8, [map2_s_v_min_float_param_5];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r14, %r1, %r9, %r10;
	setp.ge.s32	%p1, %r14, %r6;
	@%p1 bra 	BB79_3;

	cvta.to.global.u64 	%rd1, %rd3;
	cvta.to.global.u64 	%rd2, %rd4;
	mov.u32 	%r11, %nctaid.x;
	mul.lo.s32 	%r3, %r11, %r1;

BB79_2:
	mul.lo.s32 	%r12, %r14, %r8;
	mul.wide.s32 	%rd5, %r12, 4;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.f32 	%f2, [%rd6];
	min.f32 	%f3, %f1, %f2;
	mul.lo.s32 	%r13, %r14, %r7;
	mul.wide.s32 	%rd7, %r13, 4;
	add.s64 	%rd8, %rd1, %rd7;
	st.global.f32 	[%rd8], %f3;
	add.s32 	%r14, %r3, %r14;
	setp.lt.s32	%p2, %r14, %r6;
	@%p2 bra 	BB79_2;

BB79_3:
	ret;
}

	// .globl	map2_set_float
.visible .entry map2_set_float(
	.param .u32 map2_set_float_param_0,
	.param .u64 map2_set_float_param_1,
	.param .u32 map2_set_float_param_2,
	.param .u64 map2_set_float_param_3,
	.param .u32 map2_set_float_param_4,
	.param .u64 map2_set_float_param_5,
	.param .u32 map2_set_float_param_6
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<15>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r6, [map2_set_float_param_0];
	ld.param.u64 	%rd3, [map2_set_float_param_1];
	ld.param.u32 	%r7, [map2_set_float_param_2];
	ld.param.u64 	%rd4, [map2_set_float_param_5];
	ld.param.u32 	%r8, [map2_set_float_param_6];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r14, %r1, %r9, %r10;
	setp.ge.s32	%p1, %r14, %r6;
	@%p1 bra 	BB80_3;

	cvta.to.global.u64 	%rd1, %rd3;
	cvta.to.global.u64 	%rd2, %rd4;
	mov.u32 	%r11, %nctaid.x;
	mul.lo.s32 	%r3, %r11, %r1;

BB80_2:
	mul.lo.s32 	%r12, %r14, %r8;
	mul.wide.s32 	%rd5, %r12, 4;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.f32 	%f1, [%rd6];
	mul.lo.s32 	%r13, %r14, %r7;
	mul.wide.s32 	%rd7, %r13, 4;
	add.s64 	%rd8, %rd1, %rd7;
	st.global.f32 	[%rd8], %f1;
	add.s32 	%r14, %r3, %r14;
	setp.lt.s32	%p2, %r14, %r6;
	@%p2 bra 	BB80_2;

BB80_3:
	ret;
}

	// .globl	map2_v_s_set_float
.visible .entry map2_v_s_set_float(
	.param .u32 map2_v_s_set_float_param_0,
	.param .u64 map2_v_s_set_float_param_1,
	.param .u32 map2_v_s_set_float_param_2,
	.param .u64 map2_v_s_set_float_param_3,
	.param .u32 map2_v_s_set_float_param_4,
	.param .f32 map2_v_s_set_float_param_5
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<13>;
	.reg .b64 	%rd<5>;


	ld.param.u32 	%r6, [map2_v_s_set_float_param_0];
	ld.param.u64 	%rd2, [map2_v_s_set_float_param_1];
	ld.param.u32 	%r7, [map2_v_s_set_float_param_2];
	ld.param.f32 	%f1, [map2_v_s_set_float_param_5];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r8, %ctaid.x;
	mov.u32 	%r9, %tid.x;
	mad.lo.s32 	%r12, %r1, %r8, %r9;
	setp.ge.s32	%p1, %r12, %r6;
	@%p1 bra 	BB81_3;

	cvta.to.global.u64 	%rd1, %rd2;
	mov.u32 	%r10, %nctaid.x;
	mul.lo.s32 	%r3, %r10, %r1;

BB81_2:
	mul.lo.s32 	%r11, %r12, %r7;
	mul.wide.s32 	%rd3, %r11, 4;
	add.s64 	%rd4, %rd1, %rd3;
	st.global.f32 	[%rd4], %f1;
	add.s32 	%r12, %r3, %r12;
	setp.lt.s32	%p2, %r12, %r6;
	@%p2 bra 	BB81_2;

BB81_3:
	ret;
}

	// .globl	map2_s_v_set_float
.visible .entry map2_s_v_set_float(
	.param .u32 map2_s_v_set_float_param_0,
	.param .u64 map2_s_v_set_float_param_1,
	.param .u32 map2_s_v_set_float_param_2,
	.param .f32 map2_s_v_set_float_param_3,
	.param .u64 map2_s_v_set_float_param_4,
	.param .u32 map2_s_v_set_float_param_5
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<15>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r6, [map2_s_v_set_float_param_0];
	ld.param.u64 	%rd3, [map2_s_v_set_float_param_1];
	ld.param.u32 	%r7, [map2_s_v_set_float_param_2];
	ld.param.u64 	%rd4, [map2_s_v_set_float_param_4];
	ld.param.u32 	%r8, [map2_s_v_set_float_param_5];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r14, %r1, %r9, %r10;
	setp.ge.s32	%p1, %r14, %r6;
	@%p1 bra 	BB82_3;

	cvta.to.global.u64 	%rd1, %rd3;
	cvta.to.global.u64 	%rd2, %rd4;
	mov.u32 	%r11, %nctaid.x;
	mul.lo.s32 	%r3, %r11, %r1;

BB82_2:
	mul.lo.s32 	%r12, %r14, %r8;
	mul.wide.s32 	%rd5, %r12, 4;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.f32 	%f1, [%rd6];
	mul.lo.s32 	%r13, %r14, %r7;
	mul.wide.s32 	%rd7, %r13, 4;
	add.s64 	%rd8, %rd1, %rd7;
	st.global.f32 	[%rd8], %f1;
	add.s32 	%r14, %r3, %r14;
	setp.lt.s32	%p2, %r14, %r6;
	@%p2 bra 	BB82_2;

BB82_3:
	ret;
}

	// .globl	reduce_add_float
.visible .entry reduce_add_float(
	.param .u32 reduce_add_float_param_0,
	.param .u64 reduce_add_float_param_1,
	.param .u64 reduce_add_float_param_2,
	.param .u32 reduce_add_float_param_3
)
{
	.reg .pred 	%p<6>;
	.reg .f32 	%f<13>;
	.reg .b32 	%r<25>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r11, [reduce_add_float_param_0];
	ld.param.u64 	%rd2, [reduce_add_float_param_1];
	ld.param.u64 	%rd3, [reduce_add_float_param_2];
	ld.param.u32 	%r12, [reduce_add_float_param_3];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r2, %ctaid.x;
	mov.u32 	%r3, %tid.x;
	mad.lo.s32 	%r23, %r1, %r2, %r3;
	mov.f32 	%f12, 0f00000000;
	setp.ge.s32	%p1, %r23, %r11;
	@%p1 bra 	BB83_3;

	cvta.to.global.u64 	%rd1, %rd3;
	mov.u32 	%r13, %nctaid.x;
	mul.lo.s32 	%r5, %r13, %r1;
	mov.f32 	%f12, 0f00000000;

BB83_2:
	mul.lo.s32 	%r14, %r23, %r12;
	mul.wide.s32 	%rd4, %r14, 4;
	add.s64 	%rd5, %rd1, %rd4;
	ld.global.f32 	%f9, [%rd5];
	add.f32 	%f12, %f12, %f9;
	add.s32 	%r23, %r5, %r23;
	setp.lt.s32	%p2, %r23, %r11;
	@%p2 bra 	BB83_2;

BB83_3:
	bar.sync 	0;
	setp.lt.u32	%p3, %r1, 2;
	@%p3 bra 	BB83_6;

	mov.u32 	%r16, WARP_SZ;
	mov.u32 	%r17, 32;
	sub.s32 	%r18, %r17, %r16;
	shl.b32 	%r19, %r18, 8;
	or.b32  	%r8, %r19, 31;
	mov.u32 	%r24, 1;

BB83_5:
	// inline asm
	shfl.down.b32 %f10, %f12, %r24, %r8;
	// inline asm
	add.f32 	%f12, %f12, %f10;
	shl.b32 	%r24, %r24, 1;
	setp.lt.u32	%p4, %r24, %r1;
	@%p4 bra 	BB83_5;

BB83_6:
	and.b32  	%r22, %r3, 31;
	setp.ne.s32	%p5, %r22, 0;
	@%p5 bra 	BB83_8;

	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.u32 	%rd7, %r2, 4;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.f32 	[%rd8], %f12;

BB83_8:
	ret;
}

	// .globl	reduce_max_float
.visible .entry reduce_max_float(
	.param .u32 reduce_max_float_param_0,
	.param .u64 reduce_max_float_param_1,
	.param .u64 reduce_max_float_param_2,
	.param .u32 reduce_max_float_param_3
)
{
	.reg .pred 	%p<6>;
	.reg .f32 	%f<13>;
	.reg .b32 	%r<25>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r11, [reduce_max_float_param_0];
	ld.param.u64 	%rd2, [reduce_max_float_param_1];
	ld.param.u64 	%rd3, [reduce_max_float_param_2];
	ld.param.u32 	%r12, [reduce_max_float_param_3];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r2, %ctaid.x;
	mov.u32 	%r3, %tid.x;
	mad.lo.s32 	%r23, %r1, %r2, %r3;
	mov.f32 	%f12, 0fFF800000;
	setp.ge.s32	%p1, %r23, %r11;
	@%p1 bra 	BB84_3;

	cvta.to.global.u64 	%rd1, %rd3;
	mov.u32 	%r13, %nctaid.x;
	mul.lo.s32 	%r5, %r13, %r1;
	mov.f32 	%f12, 0fFF800000;

BB84_2:
	mul.lo.s32 	%r14, %r23, %r12;
	mul.wide.s32 	%rd4, %r14, 4;
	add.s64 	%rd5, %rd1, %rd4;
	ld.global.f32 	%f9, [%rd5];
	max.f32 	%f12, %f12, %f9;
	add.s32 	%r23, %r5, %r23;
	setp.lt.s32	%p2, %r23, %r11;
	@%p2 bra 	BB84_2;

BB84_3:
	bar.sync 	0;
	setp.lt.u32	%p3, %r1, 2;
	@%p3 bra 	BB84_6;

	mov.u32 	%r16, WARP_SZ;
	mov.u32 	%r17, 32;
	sub.s32 	%r18, %r17, %r16;
	shl.b32 	%r19, %r18, 8;
	or.b32  	%r8, %r19, 31;
	mov.u32 	%r24, 1;

BB84_5:
	// inline asm
	shfl.down.b32 %f10, %f12, %r24, %r8;
	// inline asm
	max.f32 	%f12, %f12, %f10;
	shl.b32 	%r24, %r24, 1;
	setp.lt.u32	%p4, %r24, %r1;
	@%p4 bra 	BB84_5;

BB84_6:
	and.b32  	%r22, %r3, 31;
	setp.ne.s32	%p5, %r22, 0;
	@%p5 bra 	BB84_8;

	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.u32 	%rd7, %r2, 4;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.f32 	[%rd8], %f12;

BB84_8:
	ret;
}

	// .globl	reduce_min_float
.visible .entry reduce_min_float(
	.param .u32 reduce_min_float_param_0,
	.param .u64 reduce_min_float_param_1,
	.param .u64 reduce_min_float_param_2,
	.param .u32 reduce_min_float_param_3
)
{
	.reg .pred 	%p<6>;
	.reg .f32 	%f<13>;
	.reg .b32 	%r<25>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r11, [reduce_min_float_param_0];
	ld.param.u64 	%rd2, [reduce_min_float_param_1];
	ld.param.u64 	%rd3, [reduce_min_float_param_2];
	ld.param.u32 	%r12, [reduce_min_float_param_3];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r2, %ctaid.x;
	mov.u32 	%r3, %tid.x;
	mad.lo.s32 	%r23, %r1, %r2, %r3;
	mov.f32 	%f12, 0f7F800000;
	setp.ge.s32	%p1, %r23, %r11;
	@%p1 bra 	BB85_3;

	cvta.to.global.u64 	%rd1, %rd3;
	mov.u32 	%r13, %nctaid.x;
	mul.lo.s32 	%r5, %r13, %r1;
	mov.f32 	%f12, 0f7F800000;

BB85_2:
	mul.lo.s32 	%r14, %r23, %r12;
	mul.wide.s32 	%rd4, %r14, 4;
	add.s64 	%rd5, %rd1, %rd4;
	ld.global.f32 	%f9, [%rd5];
	min.f32 	%f12, %f12, %f9;
	add.s32 	%r23, %r5, %r23;
	setp.lt.s32	%p2, %r23, %r11;
	@%p2 bra 	BB85_2;

BB85_3:
	bar.sync 	0;
	setp.lt.u32	%p3, %r1, 2;
	@%p3 bra 	BB85_6;

	mov.u32 	%r16, WARP_SZ;
	mov.u32 	%r17, 32;
	sub.s32 	%r18, %r17, %r16;
	shl.b32 	%r19, %r18, 8;
	or.b32  	%r8, %r19, 31;
	mov.u32 	%r24, 1;

BB85_5:
	// inline asm
	shfl.down.b32 %f10, %f12, %r24, %r8;
	// inline asm
	min.f32 	%f12, %f12, %f10;
	shl.b32 	%r24, %r24, 1;
	setp.lt.u32	%p4, %r24, %r1;
	@%p4 bra 	BB85_5;

BB85_6:
	and.b32  	%r22, %r3, 31;
	setp.ne.s32	%p5, %r22, 0;
	@%p5 bra 	BB85_8;

	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.u32 	%rd7, %r2, 4;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.f32 	[%rd8], %f12;

BB85_8:
	ret;
}

.func  (.param .b64 func_retval0) __internal_accurate_pow(
	.param .b64 __internal_accurate_pow_param_0
)
{
	.reg .pred 	%p<9>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<52>;
	.reg .f64 	%fd<134>;


	ld.param.f64 	%fd12, [__internal_accurate_pow_param_0];
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r49}, %fd12;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r48, %temp}, %fd12;
	}
	shr.u32 	%r50, %r49, 20;
	setp.ne.s32	%p1, %r50, 0;
	@%p1 bra 	BB86_2;

	mul.f64 	%fd13, %fd12, 0d4350000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r49}, %fd13;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r48, %temp}, %fd13;
	}
	shr.u32 	%r16, %r49, 20;
	add.s32 	%r50, %r16, -54;

BB86_2:
	add.s32 	%r51, %r50, -1023;
	and.b32  	%r17, %r49, -2146435073;
	or.b32  	%r18, %r17, 1072693248;
	mov.b64 	%fd132, {%r48, %r18};
	setp.lt.u32	%p2, %r18, 1073127583;
	@%p2 bra 	BB86_4;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r19, %temp}, %fd132;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r20}, %fd132;
	}
	add.s32 	%r21, %r20, -1048576;
	mov.b64 	%fd132, {%r19, %r21};
	add.s32 	%r51, %r50, -1022;

BB86_4:
	add.f64 	%fd15, %fd132, 0d3FF0000000000000;
	// inline asm
	rcp.approx.ftz.f64 %fd14,%fd15;
	// inline asm
	neg.f64 	%fd16, %fd15;
	mov.f64 	%fd17, 0d3FF0000000000000;
	fma.rn.f64 	%fd18, %fd16, %fd14, %fd17;
	fma.rn.f64 	%fd19, %fd18, %fd18, %fd18;
	fma.rn.f64 	%fd20, %fd19, %fd14, %fd14;
	add.f64 	%fd21, %fd132, 0dBFF0000000000000;
	mul.f64 	%fd22, %fd21, %fd20;
	fma.rn.f64 	%fd23, %fd21, %fd20, %fd22;
	mul.f64 	%fd24, %fd23, %fd23;
	mov.f64 	%fd25, 0d3ED0F5D241AD3B5A;
	mov.f64 	%fd26, 0d3EB0F5FF7D2CAFE2;
	fma.rn.f64 	%fd27, %fd26, %fd24, %fd25;
	mov.f64 	%fd28, 0d3EF3B20A75488A3F;
	fma.rn.f64 	%fd29, %fd27, %fd24, %fd28;
	mov.f64 	%fd30, 0d3F1745CDE4FAECD5;
	fma.rn.f64 	%fd31, %fd29, %fd24, %fd30;
	mov.f64 	%fd32, 0d3F3C71C7258A578B;
	fma.rn.f64 	%fd33, %fd31, %fd24, %fd32;
	mov.f64 	%fd34, 0d3F6249249242B910;
	fma.rn.f64 	%fd35, %fd33, %fd24, %fd34;
	mov.f64 	%fd36, 0d3F89999999999DFB;
	fma.rn.f64 	%fd37, %fd35, %fd24, %fd36;
	sub.f64 	%fd38, %fd21, %fd23;
	add.f64 	%fd39, %fd38, %fd38;
	neg.f64 	%fd40, %fd23;
	fma.rn.f64 	%fd41, %fd40, %fd21, %fd39;
	mul.f64 	%fd42, %fd20, %fd41;
	fma.rn.f64 	%fd43, %fd24, %fd37, 0d3FB5555555555555;
	mov.f64 	%fd44, 0d3FB5555555555555;
	sub.f64 	%fd45, %fd44, %fd43;
	fma.rn.f64 	%fd46, %fd24, %fd37, %fd45;
	add.f64 	%fd47, %fd46, 0d0000000000000000;
	add.f64 	%fd48, %fd47, 0dBC46A4CB00B9E7B0;
	add.f64 	%fd49, %fd43, %fd48;
	sub.f64 	%fd50, %fd43, %fd49;
	add.f64 	%fd51, %fd48, %fd50;
	mul.rn.f64 	%fd52, %fd23, %fd23;
	neg.f64 	%fd53, %fd52;
	fma.rn.f64 	%fd54, %fd23, %fd23, %fd53;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r22, %temp}, %fd42;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r23}, %fd42;
	}
	add.s32 	%r24, %r23, 1048576;
	mov.b64 	%fd55, {%r22, %r24};
	fma.rn.f64 	%fd56, %fd23, %fd55, %fd54;
	mul.rn.f64 	%fd57, %fd52, %fd23;
	neg.f64 	%fd58, %fd57;
	fma.rn.f64 	%fd59, %fd52, %fd23, %fd58;
	fma.rn.f64 	%fd60, %fd52, %fd42, %fd59;
	fma.rn.f64 	%fd61, %fd56, %fd23, %fd60;
	mul.rn.f64 	%fd62, %fd49, %fd57;
	neg.f64 	%fd63, %fd62;
	fma.rn.f64 	%fd64, %fd49, %fd57, %fd63;
	fma.rn.f64 	%fd65, %fd49, %fd61, %fd64;
	fma.rn.f64 	%fd66, %fd51, %fd57, %fd65;
	add.f64 	%fd67, %fd62, %fd66;
	sub.f64 	%fd68, %fd62, %fd67;
	add.f64 	%fd69, %fd66, %fd68;
	add.f64 	%fd70, %fd23, %fd67;
	sub.f64 	%fd71, %fd23, %fd70;
	add.f64 	%fd72, %fd67, %fd71;
	add.f64 	%fd73, %fd69, %fd72;
	add.f64 	%fd74, %fd42, %fd73;
	add.f64 	%fd75, %fd70, %fd74;
	sub.f64 	%fd76, %fd70, %fd75;
	add.f64 	%fd77, %fd74, %fd76;
	xor.b32  	%r25, %r51, -2147483648;
	mov.u32 	%r26, 1127219200;
	mov.b64 	%fd78, {%r25, %r26};
	mov.u32 	%r27, -2147483648;
	mov.b64 	%fd79, {%r27, %r26};
	sub.f64 	%fd80, %fd78, %fd79;
	mov.f64 	%fd81, 0d3FE62E42FEFA39EF;
	fma.rn.f64 	%fd82, %fd80, %fd81, %fd75;
	neg.f64 	%fd83, %fd80;
	fma.rn.f64 	%fd84, %fd83, %fd81, %fd82;
	sub.f64 	%fd85, %fd84, %fd75;
	sub.f64 	%fd86, %fd77, %fd85;
	mov.f64 	%fd87, 0d3C7ABC9E3B39803F;
	fma.rn.f64 	%fd88, %fd80, %fd87, %fd86;
	add.f64 	%fd89, %fd82, %fd88;
	sub.f64 	%fd90, %fd82, %fd89;
	add.f64 	%fd91, %fd88, %fd90;
	mov.f64 	%fd92, 0d4000000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r28}, %fd92;
	}
	add.s32 	%r29, %r28, %r28;
	setp.gt.u32	%p3, %r29, -33554433;
	and.b32  	%r30, %r28, -15728641;
	selp.b32	%r31, %r30, %r28, %p3;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r32, %temp}, %fd92;
	}
	mov.b64 	%fd93, {%r32, %r31};
	mul.rn.f64 	%fd94, %fd89, %fd93;
	neg.f64 	%fd95, %fd94;
	fma.rn.f64 	%fd96, %fd89, %fd93, %fd95;
	fma.rn.f64 	%fd97, %fd91, %fd93, %fd96;
	add.f64 	%fd4, %fd94, %fd97;
	sub.f64 	%fd98, %fd94, %fd4;
	add.f64 	%fd5, %fd97, %fd98;
	mov.f64 	%fd99, 0d4338000000000000;
	mov.f64 	%fd100, 0d3FF71547652B82FE;
	fma.rn.f64 	%fd101, %fd4, %fd100, %fd99;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r13, %temp}, %fd101;
	}
	mov.f64 	%fd102, 0dC338000000000000;
	add.rn.f64 	%fd103, %fd101, %fd102;
	mov.f64 	%fd104, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd105, %fd103, %fd104, %fd4;
	mov.f64 	%fd106, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd107, %fd103, %fd106, %fd105;
	mov.f64 	%fd108, 0d3E928AF3FCA213EA;
	mov.f64 	%fd109, 0d3E5ADE1569CE2BDF;
	fma.rn.f64 	%fd110, %fd109, %fd107, %fd108;
	mov.f64 	%fd111, 0d3EC71DEE62401315;
	fma.rn.f64 	%fd112, %fd110, %fd107, %fd111;
	mov.f64 	%fd113, 0d3EFA01997C89EB71;
	fma.rn.f64 	%fd114, %fd112, %fd107, %fd113;
	mov.f64 	%fd115, 0d3F2A01A014761F65;
	fma.rn.f64 	%fd116, %fd114, %fd107, %fd115;
	mov.f64 	%fd117, 0d3F56C16C1852B7AF;
	fma.rn.f64 	%fd118, %fd116, %fd107, %fd117;
	mov.f64 	%fd119, 0d3F81111111122322;
	fma.rn.f64 	%fd120, %fd118, %fd107, %fd119;
	mov.f64 	%fd121, 0d3FA55555555502A1;
	fma.rn.f64 	%fd122, %fd120, %fd107, %fd121;
	mov.f64 	%fd123, 0d3FC5555555555511;
	fma.rn.f64 	%fd124, %fd122, %fd107, %fd123;
	mov.f64 	%fd125, 0d3FE000000000000B;
	fma.rn.f64 	%fd126, %fd124, %fd107, %fd125;
	fma.rn.f64 	%fd127, %fd126, %fd107, %fd17;
	fma.rn.f64 	%fd128, %fd127, %fd107, %fd17;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r14, %temp}, %fd128;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r15}, %fd128;
	}
	shl.b32 	%r33, %r13, 20;
	add.s32 	%r34, %r15, %r33;
	mov.b64 	%fd133, {%r14, %r34};
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r35}, %fd4;
	}
	mov.b32 	 %f2, %r35;
	abs.f32 	%f1, %f2;
	setp.lt.f32	%p4, %f1, 0f4086232B;
	@%p4 bra 	BB86_7;

	setp.lt.f64	%p5, %fd4, 0d0000000000000000;
	add.f64 	%fd129, %fd4, 0d7FF0000000000000;
	selp.f64	%fd133, 0d0000000000000000, %fd129, %p5;
	setp.geu.f32	%p6, %f1, 0f40874800;
	@%p6 bra 	BB86_7;

	shr.u32 	%r36, %r13, 31;
	add.s32 	%r37, %r13, %r36;
	shr.s32 	%r38, %r37, 1;
	shl.b32 	%r39, %r38, 20;
	add.s32 	%r40, %r39, %r15;
	mov.b64 	%fd130, {%r14, %r40};
	sub.s32 	%r41, %r13, %r38;
	shl.b32 	%r42, %r41, 20;
	add.s32 	%r43, %r42, 1072693248;
	mov.u32 	%r44, 0;
	mov.b64 	%fd131, {%r44, %r43};
	mul.f64 	%fd133, %fd130, %fd131;

BB86_7:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r45}, %fd133;
	}
	and.b32  	%r46, %r45, 2147483647;
	setp.ne.s32	%p7, %r46, 2146435072;
	@%p7 bra 	BB86_9;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r47, %temp}, %fd133;
	}
	setp.eq.s32	%p8, %r47, 0;
	@%p8 bra 	BB86_10;

BB86_9:
	fma.rn.f64 	%fd133, %fd133, %fd5, %fd133;

BB86_10:
	st.param.f64	[func_retval0+0], %fd133;
	ret;
}


